var documenterSearchIndex = {"docs":
[{"location":"co2_cap.html#CO2-Capacity-1","page":"CO2 Capacity","title":"CO2 Capacity","text":"","category":"section"},{"location":"co2_cap.html#","page":"CO2 Capacity","title":"CO2 Capacity","text":"Modules = [GenX]\r\nPages = [\"co2_cap.jl\"]","category":"page"},{"location":"co2_cap.html#GenX.co2_cap-Tuple{JuMP.Model,Dict,Dict}","page":"CO2 Capacity","title":"GenX.co2_cap","text":"co2_cap(EP::Model, inputs::Dict, setup::Dict)\n\nThis policy constraints mimics the CO_2 emissions cap and permit trading systems, allowing for emissions trading across each zone for which the cap applies. The constraint p in mathcalP^CO_2 can be flexibly defined for mass-based or rate-based emission limits for one or more model zones, where zones can trade CO_2 emissions permits and earn revenue based on their CO_2 allowance. Note that if the model is fully linear (e.g. no unit commitment or linearized unit commitment), the dual variable of the emissions constraints can be interpreted as the marginal CO_2 price per tonne associated with the emissions target. Alternatively, for integer model formulations, the marginal CO_2 price can be obtained after solving the model with fixed integer/binary variables.\n\nThe CO_2 emissions limit can be defined in one of the following ways: a) a mass-based limit defined in terms of annual CO_2 emissions budget (in million tonnes of CO2), b) a load-side rate-based limit defined in terms of tonnes CO_2 per MWh of demand and c) a generation-side rate-based limit defined in terms of tonnes CO_2 per MWh of generation.\n\nMass-based emissions constraint\n\nMass-based emission limits are implemented as per Eq. \\ref{eq:MassCO2}. For each constraint, p in mathcalP^CO_2_mass, we define a set of zones z in mathcalZ^CO_2_pmass that can trade CO_2 allowance. Input data for each constraint  p in mathcalP^CO_2_mass requires the CO_2 allowance/ budget for each model zone, epsilon^CO_2_zp mass, to be provided in terms of million metric tonnes. For every generator y, the parameter epsilon_yz^CO2 reflects the specific CO2$ emission intensity in tCO_2/MWh associated with its operation.  The resulting constraint is given as:\n\nbeginaligned\n    sum_z in mathcalZ^CO_2_pmass sum_y in mathcalG sum_t in mathcalT left(epsilon_yz^CO_2 times omega_t times Theta_yzt right)\n    leq sum_z in mathcalZ^CO_2_pmass epsilon^CO_2_zp mass hspace1 cm  forall p in mathcalP^CO_2_mass\nendaligned\n\nIn the above constraint, we include both power discharge and charge term for each resource to account for the potential for CO_2 emissions (or removal when considering negative emissions technologies) associated with each step. Note that if a limit is applied to each zone separately, then the set mathcalZ^CO_2_pmass will contain only one zone with no possibility of trading. If a system-wide emission limit constraint is applied, then mathcalZ^CO_2_pmass will be equivalent to a set of all zones.\n\nLoad-side rate-based emissions constraint\n\nWe modify the right hand side of the above mass-based constraint, p in mathcalP^CO_2_load, to set emissions target based on a CO_2 emission rate limit in tCO_2/MWh times the total demand served in each zone. In the following constraint, total demand served takes into account non-served energy and storage related losses. Here, epsilon_zpload^maxCO_2 denotes the emission limit in terms on tCO_2/MWh.\n\nbeginaligned\n    sum_z in mathcalZ^CO_2_pload sum_y in mathcalG sum_t in mathcalT left(epsilon_yz^CO_2 times omega_t times Theta_ytz right)\n    leq  sum_z in mathcalZ^CO_2_pload sum_t in mathcalT  left(epsilon_zpload^CO_2 times  omega_t times D_zt right)   +  sum_z in mathcalZ^CO_2_pload sum_y in mathcalO  sum_t in mathcalT left(epsilon_zpload^CO_2 times omega_t times left(Pi_ytz - Theta_ytz right) right)   -  sum_z in mathcalZ^CO_2_pload sum_s in mathcalS  sum_t in mathcalT  left(epsilon_zpload^CO_2 times omega_t times Lambda_sztright) hspace1 cm  forall p in mathcalP^CO_2_load\nendaligned\n\nGenerator-side emissions rate-based constraint\n\nSimilarly, a generation based emission constraint is defined by setting the emission limit based on the total generation times the carbon emission rate limit in tCO_2/MWh of the region. The resulting constraint is given as:\n\nbeginaligned\nsum_z in mathcalZ^CO_2_pgen sum_y in mathcalG sum_t in mathcalT  left(epsilon_yz^CO_2 times omega_t times Theta_ytz right) \r\n    leq sum_z in mathcalZ^CO_2_pgen sum_y in mathcalG sum_t in mathcalT  left(epsilon_zpgen^CO_2 times  omega_t times Theta_ytz right)  hspace1 cm  forall p in mathcalP^CO_2_gen\nendaligned\n\nNote that the generator-side rate-based constraint can be used to represent a fee-rebate (``feebate'') system: the dirty generators that emit above the bar (epsilon_zpgen^maxCO_2) have to buy emission allowances from the emission regulator in the region z where they are located; in the same vein, the clean generators get rebates from the emission regulator at an emission allowance price being the dual variable of the emissions rate constraint.\n\n\n\n\n\n","category":"method"},{"location":"co2_cap.html#GenX.load_co2_cap-Tuple{Dict,AbstractString,AbstractString,Dict}","page":"CO2 Capacity","title":"GenX.load_co2_cap","text":"load_co2_cap(setup::Dict, path::AbstractString, sep::AbstractString, inputs_co2::Dict)\n\nFunction for reading input parameters related to CO_2 emissions cap constraints\n\n\n\n\n\n","category":"method"},{"location":"curtailable_variable_renewable.html#Curtailable-Variable-Renewables-1","page":"Curtailable Variable Renewable","title":"Curtailable Variable Renewables","text":"","category":"section"},{"location":"curtailable_variable_renewable.html#","page":"Curtailable Variable Renewable","title":"Curtailable Variable Renewable","text":"Modules = [GenX]\r\nPages = [\"curtailable_variable_renewable.jl\"]","category":"page"},{"location":"curtailable_variable_renewable.html#GenX.curtailable_variable_renewable-Tuple{JuMP.Model,Dict,Int64}","page":"Curtailable Variable Renewable","title":"GenX.curtailable_variable_renewable","text":"curtailable_variable_renewable(EP::Model, inputs::Dict, Reserves::Int)\n\nThis function defines the constraints for operation of variable renewable energy (VRE) resources whose output can be curtailed (y in mathcalVRE), such as utility-scale solar PV or wind power resources or run-of-river hydro resources that can spill water.\n\nThe operational constraints for VRE resources are a function of each technology's time-dependent hourly capacity factor (or availability factor, rho^max_yzt), in per unit terms, and the total available capacity (Delta^total_yz).\n\nPower output in each time step\n\nFor each VRE technology type y and model zone z, the model allows for incorporating multiple bins with different parameters for resource quality (rho^max_yzt), maximum availability (overlineOmega_yz) and investment cost (Pi^INVEST_yz, for example, due to interconnection cost differences). We define variables related to installed capacity (Delta_yz) and retired capacity (Delta_yz) for all resource bins for a particular VRE resource type y and zone z (overlinemathcalVRE^yz). However, the variable corresponding to power output in each timestep is only defined for the first bin. Parameter VREIndex_yz, is used to keep track of the first bin, where VREIndex_yz=1 for the first bin and VREIndex_yz=0 for the remaining bins. This approach allows for modeling many different bins per VRE technology type and zone while significantly reducing the number of operational variable (related to power output for each time step from each bin) added to the model with every additional bin. Thus, the maximum power output for each VRE resource type in each zone is given by the following equation (Eq. \\ref{eq:VREpowerout}).\n\nbeginaligned\n\tTheta_yzt leq sum_(xz)in overlinemathcalVRE^xzrho^max_xzt times Delta^total_xz  hspace2 cm  forall yz in (yz)VREIndex_yz=1 z in mathcalZt in mathcalT\nendaligned\n\nThe above constraint is defined as an inequality instead of an equality to allow for VRE power output to be curtailed if desired. This adds the possibility of introducing VRE curtailment as an extra degree of freedom to guarantee that generation exactly meets demand in each time step.\n\nNote that if Reserves=1 indicating that frequency regulation and operating reserves are modeled, then this function calls curtailable_variable_renewable_reserves(), which replaces the above constraints with a formulation inclusive of reserve provision.\n\n\n\n\n\n","category":"method"},{"location":"curtailable_variable_renewable.html#GenX.curtailable_variable_renewable_reserves-Tuple{JuMP.Model,Dict}","page":"Curtailable Variable Renewable","title":"GenX.curtailable_variable_renewable_reserves","text":"curtailable_variable_renewable_reserves(EP::Model, inputs::Dict)\n\nWhen modeling operating reserves, this function is called by curtailable_variable_renewable(), which modifies the constraint for maximum power output in each time step from VRE resources to account for procuring some of the available capacity for frequency regulation (f_yzt) and upward operating (spinning) reserves (r_yzt).\n\nbeginaligned\n\tTheta_yzt + f_yzt + r_yzt leq sum_(xz)in overlinemathcalVRE^xzrho^max_xzttimes Delta^total_xz  hspace01 cm   forall yz in (yz)VREIndex_yz=1 z in mathcalZt in mathcalT\nendaligned\n\nThe amount of downward frequency regulation reserves also cannot exceed the current power output.\n\nbeginaligned\n\tf_yzt leq Theta_yzt\n\tforall yz in (yz)VREIndex_yz=1 z in mathcalZt in mathcalT\nendaligned\n\nThe amount of frequency regulation and operating reserves procured in each time step is bounded by the user-specified fraction (upsilon^reg_yz,upsilon^rsv_yz) of available capacity in each period for each reserve type, reflecting the maximum ramp rate for the VRE resource in whatever time interval defines the requisite response time for the regulation or reserve products (e.g., 5 mins or 15 mins or 30 mins). These response times differ by system operator and reserve product, and so the user should define these parameters in a self-consistent way for whatever system context they are modeling.\n\nbeginaligned\n\tr_yzt leq upsilon^rsv_yz sum_(xz)in overlinemathcalVRE^xzrho^max_xzttimes Delta^total_xz  hspace1 cm   forall yz in (yz)VREIndex_yz=1 z in mathcalZt in mathcalT \r\n\tf_yzt leq upsilon^reg_yz sum_(xz)in overlinemathcalVRE^xzrho^max_xzttimes Delta^total_xz  hspace1 cm   forall yz in (yz)VREIndex_yz=1 z in mathcalZt in mathcalT\nendaligned\n\n\n\n\n\n","category":"method"},{"location":"thermal.html#Thermal-1","page":"Thermal","title":"Thermal","text":"","category":"section"},{"location":"thermal.html#","page":"Thermal","title":"Thermal","text":"Modules = [GenX]\r\nPages = [\"thermal.jl\"]","category":"page"},{"location":"thermal.html#GenX.thermal-Tuple{JuMP.Model,Dict,Int64,Int64}","page":"Thermal","title":"GenX.thermal","text":"thermal(EP::Model, inputs::Dict, UCommit::Int, Reserves::Int)\n\nThe thermal module creates decision variables, expressions, and constraints related to thermal power plants e.g. coal, oil or natural gas steam plants, natural gas combined cycle and combustion turbine plants, nuclear, hydrogen combustion etc.\n\nThis module uses the following 'helper' functions in separate files: thermalcommit() for thermal resources subject to unit commitment decisions and constraints (if any) and thermalno_commit() for thermal resources not subject to unit commitment (if any).\n\n\n\n\n\n","category":"method"},{"location":"new_doc_page.html#Header-1","page":"Header","title":"Header","text":"","category":"section"},{"location":"new_doc_page.html#Sub-header-1","page":"Header","title":"Sub header","text":"","category":"section"},{"location":"new_doc_page.html#","page":"Header","title":"Header","text":"This is a new documantation page","category":"page"},{"location":"new_doc_page.html#","page":"Header","title":"Header","text":"Modules = [GenX]\r\nPages = [\"configure_cbc.jl\"]","category":"page"},{"location":"new_doc_page.html#GenX.configure_cbc-Tuple{String}","page":"Header","title":"GenX.configure_cbc","text":"configure_cbc(solver_settings_path::String)\n\nReads user-specified solver settings from cbcsettings.yml in the directory specified by the string solversettings_path.\n\nReturns a MathOptInterface OptimizerWithAttributes Cbc optimizer instance to be used in the GenX.generate_model() method.\n\nThe Cbc optimizer instance is configured with the following default parameters if a user-specified parameter for each respective field is not provided:\n\nseconds = 1e-6\nlogLevel = 1e-6\nmaxSolutions = -1\nmaxNodes = -1\nallowableGap = -1\nratioGap = Inf\nthreads = 1\n\n\n\n\n\n","category":"method"},{"location":"cap_reserve_margin.html#Capacity-Reserve-Margin-1","page":"Capacity Reserve Margin","title":"Capacity Reserve Margin","text":"","category":"section"},{"location":"cap_reserve_margin.html#","page":"Capacity Reserve Margin","title":"Capacity Reserve Margin","text":"Modules = [GenX]\r\nPages = [\"cap_reserve_margin.jl\"]","category":"page"},{"location":"cap_reserve_margin.html#GenX.cap_reserve_margin-Tuple{JuMP.Model,Dict,Dict}","page":"Capacity Reserve Margin","title":"GenX.cap_reserve_margin","text":"cap_reserve_margin(EP::Model, inputs::Dict, setup::Dict)\n\nInstead of modeling capacity reserve margin requirement (a.k.a. capacity market or resource adequacy requirement) using an annual constraint, we model each requirement with hourly constraint by simulating the activation of the capacity obligation (Eq. \\ref{eq:CRM}). We define capacity reserve margin constraint for subsets of zones,z  in mathcalZ^CRM_p, and each subset stands for a locational deliverability area (LDA) or a reserve sharing group.  For thermal resources, the available capacity is the total capacity in the LDA derated by the outage rate, epsilon_yzp^CRM. For storage (y in mathcalO), variable renewable energy (y in mathcalVRE), and  flexibile demand resources (y in mathcalDF), the available capacity is the net injection into the transmission network in time step t derated by the derating factor, also stored in the parameter, epsilon_yzp^CRM. If the imported capacity is eligible to provide capacity to the CRM constraint, the inbound powerflow on all lines mathcalL_p^in in time step t will be derated to form the available capacity from outside of the LDA. The reverse is true as well: the outbound derated powerflow on all lines mathcalL_p^out in time step t is taken out from the total available capacity. The derating factor should be equal to the expected availability of the resource during periods when the capacity reserve constraint is binding (e.g. accounting for forced outages during supply constrained periods) and is similar to derating factors used in the capacity markets. On top of the flexible demand resources, load curtailment can also provide capacity (i.e., demand response or load management). We allow all segments of voluntary load curtailment, s geq 2 in S, to contribute to capacity requirements. The first segment s = 1 in S corresponds to involuntary demand curtailment or emergency load shedding at the price cap or value of lost load, and thus does not contribute to reserve requirements.  Note that the time step-weighted sum of the shadow prices of this constraint corresponds to the capacity market payments reported by ISOs with mandate capacity market mechanism.\n\nbeginaligned\n    sum_z  in mathcalZ^CRM_p Big( sum_y in mathcalH epsilon_yzp^CRM times Delta^texttotal_yz + sum_y in mathcalVRE epsilon_yzp^CRM times Theta_yzt \r\n   +  sum_y in mathcalO epsilon_yzp^CRM times left(Theta_yzt - Pi_yzt right) + sum_y in mathcalDF epsilon_yzp^CRM times left(Pi_yzt - Theta_yzt right) \r\n   +  sum_l in mathcalL_p^in epsilon_yzp^CRM times Phi_lt -  sum_l in mathcalL_p^out epsilon_yzp^CRM times Phi_lt\n   +  sum_s geq 2 Lambda_stz  Big) \r\n    geq sum_z  in mathcalZ^CRM_p left( left(1 + RM_zp^CRM right) times D_zt right)  hspace1 cm  forall t in mathcalT forall pin mathcalP^CRM\nendaligned\n\nNote that multiple capacity reserve margin requirements can be specified covering different individual zones or aggregations of zones, where the total number of constraints is specified by the GenX settings parameter '''CapacityReserveMargin''' (where this parameter should be an integer value > 0).\n\n\n\n\n\n","category":"method"},{"location":"cap_reserve_margin.html#GenX.load_cap_reserve_margin-Tuple{Dict,AbstractString,AbstractString,Dict}","page":"Capacity Reserve Margin","title":"GenX.load_cap_reserve_margin","text":"load_cap_reserve_margin(setup::Dict, path::AbstractString, sep::AbstractString, inputs_crm::Dict, network_var::DataFrame)\n\nFunction for reading input parameters related to planning reserve margin constraints\n\n\n\n\n\n","category":"method"},{"location":"ucommit.html#Unit-Commitment-1","page":"Unit Commitment","title":"Unit Commitment","text":"","category":"section"},{"location":"ucommit.html#","page":"Unit Commitment","title":"Unit Commitment","text":"Modules = [GenX]\r\nPages = [\"ucommit.jl\"]","category":"page"},{"location":"ucommit.html#GenX.ucommit-Tuple{JuMP.Model,Dict,Int64}","page":"Unit Commitment","title":"GenX.ucommit","text":"ucommit(EP::Model, inputs::Dict, UCommit::Int)\n\nThis function creates decision variables and cost expressions associated with thermal plant unit commitment or start-up and shut-down decisions (cycling on/off)\n\nUnit commitment decision variables:\n\nThis function defines the following decision variables:\n\nnu_ytz\n\ndesignates the commitment state of generator cluster y in zone z at time t; chi_ytz represents number of startup decisions in cluster y in zone z at time t; zeta_ytz represents number of shutdown decisions in cluster y in zone z at time t.\n\nCost expressions:\n\nThe total cost of start-ups across all generators subject to unit commitment (y in UC) and all time periods, t is expressed as:\n\nbeginaligned\n\tC^start = sum_y in UC t in T omega_t times start_cost_y times chi_yt\nendaligned\n\nThe sum of start-up costs is added to the objective function.\n\n\n\n\n\n","category":"method"},{"location":"additional_features.html#Additional-Features-1","page":"Additional Features","title":"Additional Features","text":"","category":"section"},{"location":"additional_features.html#Modeling-to-Generate-Alternatives-1","page":"Additional Features","title":"Modeling to Generate Alternatives","text":"","category":"section"},{"location":"additional_features.html#","page":"Additional Features","title":"Additional Features","text":"Modules = [GenX]\r\nPages = [\"modeling_to_generate_alternatives.jl\"]","category":"page"},{"location":"additional_features.html#GenX.mga-Tuple{JuMP.Model,AbstractString,Dict,Dict,AbstractString}","page":"Additional Features","title":"GenX.mga","text":"mga(EP::Model, path::AbstractString, setup::Dict, inputs::Dict, outpath::AbstractString)\n\nWe have implemented an updated Modeling to Generate Alternatives (MGA) Algorithm proposed by Evelina et al., (2017) to generate a set of feasible, near cost-optimal technology portfolios. This algorithm was developed by Brill Jr, E. D., 1979 and introduced to energy system planning by DeCarolia, J. F., 2011.\n\nTo create the MGA formulation, we replace the cost-minimizing objective function of GenX with a new objective function that creates multiple generation portfolios by zone. We further add a new budget constraint based on the optimal objective function value f^* of the least-cost model and the user-specified value of slack delta. After adding the slack constraint, the resulting MGA formulation is given as:\n\nbeginaligned\n\ttextmaxmin quad\n\tsum_z in mathcalZsum_r in mathcalR beta_zr^kP_zr\r\n\ttextst quad\n\tP_zr = sum_y in mathcalGsum_t in mathcalT omega_t Theta_ytzr  \r\n\t f leq f^* + delta \r\n\tAx = b\nendaligned\n\nwhere, beta_zr is a random objective fucntion coefficient betwen 0100 for MGA iteration k. Theta_ytzr is a generation of technology y in zone z in time period t that belongs to a resource type r. We aggregate Theta_ytzr into a new variable P_zr that represents total generation from technology type r in a zone z. In Constraint \\ref{budget}, delta denote the increase in budget from the least-cost solution and f represents the expression for the total system cost. Constraint \\ref{misc} represents all other constraints in the power system model. We then solve the formulation with minimization and maximization objective function to explore near optimal solution space.\n\n\n\n\n\n","category":"method"},{"location":"data_documentation.html#GenX-Database-Documentation-1","page":"Model Inputs/Outputs Documentation","title":"GenX Database Documentation","text":"","category":"section"},{"location":"data_documentation.html#Model-setup-parameters-1","page":"Model Inputs/Outputs Documentation","title":"1 Model setup parameters","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"Model settings parameters are specified in a GenX_Settings.yml file which should be located in the current working directory (or to specify an alternative location, edit the '''settings_path''' variable in your Run.jl file). Settings include those related to model structure, solution strategy and outputs, policy constraints, and others. Model structure related settings parameter affects the formulation of the model constraint and objective functions. Computational performance related parameters affect the accuracy of the solution. Policy related parameters specify the policy type and policy goal. Network related parameters specify settings related to transmission network expansion and losses. Note that all settings parameters are case sensitive.","category":"page"},{"location":"data_documentation.html#Table-1a:-Summary-of-the-Model-settings-parameters-1","page":"Model Inputs/Outputs Documentation","title":"Table 1a: Summary of the Model settings parameters","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"","category":"page"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"Settings Parameter Description\nModel structure related \nOperationWrapping Select temporal resolution for operations constraints.\n 0 = Models intra-annual operations as a single contiguous period. Inter-temporal constraint are defined based on linking first time step with the last time step of the year.\n 1 = Models intra-annual operations using multiple representative periods. Inter-temporal constraints are defined based on linking first time step with the last time step of each representative period.\nLongDurationStorage Select whether inter-period energy exchange allowed for storage technologies.\n 0= inter-period energy exchange not allowed.\n 1 = inter-period energy exchange allowed.\nTimeDomainReduction 1 = Use time domain reduced inputs available in the folder with the name defined by settings parameter TimeDomainReduction Folder. If such a folder does not exist or it is empty, time domain reduction will reduce the input data and save the results in the folder with this name. These reduced inputs are based on full input data provided by user in Load_data.csv, Generators_variability.csv, and Fuels_data.csv.\n 0 = Use full input data as provided.\nTimeDomainReductionFolder Name of the folder where time domain reduced input data is accessed and stored.\nUCommit Select technical resolution of of modeling thermal generators.\n 0 = no unit commitment.\n 1 = unit commitment with integer clustering.\n 2 = unit commitment with linearized clustering.\nNetworkExpansion Flag for activating or deactivating inter-regional transmission expansion.\n 1 = active\n 0 = modeling single zone or for multi-zone problems, inter regional transmission expansion is not allowed.\nTrans_Loss_Segments Number of segments to use in piece-wise linear approximation of losses.\n 1 = linear\n >=2 = piece-wise quadratic\nReserves Flag for modeling operating reserves .\n 0 = no operating reserves\n 1 regulation (primary) and spinning (secondary) reserves\nStorageLosses Flag to account for storage related losses.\n 0 = VRE and CO2 constraint DO NOT account for energy lost.\n 1 = constraint DO account for energy lost.\nPolicy related \nEnergyShareRequirement Flag for specifying regional renewable portfolio standard (RPS) and clean energy standard policy (CES) related constraints.\n Default = 0 (No RPS or CES constraints).\n 1 = activate energy share requirement related constraints.\nCO2Cap Flag for specifying the type of CO2 emission limit constraint.\n 0 = no CO2 emission limit\n 1 = mass-based emission limit constraint\n 2 = load + rate-based emission limit constraint\n 3 = generation + rate-based emission limit constraint\nCapacityReserveMargin Flag for Capacity Reserve Margin constraints.\n Default = 0 (No Capacity Reserve Margin constraints)\n 1 = activate Capacity Reserve Margin related constraints\nMinCapReq Minimum technology carve out requirement constraints.\n 1 = if one or more minimum technology capacity constraints are specified\n 0 = otherwise\nSolution strategy and outputs \nSolver Solver name is case sensitive (CPLEX, Gurobi, clp).\nParameterScale Flag to turn on parameter scaling wherein load, capacity and power variables defined in GW rather than MW. This flag aides in improving the computational performance of the model.\n 1 = Scaling is activated.\n 0 = Scaling is not activated.\nModelingToGenerateAlternatives Modeling to Generate Alternative Algorithm.\n 1 = Use the algorithm.\n 0 = Do not use the algorithm.\nModelingtoGenerateAlternativeSlack value used to define the maximum deviation from the least-cost solution as a part of Modeling to Generate Alternative Algorithm. Can take any real value between 0 and 1.\nWriteShadowPrices Get dual of various model related constraints, including to estimate electricity prices, stored value of energy and the marginal CO2 prices.\nMiscellaneous \nPrintModel Flag for printnig the model equations as .lp file.\n 1= including the model equation as an output\n 0 for the model equation not being included as an output\nMacOrWindows Set to either Mac (also works for Linux) or Windows to ensure use of proper file directory separator \\ or /.","category":"page"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"Additionally, Solver related settings parameters are specified in the appropriate solver settings .yml file (e.g. gurobi_settings.yml or cplex_settings.yml), which should be located in the current working directory (or to specify an alternative location, edit the '''solversettingspath''' variable in your Run.jl file). Note that GenX supplies default settings for most solver settings in the various solver-specific functions found in the /src/configure_solver/ directory. To overwrite default settings, you can specify the below Solver specific settings. Note that appropriate solver settings are specific to each solver.","category":"page"},{"location":"data_documentation.html#Table-1b:-Summary-of-the-Solver-settings-parameters-1","page":"Model Inputs/Outputs Documentation","title":"Table 1b: Summary of the Solver settings parameters","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"","category":"page"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"Settings Parameter Description\nSolver settings \nMethod Algorithm used to solve continuous models or the root node of a MIP model. Generally, barrier method provides the fastest run times for real-world problem set.\n CPLEX: CPX_PARAM_LPMETHOD - Default = 0; See link for more specifications.\n Gurobi: Method - Default = -1; See link for more specifications.\n clp: SolveType - Default = 5; See link for more specifications.\nBarConvTol Convergence tolerance for barrier algorithm.\n CPLEX: CPX_PARAM_BAREPCOMP - Default = 1e-8; See link for more specifications.\n Gurobi: BarConvTol - Default = 1e-8; See linklink for more specifications.\nFeasib_Tol All constraints must be satisfied as per this tolerance. Note that this tolerance is absolute.\n CPLEX: CPX_PARAM_EPRHS - Default = 1e-6; See link for more specifications.\n Gurobi: FeasibilityTol - Default = 1e-6; See link for more specifications.\n clp: PrimalTolerance - Default = 1e-7; See link for more specifications.\n clp: DualTolerance - Default = 1e-7; See link for more specifications.\nOptimal_Tol Reduced costs must all be smaller than Optimal_Tol in the improving direction in order for a model to be declared optimal.\n CPLEX: CPX_PARAM_EPOPT - Default = 1e-6; See link for more specifications.\n Gurobi: OptimalityTol - Default = 1e-6; See link for more specifications.\nPre_Solve Controls the presolve level.\n Gurobi: Presolve - Default = -1; See link for more specifications.\n clp: PresolveType - Default = 5; See link for more specifications.\nCrossover Determines the crossover strategy used to transform the interior solution produced by barrier algorithm into a basic solution.\n CPLEX: CPX_PARAM_SOLUTIONTYPE - Default = 2; See link for more specifications.\n Gurobi: Crossover - Default = 0; See link for more specifications.\nNumericFocus Controls the degree to which the code attempts to detect and manage numerical issues.\n CPLEX: CPX_PARAM_NUMERICALEMPHASIS - Default = 0; See link for more specifications.\n Gurobi: NumericFocus - Default = 0; See link for more specifications.\nTimeLimit Time limit to terminate the solution algorithm, model could also terminate if it reaches MIPGap before this time.\n CPLEX: CPX_PARAM_TILIM- Default = 1e+75; See link for more specifications.\n Gurobi: TimeLimit - Default = infinity; See link for more specifications.\n clp: MaximumSeconds - Default = -1; See link for more specifications.\nMIPGap Optimality gap in case of mixed-integer program.\n CPLEX: CPX_PARAM_EPGAP- Default = 1e-4; See link for more specifications.\n Gurobi: MIPGap - Default = 1e-4; See link for more specifications.\nDualObjectiveLimit When using dual simplex (where the objective is monotonically changing), terminate when the objective exceeds this limit.\n clp: DualObjectiveLimit - Default = 1e308; See link for more specifications.\nMaximumIterations Terminate after performing this number of simplex iterations.\n clp: MaximumIterations - Default = 2147483647; See link for more specifications.\nLogLevel Set to 1, 2, 3, or 4 for increasing output. Set to 0 to disable output.\n clp: logLevel - Default = 1; See link for more specifications.\n cbc: logLevel - Default = 1; See link for more specifications.\nInfeasibleReturn Set to 1 to return as soon as the problem is found to be infeasible (by default, an infeasibility proof is computed as well).\n clp: InfeasibleReturn - Default = 0; See link for more specifications.\nScaling Sets or unsets scaling; 0 -off, 1 equilibrium, 2 geometric, 3 auto, 4 dynamic(later).\n clp: Scaling - Default = 3; See link for more specifications.\nPerturbation Perturbs problem; Switch on perturbation (50), automatic (100), don't try perturbing (102).\n clp: Perturbation - Default = 3; See link for more specifications.\nmaxSolutions Terminate after this many feasible solutions have been found.\n cbc: maxSolutions - Default = -1; See link for more specifications.\nmaxNodes Terminate after this many branch-and-bound nodes have been evaluated\n cbc: maxNodes - Default = -1; See link for more specifications.\nallowableGap Terminate after optimality gap is less than this value (on an absolute scale)\n cbc: allowableGap - Default = -1; See link for more specifications.\nratioGap Terminate after optimality gap is smaller than this relative fraction.\n cbc: ratioGap - Default = Inf; See link for more specifications.\nthreads Set the number of threads to use for parallel branch & bound.\n cbc: threads - Default = 1; See link for more specifications.","category":"page"},{"location":"data_documentation.html#Inputs-1","page":"Model Inputs/Outputs Documentation","title":"2 Inputs","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"All input files are in CSV format. Running the GenX model requires a minimum of five input files. Additionally, the user may need to specify five more input files based on model configuration and type of scenarios of interest. Names of the input files and their functionality is given below. Note that names of the input files are case sensitive.","category":"page"},{"location":"data_documentation.html#Table-2:-Summary-of-the-input-files-1","page":"Model Inputs/Outputs Documentation","title":"Table 2: Summary of the input files","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"","category":"page"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"Column Name Description\nMandatory Files \nFuels_data.csv Specify fuel type, CO2 emissions intensity, and time-series of fuel prices.\nNetwork.csv Specify network topology, transmission fixed costs, capacity and loss parameters.\nLoad_data.csv Specify time-series of load profiles for each model zone, weights for each time step, load shedding costs, and optional time domain reduction parameters.\nGenerators_variability.csv Specify time-series of capacity factor/availability for each resource.\nGenerators_data.csv Specify cost and performance data for generation, storage and demand flexibility resources.\nSettings-specific Files \nReserves.csv Specify operational reserve requirements as a function of load and renewables generation and penalty for not meeting these requirements.\nEnergy_share_requirement.csv Specify regional renewable portfolio standard and clean energy standard style policies requiring minimum energy generation from qualifying resources.\nCO2_cap.csv Specify regional CO2 emission limits.\nCapacity_reserve_margin.csv Specify regional capacity reserve margin requirements.\nMinimum_capacity_requirement.csv Specify regional minimum technology capacity deployment requirements.","category":"page"},{"location":"data_documentation.html#.1-Mandatory-input-data-1","page":"Model Inputs/Outputs Documentation","title":"2.1 Mandatory input data","text":"","category":"section"},{"location":"data_documentation.html#.1.1-Fuels_data.csv-1","page":"Model Inputs/Outputs Documentation","title":"2.1.1 Fuels_data.csv","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"• First row: names of all fuels used in the model instance which should match the labels used in Fuel column in the Generators_data.csv file. For renewable resources or other resources that do not consume a fuel, the name of the fuel is none.","category":"page"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"• Second row: The second row specifies the CO2 emissions intensity of each fuel in tons/MMBtu (million British thermal units). Note that by convention, tons correspond to metric tonnes and not short tons (although as long as the user is internally consistent in their application of units, either can be used).","category":"page"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"• Remaining rows: Rest of the rows in this input file specify the time-series for prices for each fuel in /MMBtu. A constant price can be specified by entering the same value for all hours.","category":"page"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"** First column:** The first column in this file denotes, Time_index, represents the index of time steps in a model instance.","category":"page"},{"location":"data_documentation.html#.1.2-Network.csv-1","page":"Model Inputs/Outputs Documentation","title":"2.1.2 Network.csv","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"This input file contains input parameters related to: 1) definition of model zones (regions between which transmission flows are explicitly modeled) and 2) definition of transmission network topology, existing capacity, losses and reinforcement costs. The following table describe each of the mandatory parameter inputs need to be specified to run an instance of the model, along with comments for the model configurations when they are needed.","category":"page"},{"location":"data_documentation.html#Table-3:-Structure-of-the-Network.csv-file-1","page":"Model Inputs/Outputs Documentation","title":"Table 3: Structure of the Network.csv file","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"","category":"page"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"Column Name Description\nMandatory Columns \nNetwork_zones Specified as z* where * is a number of the zone.\nSettings-specific Columns \nMultiple zone model \nNetwork_Lines Numerical index for each network line/\nz* (Network map) Next n columns, one per zone, with column header in format of z* where * is the number of the zone. L rows, one for each network line (or interregional path), with a 1 in the column corresponding to the 'origin' zone and a -1 in the column corresponding to the 'destination' zone for each line. No more than one column may be marked as origin and one as destination for each line, or the model will not function correctly. Note that positive flows indicate flow from origin to destination zone; negative flows indicate flow from destination to origin zone.\nLine_Max_Flow_MW Existing capacity of the inter-regional transmission line.\nNetworkExpansion = 1 \nLine_Max_Reinforcement_MW Maximum allowable capacity addition to the existing transmission line.\nLine_Reinforcement_Cost_per_MWyr Cost of adding new capacity to the inter-regional transmission line.\nTrans_Loss_Segments = 1 \nLine_Loss_Percentage fractional transmission loss for each transmission line\nTrans_Loss_Segments > 1 \nOhms Line resistance in Ohms (used to calculate I^2R losses)\nkV Line voltage in kV (used to calculate I^2R losses)\nCapacityReserveMargin > 0 \nCapRes_* Eligibility of the transmission line for adding firm capacity to the capacity reserve margin constraint. * represents the number of the capacity reserve margin constraint.\n 1 = the transmission line is eligible for adding firm capacity to the region\n 0 = the transmission line is not eligible for adding firm capacity to the region\nDerateCapRes_* (0,1) value represents the derating of the firm transmission capacity for the capacity reserve margin constraint.\nCapResExcl_* (-1,1,0) = -1 if the designated direction of the transmission line is inbound to locational deliverability area (LDA) modeled by the capacity reserve margin constraint. = 1 if the designated direction of the transmission line is outbound from the LDA modeled by the capacity reserve margin constraint. Zero otherwise.","category":"page"},{"location":"data_documentation.html#.1.3-Load_data.csv-1","page":"Model Inputs/Outputs Documentation","title":"2.1.3 Load_data.csv","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"This file includes parameters to characterize model temporal resolution to approximate annual grid operations, electricity demand for each time step for each zone, and cost of load shedding. Note that GenX is designed to model hourly time steps. With some care and effort, finer (e.g. 15 minute) or courser (e.g. 2 hour) time steps can be modeled so long as all time-related parameters are scaled appropriately (e.g. time period weights, heat rates, ramp rates and minimum up and down times for generators, variable costs, etc).","category":"page"},{"location":"data_documentation.html#Table-4:-Structure-of-the-Load_data.csv-file-1","page":"Model Inputs/Outputs Documentation","title":"Table 4: Structure of the Load_data.csv file","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"","category":"page"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"Column Name Description\nMandatory Columns \nVoll Value of lost load in $/MWh.\nDemand_Segment Number of demand curtailment/lost load segments with different cost and capacity of curtailable demand for each segment. User-specified demand segments. Integer values starting with 1 in the first row. Additional segements added in subsequent rows.\nCost_of_Demand_Curtailment_per_MW Cost of non-served energy/demand curtailment (for each segment), reported as a fraction of value of lost load. If Demand_Segment = 1, then this parameter is a scalar and equal to one. In general this parameter is a vector of length equal to the length of Demand_Segment.\nMax_Demand_Curtailment Maximum time-dependent demand curtailable in each segment, reported as % of the demand in each zone and each period. If Demand_Segment = 1, then this parameter is a scalar and equal to one. In general this parameter is a vector of length given by length of Demand_segment.\nTime_Index Index defining time step in the model.\nLoad_MW_z* Load profile of a zone z* in MW; if multiple zones, this parameter will be a matrix with columns equal to number of zones (each column named appropriate zone number appended to parameter) and rows equal to number of time periods of grid operations being modeled.\nSettings-specific Columns \nOperationWrapping = 1 \nRep_Periods Number of representative periods (e.g. weeks, days) that are modeled to approximate annual grid operations.\nTimesteps_per_Rep_Period Number of timesteps per representative period (e.g. 168 if period is set as a week using hour-long time steps).\nSub_Weights Number of annual time steps (e.g. hours) represented by a given representative period. Length of this column is equal to the number of representative periods. Sum of the elements of this column should be equal to the total number of time steps in a model time horizon, defined in parameterWeightTotal (e.g. 8760 hours if modeling 365 days or 8736 if modeling 52 weeks).","category":"page"},{"location":"data_documentation.html#.1.4-Generator_variability.csv-1","page":"Model Inputs/Outputs Documentation","title":"2.1.4 Generator_variability.csv","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"This file contains the time-series of capacity factors / availability of each resource included in the Generators_data.csv file for each time step (e.g. hour) modeled.","category":"page"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"• first column: The first column contains the time index of each row (starting in the second row) from 1 to N.","category":"page"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"• Second column onwards: Resources are listed from the second column onward with headers matching each resource name in the Generators_data.csv file in any order. The availability for each resource at each time step is defined as a fraction of installed capacity and should be between 0 and 1. Note that for this reason, resource names specified in Generators_data.csv must be unique. Note that for Hydro reservoir resources (i.e. HYDRO = 1 in the Generators_data.csv), values in this file correspond to inflows (in MWhs) to the hydro reservoir as a fraction of installed power capacity, rather than hourly capacity factor.","category":"page"},{"location":"data_documentation.html#.1.5-Generators_data.csv-1","page":"Model Inputs/Outputs Documentation","title":"2.1.5 Generators_data.csv","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"This file contains cost and performance parameters for various generators and other resources (storage, flexible demand, etc) included in the model formulation.","category":"page"},{"location":"data_documentation.html#Table-5:-Mandatory-columns-in-the-Generators_data.csv-file-1","page":"Model Inputs/Outputs Documentation","title":"Table 5: Mandatory columns in the Generators_data.csv file","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"","category":"page"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"Column Name Description\nResource This column contains unique names of resources available to the model. Resources can include generators, storage, and flexible or time shiftable demand/loads.\nZone Integer representing zone number where the resource is located.\nTechnology type flags \nNew_Build {-1, 0, 1}, Flag for resource (storage, generation) eligibility for capacity expansion.\n New_Build = 1: eligible for capacity expansion and retirement.\n New_Build = 0: not eligible for capacity expansion, eligible for retirement.\n New_Build = -1: not eligible for capacity expansion or retirement.\nTHERM {0, 1, 2}, Flag to indicate membership in set of thermal resources (e.g. nuclear, combined heat and power, natural gas combined cycle, coal power plant)\n THERM = 0: Not part of set (default)\n THERM = 1: If the power plant relies on thermal energy input and subject unit commitment constraints/decisions if UCommit >= 1 (e.g. cycling decisions/costs/constraints).\n THERM = 2: If the power plant relies on thermal energy input and is subject to simplified economic dispatch constraints (ramping limits and minimum output level but no cycling decisions/costs/constraints).\nCap_size Size (MW) of a single generating unit. This is used only for resources with integer unit commitment (THERM = 1) - not relevant for other resources.\nVRE {0, 1}, Flag to indicate membership in set of dispatchable (or curtailable) variable renewable energy resources (onshore wind, offshore wind, utility-scale solar PV, and distributed solar PV subject to dispatch signals).\n VRE = 0: Not part of set (default)\n VRE = 1: Dispatchable variable renewable energy (VRE) resources.\nNum_VRE_bins Number of resource availability profiles considered for each VRE resource per zone. This parameter is used to decide the number of capacity investment decision variables related to a single variable renewable energy technology in each zone.\n Num_VRE_bins = 1: using a single resource availability profile per technology per zone. 1 capacity investment decision variable and 1 generator RID tracking technology power output (and in each zone).\n Num_VRE_bins > 1: using multiple resource availability profiles per technology per zone. Num_VRE_bins capacity investment decision variables and 1 generator RID used to define technology power output at each time step (and in each zone). Example: Suppose we are modeling 3 bins of wind profiles for each zone. Then include 3 rows with wind resource names as Wind_1, Wind_2, and Wind_3 and a corresponding increasing sequence of RIDs. Set Num_VRE_bins for the generator with smallest RID, Wind_1, to be 3 and set Num_VRE_bins for the other rows corresponding to Wind_2 and Wind_3, to be zero. By setting Num_VRE_bins for Wind_2 and Wind_3, the model eliminates the power outputs variables for these generators. The power output from the technology across all bins is reported in the power output variable for the first generator. This allows for multiple bins without significantly increasing number of model variables (adding each bin only adds one new capacity variable and no operational variables). See documentation for '''curtailablevariablerenewable()''' for more.\nMUST_RUN {0, 1}, Flag to indicate membership in set of must-run plants (could be used to model behind-the-meter PV not subject to dispatch signals/curtailment, run-of-river hydro that cannot spill water, must-run or self-committed thermal generators, etc).\n MUST_RUN = 0: Not part of set (default)\n MUST_RUN = 1: Must-run (non-dispatchable) resources.\nSTOR {0, 1, 2}, Flag to indicate membership in set of storage resources and designate which type of storage resource formulation to employ.\n STOR = 0: Not part of set (default)\n STOR = 1: Discharging power capacity and energy capacity are the investment decision variables; symmetric charge/discharge power capacity with charging capacity equal to discharging capacity (e.g. lithium-ion battery storage).\n STOR = 2: Discharging, charging power capacity and energy capacity are investment variables; asymmetric charge and discharge capacities using distinct processes (e.g. hydrogen electrolysis, storage, and conversion to power using fuel cell or combustion turbine).\nFLEX {0, 1}, Flag to indicate membership in set of flexible demand-side resources (e.g. scheduleable or time shiftable loads such as automated EV charging, smart thermostat systems, irrigating pumping loads etc).\n FLEX = 0: Not part of set (default)\n FLEX = 1: Flexible demand resource.\nHYDRO {0, 1}, Flag to indicate membership in set of reservoir hydro resources.\n HYDRO = 0: Not part of set (default)\n HYDRO = 1: Hydropower with reservoir modeling, including inflows, spillage, ramp rate limits and minimum operating level and efficiency loss associated with discharging. Reservoir capacity can be represented as a ratio or energy to power. This type of plant cannot charge from grid.\nExisting technology capacity \nExisting_Cap_MW The existing capacity of a power plant in MW.\nExisting_Cap_MWh The existing capacity of storage in MWh where STOR = 1 or STOR = 2.\nExisting_Charge_Cap_MW The existing charging capacity for resources where STOR = 2.\nCapacity/Energy requirements \nMax_Cap_MW -1 (default) – no limit on maximum discharge capacity of the resource. If non-negative, represents maximum allowed discharge capacity (in MW) of the resource.\nMax_Cap_MWh -1 (default) – no limit on maximum energy capacity of the resource. If non-negative, represents maximum allowed energy capacity (in MWh) of the resource with STOR = 1 or STOR = 2.\nMax_Charge_Cap_MW -1 (default) – no limit on maximum charge capacity of the resource. If non-negative, represents maximum allowed charge capacity (in MW) of the resource with STOR = 2.\nMin_Cap_MW -1 (default) – no limit on minimum discharge capacity of the resource. If non-negative, represents minimum allowed discharge capacity (in MW) of the resource.\nMin_Cap_MWh -1 (default) – no limit on minimum energy capacity of the resource. If non-negative, represents minimum allowed energy capacity (in MWh) of the resource with STOR = 1 or STOR = 2.\nMin_Cap_MW -1 (default) – no limit on minimum charge capacity of the resource. If non-negative, represents minimum allowed charge capacity (in MW) of the resource with STOR = 2.\nCost parameters \nInv_Cost_per_MWyr Annualized capacity investment cost of a technology ($/MW/year).\nInv_Cost_per_MWhyr Annualized investment cost of the energy capacity for a storage technology ($/MW/year), applicable to either STOR = 1 or STOR = 2.\nInv_Cost_Charge_per_MWyr Annualized capacity investment cost for the charging portion of a storage technology with STOR = 2 ($/MW/year).\nFixed_OM_Cost_per_MWy Fixed operations and maintenance cost of a technology ($/MW/year).\nFixed_OM_Cost_per_MWhyr Fixed operations and maintenance cost of the energy component of a storage technology ($/MWh/year).\nFixed_OM_Cost_charge_per_MWyr Fixed operations and maintenance cost of the charging component of a storage technology of type STOR = 2.\nVar_OM_Cost_per_MWh Variable operations and maintenance cost of a technology ($/MWh).\nVar_OM_Cost_per_MWhIn Variable operations and maintenance cost of the charging aspect of a storage technology with STOR = 2, or variable operations and maintenance costs associated with flexible demand deferral with FLEX = 1. Otherwise 0 ($/MWh).\nTechnical performance parameters \nHeat_Rate_MMBTU_per_MWh Heat rate of a generator or MMBtu of fuel consumed per MWh of electricity generated for export (net of on-site house loads). The heat rate is the inverse of the efficiency: a lower heat rate is better. Should be consistent with fuel prices in terms of reporting on higher heating value (HHV) or lower heating value (LHV) basis.\nFuel Fuel needed for a generator. The names should match with the ones in the Fuels_data.csv.\nSelf_Disch [0,1], The power loss of storage technologies per hour (fraction loss per hour)- only applies to storage techs.\nMin_Power [0,1], The minimum generation level for a unit as a fraction of total capacity. This value cannot be higher than the smallest time-dependent CF value for a resource in Generators_variability.csv. Applies to thermal plants, and reservoir hydro resource (HYDRO = 1).\nRamp_Up_Percentage [0,1], Maximum increase in power output from between two periods (typically hours), reported as a fraction of nameplate capacity. Applies to thermal plants, and reservoir hydro resource (HYDRO = 1).\nRamp_Dn_Percentage [0,1], Maximum decrease in power output from between two periods (typically hours), reported as a fraction of nameplate capacity. Applies to thermal plants, and reservoir hydro resource (HYDRO = 1).\nEff_Up [0,1], Efficiency of charging storage – applies to storage technologies (all STOR types).\nEff_Down [0,1], Efficiency of discharging storage – applies to storage technologies (all STOR types).\nHydro_Energy_to_Power_Ratio The rated number of hours of reservoir hydro storage at peak discharge power output. Applies to HYDRO = 1 (hours).\nMin_Duration Specifies the minimum ratio of installed energy to discharged power capacity that can be installed. Applies to STOR types 1 and 2 (hours).\nMax_Duration Specifies the maximum ratio of installed energy to discharged power capacity that can be installed. Applies to STOR types 1 and 2 (hours).\nMax_Demand_Flex_Delay Maximum number of hours that demand can be deferred or delayed. Applies to resources with FLEX type 1 (hours).\nMax_Demand_Flex_Advance Maximum number of hours that demand can be scheduled in advance of the original schedule. Applies to resources with FLEX type 1 (hours).\nDemand_Flex_Energy_Eff [0,1], Energy efficiency associated with time shifting demand. Represents energy losses due to time shifting (or 'snap back' effect of higher consumption due to delay in use) that may apply to some forms of flexible demand. Applies to resources with FLEX type 1 (hours). For example, one may need to pre-cool a building more than normal to advance demand.","category":"page"},{"location":"data_documentation.html#Table-6:-Settings-specific-columns-in-the-Generators_data.csv-file-1","page":"Model Inputs/Outputs Documentation","title":"Table 6: Settings-specific columns in the Generators_data.csv file","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"","category":"page"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"Column Name Description\nUCommit >= 1 The following settings apply only to thermal plants with unit commitment constraints (THERM = 1).\nUp_Time Minimum amount of time a resource has to stay in the committed state.\nDown_Time Minimum amount of time a resource has to remain in the shutdown state.\nStart_Cost_per_MW Cost per MW of nameplate capacity to start a generator ($/MW per start). Multiplied by the number of generation units (each with a pre-specified nameplate capacity) that is turned on.\nStart_Fuel_MMBTU_per_MW Startup fuel use per MW of nameplate capacity of each generator (MMBtu/MW per start).\nReserves = 1 The following settings apply to thermal, dispatchable VRE, hydro and storage resources\nReg_Cost Cost of providing regulation reserves ($/MW per time step/hour).\nRsv_Cost Cost of providing upwards spinning or contingency reserves ($/MW per time step/hour).\nReg_Max [0,1], Fraction of nameplate capacity that can committed to provided regulation reserves. .\nRsv_Max [0,1], Fraction of nameplate capacity that can committed to provided upwards spinning or contingency reserves.\nEnergyShareRequirement > 0 \nESR_* Flag to indicate which resources are considered for the Energy Share Requirement constraint.\n 1- included\n 0- excluded\nCapacityReserveMargin > 0 \nCapRes_* [0,1], Fraction of the resource capacity eligible for contributing to the capacity reserve margin constraint (e.g. derate factor).\nModelingToGenerateAlternatives = 1 \nMGA Eligibility of the technology for Modeling To Generate Alternative (MGA) run.\n 1 = Technology is available for the MGA run.\n 0 = Technology is unavailable for the MGA run (e.g. storage technologies).\nResource_Type For the MGA run, we categorize all the resources in a few resource types. We then find maximally different generation portfolio based on these resource types. For example, existing solar and new solar resources could be represented by a resource type names Solar. Categorization of resources into resource types is user dependent.\nMinCapReq = 1 \nMinCapTag_* Eligibility of resources to participate in Minimum Technology Carveout constraint. * corresponds to the ith row of the file Minimum_capacity_requirement.csv.","category":"page"},{"location":"data_documentation.html#.2-Optional-inputs-files-1","page":"Model Inputs/Outputs Documentation","title":"2.2 Optional inputs files","text":"","category":"section"},{"location":"data_documentation.html#.2.1-Online-Time-domain-reduction-1","page":"Model Inputs/Outputs Documentation","title":"2.2.1 Online Time-domain reduction","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"Modeling grid operations for each hour of the year can be computationally expensive for models with many zones and resources. Time-domain reduction is often employed in capacity expansion models as a way to balance model spatial and temporal resolution as well as representation of dispatch, while ensuring reasonable computational times. GenX allows the option of performing time-domain reduction on the user supplied time-series input data to produce a representative time series at the desired level of temporal resolution. The below table summarizes the list of parameters to be specified by the user to perform the time domain reduction implemented in GenX. These parameters are passed to GenX via the YAML file time_domain_reduction_settings.yml.","category":"page"},{"location":"data_documentation.html#Table-7:-Structure-of-the-Load_data.csv-file-1","page":"Model Inputs/Outputs Documentation","title":"Table 7: Structure of the Load_data.csv file","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"","category":"page"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"Column Name Description\nTimeDomainReduction = 1 \nTimesteps_per_period The number of timesteps (e.g., hours) in each representative period (i.e. 168 for weeks, 24 for days, 72 for three-day periods, etc).\nUseExtremePeriods 1 = Include outliers (by performance or load/resource extreme) as their own representative extreme periods. This setting automatically includes periods based on criteria outlined in the dictionary ExtremePeriods. Extreme periods can be selected based on following criteria applied to load profiles or solar and wind capacity factors profiles, at either the zonal or system level. A) absolute (timestep with min/max value) statistic (minimum, maximum) and B) integral (period with min/max summed value) statistic (minimum, maximum). For example, the user could want the hour with the most load across the whole system to be included among the extreme periods. They would select Load, System, Absolute, and Max.\n 0 = Do not include extreme periods.\nExtremePeriods If UseExtremePeriods = 1, use this dictionary to select which types of extreme periods to use. Select by profile type (Load, PV, or Wind), geography (Zone or System), grouping by timestep or by period (Absolute or Integral), and statistic (Maximum or Minimum).\nClusterMethod Either kmeans or kmedoids, the method used to cluster periods and determine each time step's representative period.\nScalingMethod Either ‘N' or ‘S', the decision to normalize ([0,1]) or standardize (mean 0, variance 1) the input data prior to clustering.\nMinPeriods The minimum number of representative periods used to represent the input data. If using UseExtremePeriods, this must be greater or equal to the number of selected extreme periods. If IterativelyAddPeriods is off, this will be the total number of representative periods.\nMaxPeriods The maximum number of representative periods - both clustered and extreme - that may be used to represent the input data.\nIterativelyAddPeriods 1 = Add representative periods until the error threshold between input data and represented data is met or the maximum number of representative periods is reached.\n 0 = Use only the minimum number of representative periods. This minimum value includes the selected extreme periods if UseExtremePeriods is on.\nThreshold Iterative period addition will end if the period farthest from its representative period (as measured using Euclidean distance) is within this percentage of the total possible error (for normalization) or 95% of the total possible error (± 2 σ for standardization). E.g., for a threshold of 0.01, each period must be within 1% of the spread of possible error before the clustering iterations will terminate (or until the maximum is reached).\nIterateMethod Either ‘cluster' (Default) or ‘extreme', whether to increment the number of clusters to the kmeans/kmedoids method or to set aside the worst-fitting periods as a new extreme periods.\nnReps Default 200, the number of kmeans/kmedoids repetitions at the same setting.\nLoadWeight Default 1, a multiplier on load columns to optionally prioritize better fits for load profiles over resource capacity factor or fuel price profiles.\nWeightTotal Default 8760, the sum to which the relative weights of representative periods will be scaled.\nClusterFuelPrices Either 1 or 0, whether or not to use the fuel price time series in Fuels_data.csv in the clustering process. If 'no', this function will still write Fuels_data.csv in the TimeDomainReductionFolder with reshaped fuel prices based on the number and size of the representative periods but will not use the fuel price time series for selection of representative periods.","category":"page"},{"location":"data_documentation.html#.2.2-Reserves.csv-1","page":"Model Inputs/Outputs Documentation","title":"2.2.2 Reserves.csv","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"This file includes parameter inputs needed to model time-dependent procurement of regulation and spinning reserves. This file is needed if Reserves flag is activated in the YAML file GenX_settings.yml.","category":"page"},{"location":"data_documentation.html#Table-8:-Structure-of-the-Reserves.csv-file-1","page":"Model Inputs/Outputs Documentation","title":"Table 8: Structure of the Reserves.csv file","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"","category":"page"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"Column Name Description\nReg_Req_Percent_Load [0,1], Regulation requirement as a percent of time-dependent load; here load is the total across all model zones.\nReg_Req_Percent_VRE [0,1], Regulation requirement as a percent of time-dependent wind and solar generation (summed across all model zones).\nRsv_Req_Percent_Load [0,1], Spinning up or contingency reserve requirement as a percent of time-dependent load (which is summed across all zones).\nRsv_Req_Percent_VRE [0,1], Spinning up or contingency reserve requirement as a percent of time-dependent wind and solar generation (which is summed across all zones).\nUnmet_Rsv_Penalty_Dollar_per_MW Penalty for not meeting time-dependent spinning reserve requirement ($/MW per time step).\nDynamic_Contingency Flags to include capacity (generation or transmission) contingency to be added to the spinning reserve requirement.\nDynamic_Contingency = 1: contingency set to be equal to largest installed thermal unit (only applied when UCommit = 1).\n = 2: contingency set to be equal to largest committed thermal unit each time period (only applied when UCommit = 1).\nStatic_Contingency_MW A fixed static contingency in MW added to reserve requirement. Applied when UCommit = 1 and DynamicContingency = 0, or when UCommit = 2. Contingency term not included in operating reserve requirement when this value is set to 0 and DynamicContingency is not active.","category":"page"},{"location":"data_documentation.html#.2.3-Energy_share_requirement.csv-1","page":"Model Inputs/Outputs Documentation","title":"2.2.3 Energy_share_requirement.csv","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"This file contains inputs specifying minimum energy share requirement policies, such as Renewable Portfolio Standard (RPS) or Clean Energy Standard (CES) policies. This file is needed if parameter EnergyShareRequirement has a non-zero value in the YAML file GenX_settings.yml.","category":"page"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"Note: this file should use the same region name as specified in the Generators_data.csv file.","category":"page"},{"location":"data_documentation.html#Table-9:-Structure-of-the-Energy_share_requirement.csv-file-1","page":"Model Inputs/Outputs Documentation","title":"Table 9: Structure of the Energy_share_requirement.csv file","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"","category":"page"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"Column Name Description\nRegion_description Region name\nNetwork_zones zone number represented as z*\nESR_* [0,1], Energy share requirements as a share of zonal demand (calculated on an annual basis). * represents the number of the ESR constraint, given by the number of ESR_* columns in the Energy_share_requirement.csv file.","category":"page"},{"location":"data_documentation.html#.2.4-CO2_cap.csv-1","page":"Model Inputs/Outputs Documentation","title":"2.2.4 CO2_cap.csv","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"This file contains inputs specifying CO2 emission limits policies (e.g. emissions cap and permit trading programs). This file is needed if CO2Cap flag is activated in the YAML file GenX_settings.yml. CO2Cap flag set to 1 represents mass-based (tCO2 ) emission target. CO2Cap flag set to 2 is specified when emission target is given in terms of rate (tCO2/MWh) and is based on total demand met. CO2Cap flag set to 3 is specified when emission target is given in terms of rate (tCO2 /MWh) and is based on total generation.","category":"page"},{"location":"data_documentation.html#Table-10:-Structure-of-the-CO2_cap.csv-file-1","page":"Model Inputs/Outputs Documentation","title":"Table 10: Structure of the CO2_cap.csv file","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"","category":"page"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"Column Name Description\nRegion_description Region name\nNetwork_zones zone number represented as z*\nCO2\\Cap_Zone* If a zone is eligible for the emission limit constraint, then this column is set to 1, else 0.\nCO2\\Max_tons_MWh* Emission limit in terms of rate\nCO2\\Max_Mtons* Emission limit in absolute values, in Million of tons\n where in the above inputs, * represents the number of the emission limit constraints. For example, if the model has 2 emission limit constraints applied separately for 2 zones, the above CSV file will have 2 columns for specifying emission limit in terms on rate: CO2\\Max_tons_MWh_1 and CO2\\Max_tons_MWh_2.","category":"page"},{"location":"data_documentation.html#.2.5-Capacity_reserve_margin.csv-1","page":"Model Inputs/Outputs Documentation","title":"2.2.5 Capacity_reserve_margin.csv","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"This file contains the regional capacity reserve margin requirements. This file is needed if parameter CapacityReserveMargin has a non-zero value in the YAML file GenX_settings.yml.","category":"page"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"Note: this file should use the same region name as specified in the Generators_data.csv file","category":"page"},{"location":"data_documentation.html#Table-11:-Structure-of-the-Capacity_reserve_margin.csv-file-1","page":"Model Inputs/Outputs Documentation","title":"Table 11: Structure of the Capacity_reserve_margin.csv file","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"","category":"page"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"Column Name Description\nRegion_description Region name\nNetwork_zones zone number represented as z*\nCapRes_* [0,1], Capacity reserve margin requirements of a zone, reported as a fraction of demand","category":"page"},{"location":"data_documentation.html#.2.6-Minimum_capacity_requirement.csv-1","page":"Model Inputs/Outputs Documentation","title":"2.2.6 Minimum_capacity_requirement.csv","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"This file contains the minimum capacity carve-out requirement to be imposed (e.g. a storage capacity mandate or offshore wind capacity mandate). This file is needed if parameter MinCapReq flag has a non-zero value in the YAML file GenX_settings.yml.","category":"page"},{"location":"data_documentation.html#Table-12:-Structure-of-the-Minimum_capacity_requirement.csv-file-1","page":"Model Inputs/Outputs Documentation","title":"Table 12: Structure of the Minimum_capacity_requirement.csv file","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"","category":"page"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"Column Name Description\nMinCapReqConstraint Index of the minimum capacity carve-out requirement.\nConstraint_Description Names of minimum capacity carve-out constraints; not to be read by model, but used as a helpful notation to the model user.\nMin_MW minimum capacity requirement [MW]","category":"page"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"Some of the columns specified in the input files in Section 2.2 and 2.1 are not used in the GenX model formulation. These columns are necessary for interpreting the model outputs and used in the output module of the GenX.","category":"page"},{"location":"data_documentation.html#.2.7-Rand_mga_objective_coefficients.csv-1","page":"Model Inputs/Outputs Documentation","title":"2.2.7 Rand_mga_objective_coefficients.csv","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"This file is required while using modeling to generate alternatives (MGA) algorithm. The number of columns in this csv file is equal to one plus the number of model zones. Number of rows for each iteration is equal to the number of distinct elements in the Resource_Type column in the Generators_data.csv file. Elements of this file are used as random objective function coefficients fo the MGA algorithm.","category":"page"},{"location":"data_documentation.html#Table-12:-Structure-of-the-Minimum_capacity_requirement.csv-file-2","page":"Model Inputs/Outputs Documentation","title":"Table 12: Structure of the Minimum_capacity_requirement.csv file","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"","category":"page"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"Column Name Description\nV* * represents the region number. This column has random integers between -100 and 100.\nIter MGA iteration number.","category":"page"},{"location":"data_documentation.html#Outputs-1","page":"Model Inputs/Outputs Documentation","title":"3 Outputs","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"The table below summarizes the units of each output variable reported as part of the various CSV files produced after each model run. The reported units are also provided. If a result file includes time-dependent values, the value will not include the hour weight in it. An annual sum (\"AnnualSum\") column/row will be provided whenever it is possible (e.g., emissions.csv).","category":"page"},{"location":"data_documentation.html#.1-Default-output-files-1","page":"Model Inputs/Outputs Documentation","title":"3.1 Default output files","text":"","category":"section"},{"location":"data_documentation.html#.1.1-capacity.csv-1","page":"Model Inputs/Outputs Documentation","title":"3.1.1 capacity.csv","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"Reports optimal values of investment variables (except StartCap, which is an input)","category":"page"},{"location":"data_documentation.html#Table-14:-Structure-of-the-capacity.csv-file-1","page":"Model Inputs/Outputs Documentation","title":"Table 14: Structure of the capacity.csv file","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"","category":"page"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"Output Description Units\nStartCap Initial power capacity of each resource type in each zone; this is an input MW\nRetCap Retired power capacity of each resource type in each zone MW\nNewCap Installed capacity of each resource type in each zone MW\nEndCap Total power capacity of each resource type in each zone MW\nStartEnergyCap Initial energy capacity of each resource type in each zone; this is an input and applies only to storage tech. MWh\nRetEnergyCap Retired energy capacity of each resource type in each zone; applies only to storage tech. MWh\nNewEnergyCap Installed energy capacity of each resource type in each zone; applies only to storage tech. MWh\nEndEnergyCap Total installed energy capacity of each resource type in each zone; applies only to storage tech. MWh\nStartChargeCap Initial charging power capacity of STOR = 2 resource type in each zone; this is an input MW\nRetChargeCap Retired charging power capacity of STOR = 2 resource type in each zone MW\nNewChargeCap Installed charging capacity of each resource type in each zone MW\nEndChargeCap Total charging power capacity of each resource type in each zone MW","category":"page"},{"location":"data_documentation.html#.1.2-costs.csv-1","page":"Model Inputs/Outputs Documentation","title":"3.1.2 costs.csv","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"Reports optimal objective function value and contribution of each term by zone.","category":"page"},{"location":"data_documentation.html#Table-15:-Structure-of-the-costs.csv-file-1","page":"Model Inputs/Outputs Documentation","title":"Table 15: Structure of the costs.csv file","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"","category":"page"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"Output Description Units\ncTotal Total objective function value $\ncFix Total annualized investment and fixed operating & maintainenance (FOM) costs associated with all resources $\ncVar Total annual variable cost associated with all resources; includes fuel costs for thermal plants $\ncNSE Total annual cost of non-served energy $\ncStart Total annual cost of start-up of thermal power plants $\ncUnmetRsv Total annual cost of not meeting time-dependent operating reserve (spinning) requirements $\ncNetworkExp Total cost of network expansion $\ncEmissionsRevenue Total and zonal emissions revenue $\ncEmissionsCost Total an zonal emissions cost $","category":"page"},{"location":"data_documentation.html#.1.3-emissions.csv-1","page":"Model Inputs/Outputs Documentation","title":"3.1.3 emissions.csv","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"Reports CO2 emissions by zone at each hour; an annual sum row will be provided. If any emission cap is present, emission prices each zone faced by each cap will be copied on top of this table with the following strucutre.","category":"page"},{"location":"data_documentation.html#Table-16:-Structure-of-emission-prices-in-the-emissions.csv-file-1","page":"Model Inputs/Outputs Documentation","title":"Table 16: Structure of emission prices in the emissions.csv file","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"","category":"page"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"Output Description Units\nCO2\\price Marginal CO2 abatement cost associated with constraint on maximum annual CO2 emissions; will be same across zones if CO2 emissions constraint is applied for the entire region and not zone-wise $/ tonne CO2.","category":"page"},{"location":"data_documentation.html#.1.4-nse.csv-1","page":"Model Inputs/Outputs Documentation","title":"3.1.4 nse.csv","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"Reports non-served energy for every model zone, time step and cost-segment.","category":"page"},{"location":"data_documentation.html#.1.5-power.csv-1","page":"Model Inputs/Outputs Documentation","title":"3.1.5 power.csv","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"Reports power discharged by each resource (generation, storage, demand response) in each model time step.","category":"page"},{"location":"data_documentation.html#.1.6-reliability.csv-1","page":"Model Inputs/Outputs Documentation","title":"3.1.6 reliability.csv","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"Reports dual variable of maximum non-served energy constraint (shadow price of reliability constraint) for each model zone and time step.","category":"page"},{"location":"data_documentation.html#.1.7-prices.csv-1","page":"Model Inputs/Outputs Documentation","title":"3.1.7 prices.csv","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"Reports marginal electricity price for each model zone and time step. Marginal electricity price is equal to the dual variable of the load balance constraint. If GenX is configured as a mixed integer linear program, then this output is only generated if WriteShadowPrices flag is activated. If configured as a linear program (i.e. linearized unit commitment or economic dispatch) then output automatically available.","category":"page"},{"location":"data_documentation.html#.1.8-status.csv-1","page":"Model Inputs/Outputs Documentation","title":"3.1.8 status.csv","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"Reports computational performance of the model and objective function related information.","category":"page"},{"location":"data_documentation.html#Table-17:-Structure-of-the-status.csv-file-1","page":"Model Inputs/Outputs Documentation","title":"Table 17: Structure of the status.csv file","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"","category":"page"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"Output Description Units\nStatus termination criteria (optimal, timelimit etc.). \nsolve Solve time including time for pre-solve seconds\nObjval Optimal objective function value $\nObjbound Best objective lower bound $\nFinalMIPGap Optimality gap at termination in case of a mixed-integer linear program (MIP gap); when using Gurobi, the lower bound and MIP gap is reported excluding constant terms (E.g. fixed cost of existing generators that cannot be retired) in the objective function and hence may not be directly usable. Fraction","category":"page"},{"location":"data_documentation.html#.1.9-NetRevenue.csv-1","page":"Model Inputs/Outputs Documentation","title":"3.1.9 NetRevenue.csv","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"This file summarizes the cost, revenue and profit for each generation technology for each region.","category":"page"},{"location":"data_documentation.html#Table-18:-Stucture-of-the-NetRevenue.csv-file-1","page":"Model Inputs/Outputs Documentation","title":"Table 18: Stucture of the NetRevenue.csv file","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"","category":"page"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"Output Description Units\nFixed_OM_cost_MW Fixed Operation and Maintenance cost of the MW capacity. $\nFixed_OM_cost_MWh Fixed Operation and Maintenance cost of the MWh capacity. Only applicable to energy storage. $\nVar_OM_cost_out Variable Operation and Maintenance cost of the power generation or discharge. $\nVar_OM_cost_in Variable Operation and Maintenance cost of the power charge/pumping. Only applicable to energy storage. $\nFuel_cost Fuel cost of the power generation. Only applicable to generation that burns fuel. $\nCharge_cost Cost of charging power (due to the payment for electricity) Only applicable to energy storage. $\nEmissionsCost Cost of buying emission credit. $\nStartCost Cost of generator start-up. $\nInv_cost_MW Cost of building MW capacity. $\nInv_cost_MWh Cost of building MWh capacity. $\nEnergyRevenue Revenue of generating power. $\nSubsidyRevenue Revenue of Min_Cap subsidy. $\nReserveMarginRevenue Revenue earned from capacity reserve margin constraints. $\nESRRevenue Revenue selling renewable/clean energy credits. $\nRevenue Total Revenue. $\nCost Total Cost. $\nProfit Revenue minus Cost. $","category":"page"},{"location":"data_documentation.html#.2-Settings-specific-outputs-1","page":"Model Inputs/Outputs Documentation","title":"3.2 Settings-specific outputs","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"This section includes the output files that GenX will print if corresponding function is specified in the Settings.","category":"page"},{"location":"data_documentation.html#.2.1-CapacityValue.csv-1","page":"Model Inputs/Outputs Documentation","title":"3.2.1 CapacityValue.csv","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"This file includes the time-dependent capacity value calculated for each generator. GenX will print this file only if the capacity reserve margin constraints are modeled through the setting file. Each row of the file (excluding the header) corresponds to a generator specified in the inputs. Each column starting from the t1 to the second last one stores the result of capacity obligation provided in each hour divided by the total capacity. Thus the number is unitless. If the capacity margin reserve is not binding for one hour, GenX will return zero. The last column specified the name of the corresponding capacity reserve constraint. Note that, if the user calculates the hour-weight-averaged capacity value for each generator using data of the binding hours, the result is what RTO/ISO call capacity credit.","category":"page"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"<!–-","category":"page"},{"location":"data_documentation.html#.2.2-ExportRevenue.csv-1","page":"Model Inputs/Outputs Documentation","title":"3.2.2 ExportRevenue.csv","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"This file includes the export revenue in $ of each zone. GenX will print this file only when a network is present and Locational Marginal Price (LMP) data is available to the GenX. The Total row includes the time-step-weighted summation of the time-dependent values shown below. For each time-step, the export revenue is calculated as the net outbound powerflow multiplied by the LMP. It is noteworthy that this export revenue is already part of the generation revenue, and the user should not double count.","category":"page"},{"location":"data_documentation.html#.2.3-Importcost.csv-1","page":"Model Inputs/Outputs Documentation","title":"3.2.3 Importcost.csv","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"This file includes the import cost in $ of each zone. GenX will print this file only when a network is present and Locational Marginal Price (LMP) data is available to the GenX. The Total row includes the time-step -weighted summation of the time-dependent values shown below. For each time step, the import cost is calculated as the net inbound powerflow multiplied by the LMP. It is noteworthy that this import cost is already part of the load payment, and the user should not double count. –->","category":"page"},{"location":"data_documentation.html#.2.2-EnergyRevenue.csv-1","page":"Model Inputs/Outputs Documentation","title":"3.2.2 EnergyRevenue.csv","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"This file includes the energy revenue in $ earned by each generator through injecting into the grid. Only annual sum values are available.","category":"page"},{"location":"data_documentation.html#.2.3-ChargingCost.csv-1","page":"Model Inputs/Outputs Documentation","title":"3.2.3 ChargingCost.csv","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"This file includes the charging cost  in $ of earned by each generator through withdrawing from the grid. Only annual sum values are available.","category":"page"},{"location":"data_documentation.html#.2.4-ReserveMargin.csv-1","page":"Model Inputs/Outputs Documentation","title":"3.2.4 ReserveMargin.csv","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"This file includes the shadow prices of the capacity reserve margin constraints. GenX will print this file only when capacity reserve margin is modeled and the shadow price can be obtained form the solver, as described earlier. Each row (except the header) corresponds to a capacity reserve margin constraint, and each column corresponds to an time step. As a reminder, GenX models the capacity reserve margin (aka capacity market) at the time-dependent level, and each constraint either stands for an overall market or a locality constraint.","category":"page"},{"location":"data_documentation.html#.2.5-ReserveMarginRevenue.csv-1","page":"Model Inputs/Outputs Documentation","title":"3.2.5 ReserveMarginRevenue.csv","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"This file includes the capacity revenue earned by each generator listed in the input file. GenX will print this file only when capacity reserve margin is modeled and the shadow price can be obtained form the solver. Each row corresponds to a generator, and each column starting from the 6th to the second last is the total revenue from each capacity reserve margin constraint. The revenue is calculated as the capacity contribution of each time steps multiplied by the shadow price, and then the sum is taken over all modeled time steps. The last column is the total revenue received from all capacity reserve margin constraints. As a reminder, GenX models the capacity reserve margin (aka capacity market) at the time-dependent level, and each constraint either stands for an overall market or a locality constraint.","category":"page"},{"location":"data_documentation.html#.2.6-ESR_prices.csv-1","page":"Model Inputs/Outputs Documentation","title":"3.2.6 ESR_prices.csv","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"This file includes the renewable/clean energy credit price of each modeled RPS/CES constraint. GenX will print this file only when RPS/CES is modeled and the shadow price can be obtained form the solver. The unit is /MWh.","category":"page"},{"location":"data_documentation.html#.2.7-ESR_Revenue.csv-1","page":"Model Inputs/Outputs Documentation","title":"3.2.7 ESR_Revenue.csv","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"This file includes the renewable/clean credit revenue earned by each generator listed in the input file. GenX will print this file only when RPS/CES is modeled and the shadow price can be obtained form the solver. Each row corresponds to a generator, and each column starting from the 6th to the second last is the total revenue earned from each RPS constraint. The revenue is calculated as the total annual generation (if elgible for the corresponding constraint) multiplied by the RPS/CES price. The last column is the total revenue received from all constraint. The unit is $.","category":"page"},{"location":"data_documentation.html#.2.8-SubsidyRevenue.csv-1","page":"Model Inputs/Outputs Documentation","title":"3.2.8 SubsidyRevenue.csv","text":"","category":"section"},{"location":"data_documentation.html#","page":"Model Inputs/Outputs Documentation","title":"Model Inputs/Outputs Documentation","text":"This file includes subsidy revenue earned if a generator specified Min_Cap is provided in the input file. GenX will print this file only the shadow price can be obtained form the solver. Do not confuse this with the Minimum Capacity Carveout constraint, which is for a subset of generators, and a separate revenue term will be calculated in other files. The unit is $.","category":"page"},{"location":"investment_discharge.html#Investment-Discharge-1","page":"Investment Discharge","title":"Investment Discharge","text":"","category":"section"},{"location":"investment_discharge.html#","page":"Investment Discharge","title":"Investment Discharge","text":"Modules = [GenX]\r\nPages = [\"investment_discharge.jl\"]","category":"page"},{"location":"model_introduction.html#GenX-Model-Introduction-1","page":"Model Introduction","title":"GenX Model Introduction","text":"","category":"section"},{"location":"model_introduction.html#Introduction-1","page":"Model Introduction","title":"Introduction","text":"","category":"section"},{"location":"model_introduction.html#","page":"Model Introduction","title":"Model Introduction","text":"GenX allows for the simultaneous co-optimization of several interlinked power system decision layers, described below:","category":"page"},{"location":"model_introduction.html#","page":"Model Introduction","title":"Model Introduction","text":"Capacity expansion planning (e.g., investment and retirement decisions for a full range of centralized and distributed generation, storage, and demand-side resources)\nHourly dispatch of generation, storage, and demand-side resources,\nUnit commitment decisions and operational constraints for thermal generators,\nCommitment of generation, storage, and demand-side capacity to meet system operating reserves requirements,\nCommitment of generation, storage, and demand-side capacity to meet capacity reserve requirements,\nTransmission network power flows (including losses) and network expansion decisions, and\nSeveral optional policy constraints","category":"page"},{"location":"model_introduction.html#","page":"Model Introduction","title":"Model Introduction","text":"Depending on the dimensionality of the problem, it may not be possible to model all decision layers at the highest possible resolution of detail, so the GenX model is designed to be highly configurable, allowing the user to specify the level of detail or abstraction along each of these layers or to omit one or more layers from consideration entirely.","category":"page"},{"location":"model_introduction.html#","page":"Model Introduction","title":"Model Introduction","text":"For example, while investment and dispatch decisions (Layers 1 and 2) are a consistent feature of the model under all configurations, the user has several options with regards to representing the operational constraints on various thermal power plants (e.g., coal, gas, nuclear, and biomass generators). Unit commitment (e.g., start-up and shut-down) decisions Morales-España et al., 2013 (Layer 3) can be modeled at the individual power plant level (as per De Sisternes Jimenez, 2014); by using an efficient clustering of similar or identical units (as per Palmintier, 2011, Palmintier, 2013, Palmintier, 2014); by using a linear relaxation (or convex hull) of the integer unit commitment constraints set; or ignoring unit commitment decisions entirely and treating generator output as fully continuous. Furthermore, different levels of resolution can be selected for each individual resource type, as desired (e.g., larger thermal units can be represented with integer unit commitment decisions while smaller units can be treated as fully continuous). In such a manner, the model can be configured to represent operating constraints on thermal generators at a level of resolution that achieves a desired balance between abstraction error and computational tractability and provides sufficient accuracy to generate insights for the problem at hand.","category":"page"},{"location":"model_introduction.html#","page":"Model Introduction","title":"Model Introduction","text":"The model can also be configured to consider commitment of capacity to supply frequency regulation (symmetric up and down) and operating reserves (up) needed by system operators to robustly resolve short-term uncertainty in load and renewable energy forecasts and power plant or transmission network failures (Layer 4). Alternatively, reserve commitments can be ignored if desired.","category":"page"},{"location":"model_introduction.html#","page":"Model Introduction","title":"Model Introduction","text":"Additionally, the model can approximate resource adequacy requirements through capacity reserve margin requirements at the zonal and/or system level (Layer 5). In this way, the model can approximate varying structure of capacity markets seen in deregulated electricity markets in the U.S. and other regions.","category":"page"},{"location":"model_introduction.html#","page":"Model Introduction","title":"Model Introduction","text":"The model also allows for transmission networks to be represented at several levels of detail (Layer 6) including at a zonal level with transport constraints on power flows between zones (as per Mai et al., 2013, Johnston et al., 2013, Hirth, 2017); or as a single zone problem where transmission constraints and flows are ignored. (A DC optimal power flow formulation is in development.) In cases where a nodal or zonal transmission model is employed, network capacity expansion decisions can be modeled or ignored, and transmission losses can be represented either as a linear function of power flows or a piecewise linear approximation of a quadratic function of power flows between nodes or zones (as per Zhang et al., 2013, Fitiwi et al., 2016), with the number of segments in the piecewise approximation specified by the user as desired. In a multi-zonal or nodal configuration, GenX can therefore consider siting generators in different locations, including balancing tradeoffs between access to different renewable resource quality, siting restrictions, and impacts on network congestions, power flows and losses.","category":"page"},{"location":"model_introduction.html#","page":"Model Introduction","title":"Model Introduction","text":"GenX also allows the user to specify several optional public policy constraints, such as CO2 emissions limits, minimum energy share requirements (such as renewable portfolio standard or clean energy standard policies), and minimum technology capacity requirements (e.g. technology deployment mandates).","category":"page"},{"location":"model_introduction.html#","page":"Model Introduction","title":"Model Introduction","text":"Finally, the model is usually configured to consider a full year of operating decisions at an hourly resolution, but as this is often not tractable when considering large-scale problems with high resolution in other dimensions, GenX is also designed to model a number of subperiods – typically multiday periods of chronologically sequential hourly operating decisions – that can be selected via appropriate statistical clustering methods to represent a full year of operations (De Sisternes Jimenez and Webster, 2013, De Sisternes Jimenez, 2014, Poncelet et al., 2016, Nahmmacher et al., 2016, Blanford et al., 2016, Merrick, 2016, Mallapragada et al., 2018). GenX ships with a built-in time-domain reduction package that uses k-means or k-medoids to cluster raw time series data for load (demand) profiles and resource capacity factor profiles into representative periods during the input processing stage of the model. This method can also consider extreme points in the time series to capture noteworthy periods or periods with notably poor fits.","category":"page"},{"location":"model_introduction.html#","page":"Model Introduction","title":"Model Introduction","text":"With appropriate configuration of the model, GenX thus allows the user to tractably consider several interlinking decision layers in a single, monolithic optimization problem that would otherwise have been necessary to solve in different separated stages or models. The following figure reflects the range of configurations currently possible along the three key dimensions of chronological detail, operational detail, and network detail.","category":"page"},{"location":"model_introduction.html#","page":"Model Introduction","title":"Model Introduction","text":"(Image: Range of configurations currently implemented in GenX along three key dimensions of model resolution) Figure. Range of configurations currently implemented in GenX along three key dimensions of model resolution","category":"page"},{"location":"model_introduction.html#","page":"Model Introduction","title":"Model Introduction","text":"The model is usually configured to consider a single future planning year. In this sense, the current formulation is static because its objective is not to determine when investments should take place over time, but rather to produce a snapshot of the minimum-cost generation capacity mix under some pre-specified future conditions. However, the current implementation of the model can be run in sequence (with outputs from one planning year used as inputs for another subsequent planning year) to represent a step-wise or myopic expansion of the electricity system. Future updates of the model will include the option to allow simultaneous co-optimization of sequential planning decisions over multiple investment periods, where we leverage dual dynamic programming techniques to improve computational tractability.","category":"page"},{"location":"model_introduction.html#Uses-1","page":"Model Introduction","title":"Uses","text":"","category":"section"},{"location":"model_introduction.html#","page":"Model Introduction","title":"Model Introduction","text":"From a centralized planning perspective, the GenX model can help to determine the investments needed to supply future electricity demand at minimum cost, as is common in least-cost utility planning or integrated resource planning processes. In the context of liberalized markets, the model can be used by regulators and policy makers for indicative energy planning or policy analysis in order to establish a long-term vision of efficient market and policy outcomes. The model can also be used for techno-economic assessment of emerging electricity generation, storage, and demand-side resources and to enumerate the effect of parametric uncertainty (e.g., technology costs, fuel costs, demand, policy decisions) on the system-wide value or role of different resources.","category":"page"},{"location":"model_introduction.html#Structure-of-the-Model-1","page":"Model Introduction","title":"Structure of the Model","text":"","category":"section"},{"location":"model_introduction.html#","page":"Model Introduction","title":"Model Introduction","text":"FILL IN WITH FLOW-THROUGH OF MODEL AS IT RUNS: CONFIGURE MODEL -> CONFIGURE SOLVER ->  INPUTS -> SETUP MODEL -> SOLVE MODEL -> OUTPUTS","category":"page"},{"location":"energy_share_requirement.html#Energy-Share-Requirement-1","page":"Energy Share Requirement","title":"Energy Share Requirement","text":"","category":"section"},{"location":"energy_share_requirement.html#","page":"Energy Share Requirement","title":"Energy Share Requirement","text":"Modules = [GenX]\r\nPages = [\"energy_share_requirement.jl\"]","category":"page"},{"location":"energy_share_requirement.html#GenX.energy_share_requirement-Tuple{JuMP.Model,Dict,Dict}","page":"Energy Share Requirement","title":"GenX.energy_share_requirement","text":"energy_share_requirement(EP::Model, inputs::Dict, setup::Dict)\n\nThis function establishes constraints that can be flexibily applied to define alternative forms of policies that require generation of a minimum quantity of megawatt-hours from a set of qualifying resources, such as renewable portfolio standard (RPS) or clean electricity standard (CES) policies prevalent in different jurisdictions. These policies usually require that the annual MWh generation from a subset of qualifying generators has to be higher than a pre-specified percentage of load from qualifying zones.\n\nThe implementation allows for user to define one or multiple RPS/CES style minimum energy share constraints, where each constraint can cover different combination of model zones to mimic real-world policy implementation (e.g. multiple state policies, multiple RPS ``tiers'' or overlapping RPS and CES policies). The number of energy share requirement constraints is specified by the user by the value of the GenX settings parameter '''EnergyShareRequirement''' (this value should be an integer >=0). For each constraint p in mathcalP^ESR, we define a subset of zones z in mathcalZ^ESR_p subset mathcalZ that are eligible for trading renewable/clean energy credits to meet the corresponding renewable/clean energy requirement.\n\nFor each energy share requirement constraint p in mathcalP^ESR, we specify the share of total demand in each eligible model zone, z in mathcalZ^ESR_p, that must be served by qualifying resources, mathcalG_p^ESR subset mathcalG:\n\nbeginaligned\nsum_z in mathcalZ_p^ESR sum_y in mathcalG_p^ESR sum_t in mathcalT (omega_t times  Theta_yzt) geq  sum_z in mathcalZ^ESR_p sum_t in mathcalT (mu_pz^ESR times omega_t times D_zt) + notag \r\nsum_y in mathcalO sum_z in mathcalZ^ESR_p sum_t in mathcalT left(mu_pz^ESR times omega_t times (Pi_yzt - Theta_yzt) right) hspace1 cm  forall p in mathcalP^ESR \r\nendaligned\n\nThe final term in the summation above adds roundtrip storage losses to the total load to which the energy share obligation applies. This term is included in the constraint if the GenX setup parameter '''StorageLosses=1'''. If '''StorageLosses=0''', this term is removed from the constraint. In practice, most existing renewable portfolio standard policies do not account for storage losses when determining energy share requirements. However, with 100\\% RPS or CES policies enacted in several jurisdictions, policy makers may wish to include storage losses in the minimum energy share, as otherwise there will be a difference between total generation and total load that will permit continued use of non-qualifying resources (e.g. emitting generators).\n\n\n\n\n\n","category":"method"},{"location":"energy_share_requirement.html#GenX.load_energy_share_requirement-Tuple{Dict,AbstractString,AbstractString,Dict}","page":"Energy Share Requirement","title":"GenX.load_energy_share_requirement","text":"load_energy_share_requirement(setup::Dict, path::AbstractString, sep::AbstractString, inputs_ESR::Dict)\n\nFunction for reading input parameters related to mimimum energy share requirement constraints (e.g. renewable portfolio standard or clean electricity standard policies)\n\n\n\n\n\n","category":"method"},{"location":"flexible_demand.html#Flexible-Demand-1","page":"Flexible Demand","title":"Flexible Demand","text":"","category":"section"},{"location":"flexible_demand.html#","page":"Flexible Demand","title":"Flexible Demand","text":"Modules = [GenX]\r\nPages = [\"flexible_demand.jl\"]","category":"page"},{"location":"flexible_demand.html#GenX.flexible_demand-Tuple{JuMP.Model,Dict}","page":"Flexible Demand","title":"GenX.flexible_demand","text":"flexible_demand(EP::Model, inputs::Dict)\n\nThis function defines the operating constraints for flexible demand resources. As implemented, flexible demand resources (y in mathcalDF) are characterized by: a) maximum deferrable demand as a fraction of available capacity in a particular time step t, rho^max_yzt, b) the maximum time this demand can be advanced and delayed, defined by parameters, tau^advance_yz and tau^delay_yz, respectively and c) the energy losses associated with shifting demand, eta_yz^dflex.\n\nTracking total deferred demand\n\nThe operational constraints governing flexible demand resources are as follows.\n\nThe first two constraints model keep track of inventory of deferred demand in each time step.  Specifically, the amount of deferred demand remaining to be served (Gamma_yzt) depends on the amount in the previous time step minus the served demand during time step t (Theta_yzt) while accounting for energy losses associated with demand flexibility, plus the demand that has been deferred during the current time step (Pi_yzt). Note that variable Gamma_yzt in mathbbR, forall y in mathcalDF t  in mathcalT. Similar to hydro inventory or storage state of charge constraints, for the first time step of the year (or each representative period), we define the deferred demand level based on level of deferred demand in the last time step of the year (or each representative period).\n\nbeginaligned\nGamma_yzt = Gamma_yzt-1 -eta_yz^dflexTheta_yzt +Pi_yzt hspace4 cm  forall y in mathcalDF z in mathcalZ t in mathcalT^interior \r\nGamma_yzt = Gamma_yzt +tau^period-1 -eta_yz^dflexTheta_yzt +Pi_yzt hspace4 cm  forall y in mathcalDF z in mathcalZ t in mathcalT^start\nendaligned\n\nBounds on available demand flexibility\n\nAt any given time step, the amount of demand that can be shifted or deferred cannot exceed the maximum deferrable demand, defined by product of the availability factor (rho^max_yt) times the available capacity(Delta^total_yz).\n\nbeginaligned\nPi_yt leq rho^max_yztDelta_yz hspace4 cm  forall y in mathcalDF z in mathcalZ t in mathcalT\nendaligned\n\nMaximum time delay and advancements\n\nDelayed demand must then be served within a fixed number of time steps. This is done by enforcing the sum of demand satisfied (Theta_yzt) in the following tau^delay_yz time steps (e.g., t + 1 to t + tau^delay_yz) to be greater than or equal to the level of energy deferred during time step t.\n\nbeginaligned\nsum_e=t+1^t+tau^delay_yzTheta_yze geq Gamma_yzt\n    hspace4 cm  forall y in mathcalDFz in mathcalZ t in mathcalT\nendaligned\n\nA similar constraints maximum time steps of demand advancement. This is done by enforcing the sum of demand deferred (Pi_yt) in the following tau^advance_y time steps (e.g., t + 1 to t + tau^advance_y) to be greater than or equal to the total level of energy deferred during time t (-Gamma_yt). The negative sign is included to account for the established sign convention that treat demand deferred in advance of the actual demand is defined to be negative.\n\nbeginaligned\nsum_e=t+1^t+tau^advance_yzPi_yze geq -Gamma_yzt\n    hspace4 cm  forall y in mathcalDF z in mathcalZ t in mathcalT\nendaligned\n\nIf t is first time step of the year (or the first time step of the representative period), then the above two constraints are implemented to look back over the last n time steps, starting with the last time step of the year (or the last time step of the representative period). This time-wrapping implementation is similar to the time-wrapping implementations used for defining the storage balance constraints for hydropower reservoir resources and energy storage resources.\n\n\n\n\n\n","category":"method"},{"location":"methods.html#Methods-1","page":"Methods","title":"Methods","text":"","category":"section"},{"location":"methods.html#Time-Domain-Reduction-1","page":"Methods","title":"Time Domain Reduction","text":"","category":"section"},{"location":"methods.html#","page":"Methods","title":"Methods","text":"Rather than modeling and optimizing power grid operations at a high temporal resolution (e.g., hourly) while evaluating new capacity investments, which can be computationally expensive for large-scale studies with several resources,  it may be useful to consider a reduced temporal resolution to model annual grid operations. Such a time-domain reduction is often employed in CEMs as a way to balance model spatial and temporal resolution as well as representation of dispatch, while ensuring reasonable computational times.  The time-domain reduction method provided allows the user to automate these feature by specifying the various parameters related to the time-domain reduction algorithm (via time_domain_reduction_settings.yml described under  Model Inputs/Outputs documentations/Inputs), including the desired level of temporal resolution to be used in formulating the resulting optimization model.","category":"page"},{"location":"methods.html#","page":"Methods","title":"Methods","text":"Modules = [GenX]\r\nPages = [\"time_domain_reduction.jl\"]\r\nOrder = [:type, :function]","category":"page"},{"location":"methods.html#GenX.cluster_inputs","page":"Methods","title":"GenX.cluster_inputs","text":"cluster_inputs(inpath, settings_path, v=false, norm_plot=false, silh_plot=false, res_plots=false, indiv_plots=false, pair_plots=false)\n\nUse kmeans or kemoids to cluster raw load profiles and resource capacity factor profiles into representative periods. Use Extreme Periods to capture noteworthy periods or periods with notably poor fits.\n\nIn Load_data.csv, include the following:\n\nTimesteps_per_Rep_Period - Typically 168 timesteps (e.g., hours) per period, this designates the length   of each representative period.\nUseExtremePeriods - Either 1 or 0, this designates whether or not to include  outliers (by performance or load/resource extreme) as their own representative periods.  This setting automatically includes the periods with maximum load, minimum solar cf and  minimum wind cf as extreme periods.\nClusterMethod - Either 'kmeans' or 'kmedoids', this designates the method used to cluster  periods and determine each point's representative period.\nScalingMethod - Either 'N' or 'S', this designates directs the module to normalize ([0,1])  or standardize (mean 0, variance 1) the input data.\nMinPeriods - The minimum number of periods used to represent the input data. If using  UseExtremePeriods, this must be at least three. If IterativelyAddPeriods if off,  this will be the total number of periods.\nMaxPeriods - The maximum number of periods - both clustered periods and extreme periods -  that may be used to represent the input data.\nIterativelyAddPeriods - Either 1 or 0, this designates whether or not to add periods  until the error threshold between input data and represented data is met or the maximum  number of periods is reached.\nThreshold - Iterative period addition will end if the period farthest (Euclidean Distance)  from its representative period is within this percentage of the total possible error (for normalization)  or ~95% of the total possible error (for standardization). E.g., for a threshold of 0.01,  every period must be within 1% of the spread of possible error before the clustering  iterations will terminate (or until the max number of periods is reached).\nIterateMethod - Either 'cluster' or 'extreme', this designates whether to add clusters to  the kmeans/kmedoids method or to set aside the worst-fitting periods as a new extreme periods.\nnReps - The number of times to repeat each kmeans/kmedoids clustering at the same setting.\nLoadWeight - Default 1, this is an optional multiplier on load columns in order to prioritize  better fits for load profiles over resource capacity factor profiles.\nWeightTotal - Default 8760, the sum to which the relative weights of representative periods will be scaled.\nClusterFuelPrices - Either 1 or 0, this indicates whether or not to use the fuel price  time series in Fuels_data.csv in the clustering process. If 'no', this function will still write  Fuels_data_clustered.csv with reshaped fuel prices based on the number and size of the  representative weeks, assuming a constant time series of fuel prices with length equal to the  number of timesteps in the raw input data.\n\n\n\n\n\n","category":"function"},{"location":"methods.html#GenX.RemoveConstCols","page":"Methods","title":"GenX.RemoveConstCols","text":"RemoveConstCols(all_profiles, all_col_names)\n\nRemove and store the columns that do not vary during the period.\n\n\n\n\n\n","category":"function"},{"location":"methods.html#GenX.check_condition-NTuple{5,Any}","page":"Methods","title":"GenX.check_condition","text":"check_condition(Threshold, R, OldColNames, ScalingMethod, TimestepsPerRepPeriod)\n\nCheck whether the greatest Euclidean deviation in the input data and the clustered representation is within a given proportion of the \"maximum\" possible deviation.\n\n(1 for Normalization covers 100%, 4 for Standardization covers ~95%)\n\n\n\n\n\n","category":"method"},{"location":"methods.html#GenX.cluster","page":"Methods","title":"GenX.cluster","text":"cluster(ClusterMethod, ClusteringInputDF, NClusters, nIters)\n\nGet representative periods using cluster centers from kmeans or kmedoids.\n\nK-Means: https://juliastats.org/Clustering.jl/dev/kmeans.html\n\nK-Medoids:  https://juliastats.org/Clustering.jl/stable/kmedoids.html\n\n\n\n\n\n","category":"function"},{"location":"methods.html#GenX.get_absolute_extreme-NTuple{4,Any}","page":"Methods","title":"GenX.get_absolute_extreme","text":"get_absolute_extreme(DF, statKey, col_names, ConstCols)\n\nGet the period index of the single timestep with the minimum or maximum load or capacity factor.\n\n\n\n\n\n","category":"method"},{"location":"methods.html#GenX.get_extreme_period","page":"Methods","title":"GenX.get_extreme_period","text":"get_extreme_period(DF, GDF, profKey, typeKey, statKey,\n   ConstCols, load_col_names, solar_col_names, wind_col_names)\n\nIdentify extreme week by specification of profile type (Load, PV, Wind), measurement type (absolute (timestep with min/max value) vs. integral (period with min/max summed value)), and statistic (minimum or maximum). I.e., the user could want the hour with the most load across the whole system to be included among the extreme periods. They would select \"Load\", \"System, \"Absolute, and \"Max\".\n\n\n\n\n\n","category":"function"},{"location":"methods.html#GenX.get_integral_extreme-NTuple{4,Any}","page":"Methods","title":"GenX.get_integral_extreme","text":"get_integral_extreme(GDF, statKey, col_names, ConstCols)\n\nGet the period index with the minimum or maximum load or capacity factor summed over the period.\n\n\n\n\n\n","category":"method"},{"location":"methods.html#GenX.get_worst_period_idx-Tuple{Any}","page":"Methods","title":"GenX.get_worst_period_idx","text":"get_worst_period_idx(R)\n\nGet the index of the period that is farthest from its representative period by Euclidean distance.\n\n\n\n\n\n","category":"method"},{"location":"methods.html#GenX.parse_data-Tuple{Any}","page":"Methods","title":"GenX.parse_data","text":"parse_data(myinputs)\n\nGet load, solar, wind, and other curves from the input data.\n\n\n\n\n\n","category":"method"},{"location":"methods.html#GenX.rmse_score-Tuple{Any,Any}","page":"Methods","title":"GenX.rmse_score","text":"rmse_score(y_true, y_pred)\n\nCalculates Root Mean Square Error.\n\nRMSE = sqrtfrac1nSigma_i=1^nBig(fracd_i -f_isigma_iBig)^2\n\n\n\n\n\n","category":"method"},{"location":"methods.html#GenX.scale_weights","page":"Methods","title":"GenX.scale_weights","text":"scale_weights(W, H)\n\nLinearly scale weights W such that they sum to the desired number of timesteps (hours) H.\n\nw_j leftarrow H cdot fracw_jsum_i w_i    forall w_j in W\n\n\n\n\n\n","category":"function"},{"location":"reserves.html#Reserves-1","page":"Reserves","title":"Reserves","text":"","category":"section"},{"location":"reserves.html#","page":"Reserves","title":"Reserves","text":"Modules = [GenX]\r\nPages = [\"reserves.jl\"]","category":"page"},{"location":"reserves.html#GenX.reserves-Tuple{JuMP.Model,Dict,Int64}","page":"Reserves","title":"GenX.reserves","text":"reserves(EP::Model, inputs::Dict, UCommit::Int)\n\nThis function sets up reserve decisions and constraints, using reserves_core() and reserves_contingency() functions.\n\n\n\n\n\n","category":"method"},{"location":"reserves.html#GenX.reserves_contingency-Tuple{JuMP.Model,Dict,Int64}","page":"Reserves","title":"GenX.reserves_contingency","text":"reserves_contingency(EP::Model, inputs::Dict, UCommit::Int)\n\nThis function establishes several different versions of contingency reserve requirement expression, CONTINGENCY used in the reserves_core() function below.\n\nContingency reserves represent requirements for upward ramping capability within a specified time frame to compensated for forced outages or unplanned failures of generators or transmission lines (e.g. N-1 contingencies).\n\nThere are three options for the Contingency expression, depending on user settings: \t1. a static contingency, in which the contingency requirement is set based on a fixed value (in MW) specified in the '''reserves.csv''' input file; \t2. a dynamic contingency based on installed capacity decisions, in which the largest \\textit{installed} generator is used to determine the contingency requirement for all time periods; and \t3. dynamic unit commitment based contingency, in which the largest \\textit{committed} generator in any time period is used to determine the contingency requirement in that time period.\n\nNote that the two dynamic contigencies are only available if unit commitment is being modeled.\n\nStatic contingency Option 1 (static contingency) is expressed by the following constraint:\n\nbeginaligned\n\tContingency = epsilon^contingency\nendaligned\n\nwhere epsilon^contingency is static contingency requirement in MWs.\n\nDynamic capacity-based contingency Option 2 (dynamic capacity-based contingency) is expressed by the following constraints (Eqs. \\ref{eq:dynamconting1} - \\ref{eq:dynamconting3}):\n\nbeginaligned\n\tContingency geq Omega^size_yz times alpha^ContingencyAux_yz hspace4cm forall y in mathcalUC z in mathcalZ\nendaligned\n\nbeginaligned\n\talpha^ContingencyAux_yz leq Delta^texttotal_yz hspace4cm forall y in mathcalUC z in mathcalZ\nendaligned\n\nbeginaligned\n\talpha^ContingencyAux_yz geq M_y times Delta^texttotal_yz hspace4cm forall y in mathcalUC z in mathcalZ\nendaligned\n\nwhere M_y is a `big M' constant equal to the largest possible capacity that can be installed for generation cluster y, and alpha^ContingencyAux_yz in 01 is a binary auxiliary variable that is forced by the second and third equations above to be 1 if the total installed capacity Delta^texttotal_yz  0 for any generator y in mathcalUC and zone z, and can be 0 otherwise. Note that if the user specifies contingency option 2, and is also using the linear relaxation of unit commitment constraints, the capacity size parameter for units in the set mathcalUC must still be set to a discrete unit size for this contingency to work as intended.\n\nDynamic commitment-based contingency Option 3 (dynamic commitment-based contingency) is expressed by the following three sets of constraints (Eqs. \\ref{eq:dynamconting4} - \\ref{eq:dynamconting6}):\n\nbeginaligned\n\tContingency geq Omega^size_yz times Contingency_Aux_yzt hspace4cm forall y in mathcalUC z in mathcalZ\nendaligned\n\nbeginaligned\n\tContingency_Aux_yzt leq nu_yzt hspace4cm forall y in mathcalUC z in mathcalZ\nendaligned\n\nbeginaligned\n\tContingency_Aux_yzt geq M_y times nu_yzt hspace4cm forall y in mathcalUC z in mathcalZ\nendaligned\n\nwhere M_y is a `big M' constant equal to the largest possible capacity that can be installed for generation cluster y, and Contingency_Aux_yzt in 01 is a binary auxiliary variable that is forced by the second and third equations above to be 1 if the commitment state for that generation cluster nu_yzt  0 for any generator y in mathcalUC and zone z and time period t, and can be 0 otherwise. Note that this dynamic commitment-based contingency can only be specified if discrete unit commitment decisions are used (e.g. it will not work if relaxed unit commitment is used).\n\n\n\n\n\n","category":"method"},{"location":"reserves.html#GenX.reserves_core-Tuple{JuMP.Model,Dict,Int64}","page":"Reserves","title":"GenX.reserves_core","text":"reserves_core(EP::Model, inputs::Dict, UCommit::Int)\n\nThis function creates decision variables related to frequency regulation and reserves provision and constraints setting overall system requirements for regulation and operating reserves.\n\n** Regulation and reserves decisions**\n\nf_ytz geq 0\nis the contribution of generation or storage resource y in Y in time t in T and zone z in Z to frequency regulation\nr_ytz geq 0\nis the contribution of generation or storage resource y in Y in time t in T and zone z in Z to operating reserves up\n\nWe assume frequency regulation is symmetric (provided in equal quantity towards both upwards and downwards regulation). To reduce computational complexity, operating reserves are only modeled in the upwards direction, as downwards reserves requirements are rarely binding in practice.\n\nStorage resources (y in mathcalO) have two pairs of auxilary variables to reflect contributions to regulation and reserves when charging and discharging, where the primary variables (f_yzt \\& r_yzt) becomes equal to sum of these auxilary variables.\n\n** Unmet operating reserves**\n\nunmet_rsv_t geq 0\ndenotes any shortfall in provision of operating reserves during each time period t in T\n\nThere is a penalty C^rsv added to the objective function to penalize reserve shortfalls, equal to:\n\nbeginaligned\n\tC^rvs = sum_t in T omega_t times unmet_rsv_t\nendaligned\n\nFrequency regulation requirements\n\nTotal requirements for frequency regulation (aka primary reserves) in each time step t are specified as fractions of hourly demand (to reflect demand forecast errors) and variable renewable avaialblity in the time step (to reflect wind and solar forecast errors) as shown in Eq. \\ref{eq:regreq}.\n\nbeginaligned\n\tsum_y in Y z in Z f_ytz geq epsilon^load_reg times sum_z in Z mathcalD_zt + epsilon^vre_reg times sum_z in Z rho^max_yzt times Delta^texttotal_yz quad forall t in T\nendaligned\n\nwhere mathcalD_zt is the forecasted electricity demand in zone z at time t (before any demand flexibility); rho^max_yzt is the forecasted capacity factor for variable renewable resource y in VRE and zone z in time step t; Delta^texttotal_yz is the total installed capacity of variable renewable resources y in VRE and zone z; and epsilon^load_reg and epsilon^vre_reg are parameters specifying the required frequency regulation as a fraction of forecasted demand and variable renewable generation.\n\nOperating reserve requirements\n\nTotal requirements for operating reserves in the upward direction (aka spinning reserves or contingency reserces or secondary reserves) in each time step t are specified as fractions of time step's demand (to reflect demand forecast errors) and variable renewable avaialblity in the time step (to reflect wind and solar forecast errors) plus the largest planning contingency (e.g. potential forced generation outage) as shown in Eq. \\ref{eq:rsvreq}.\n\nbeginaligned\n\tsum_y in Y z in Z r_yzt + r^unmet_t geq epsilon^load_rsv times sum_z in Z mathcalD_zt + epsilon^vre_rsv times sum_z in Z rho^max_yzt times Delta^texttotal_yz + Contingency quad forall t in T\nendaligned\n\nwhere mathcalD_zt is the forecasted electricity demand in zone z at time t (before any demand flexibility); rho^max_yzt is the forecasted capacity factor for variable renewable resource y in VRE and zone z in time step t; Delta^texttotal_yz is the total installed capacity of variable renewable resources y in VRE and zone z; and epsilon^load_rsv and epsilon^vre_rsv are parameters specifying the required contingency reserves as a fraction of forecasted demand and variable renewable generation. Contingency is an expression defined in the reserves_contingency() function meant to represent the largest `N-1' contingency (unplanned generator outage) that the system operator must carry operating reserves to cover and depends on how the user wishes to specify contingency requirements.\n\n\n\n\n\n","category":"method"},{"location":"power_balance.html#Power-Balance-Constraint-1","page":"Power Balance","title":"Power Balance Constraint","text":"","category":"section"},{"location":"power_balance.html#","page":"Power Balance","title":"Power Balance","text":"The power balance constraint of the model ensures that electricity demand is met at every time step in each zone. As shown in the constraint, electricity demand, D_tz, at each time step and for each zone must be strictly equal to the sum of generation, Theta_yzt, from thermal technologies (mathcalH), curtailable variable renewable energy resources (mathcalVRE), must-run resources (mathcalMR), and hydro resources (mathcalW). At the same time, energy storage devices (mathcalO) can discharge energy, Theta_yzt to help satisfy demand, while when these devices are charging, Pi_yzt, they increase demand. For the case of flexible demand resources (mathcalDF), delaying demand, Pi_yzt, decreases demand while satisfying delayed demand, Theta_yzt, increases demand. Price-responsive demand curtailment, Lambda_szt, also reduces demand. Finally, power flows, Phi_lt, on each line l into or out of a zone (defined by the network map varphi^map_lz), are considered in the demand balance equation for each zone. By definition, power flows leaving their reference zone are positive, thus the minus sign in the below constraint. At the same time losses due to power flows increase demand, and one-half of losses across a line linking two zones are attributed to each connected zone. The losses function beta_lt(cdot) will depend on the configuration used to model losses (see Transmission).","category":"page"},{"location":"power_balance.html#","page":"Power Balance","title":"Power Balance","text":"beginaligned\r\nsum_yin mathcalHTheta_yzt +sum_yin mathcalVRETheta_yzt +sum_yin mathcalMRTheta_yzt + sum_yin mathcalO(Theta_yzt-Pi_yzt) + \r\n sum_yin mathcalDF(-Theta_yzt+Pi_yzt) +sum_yin mathcalWTheta_yzt+ \r\n+ sum_sin mathcalSLambda_szt  - sum_lin mathcalL(varphi^map_lz times Phi_lt) -frac12 sum_lin mathcalL(varphi^map_lz times beta_lt(cdot)) = D_zt\r\n forall zin mathcalZ  t in mathcalT\r\nendaligned","category":"page"},{"location":"storage_asymmetric.html#Storage-Asymmetric-1","page":"Storage Asymmetric","title":"Storage Asymmetric","text":"","category":"section"},{"location":"storage_asymmetric.html#","page":"Storage Asymmetric","title":"Storage Asymmetric","text":"Modules = [GenX]\r\nPages = [\"storage_asymmetric.jl\"]","category":"page"},{"location":"storage_asymmetric.html#GenX.storage_asymmetric-Tuple{JuMP.Model,Dict,Int64}","page":"Storage Asymmetric","title":"GenX.storage_asymmetric","text":"storage_asymmetric(EP::Model, inputs::Dict, Reserves::Int)\n\nSets up variables and constraints specific to storage resources with asymmetric charge and discharge capacities. See storage() in storage.jl for description of constraints.\n\n\n\n\n\n","category":"method"},{"location":"storage_asymmetric.html#GenX.storage_asymmetric_reserves-Tuple{JuMP.Model,Dict}","page":"Storage Asymmetric","title":"GenX.storage_asymmetric_reserves","text":"storage_asymmetric_reserves(EP::Model, inputs::Dict)\n\nSets up variables and constraints specific to storage resources with asymmetric charge and discharge capacities when reserves are modeled. See storage() in storage.jl for description of constraints.\n\n\n\n\n\n","category":"method"},{"location":"objective_function.html#Objective-Function-1","page":"Objective Function","title":"Objective Function","text":"","category":"section"},{"location":"objective_function.html#","page":"Objective Function","title":"Objective Function","text":"The objective function of GenX minimizes total annual electricity system costs over the following six components shown in the below equation:","category":"page"},{"location":"objective_function.html#","page":"Objective Function","title":"Objective Function","text":"beginaligned\r\n\ttextmin quad\r\n\tsum_y in mathcalG sum_z in mathcalZ left((pi^INVEST_yz times overlineOmega^size_yz times  Omega_yz) + (pi^FOM_yz times overlineOmega^size_yz times  Delta^total_yz)right) +  \r\n\tsum_y in mathcalO sum_z in mathcalZ left( (pi^INVESTenergy_yz times    Omega^energy_yz) + (pi^FOMenergy_yz times  Delta^totalenergy_yz)right) +  \r\n\tsum_y in mathcalO^asym  sum_z in mathcalZ left( (pi^INVESTcharge_yz times    Omega^charge_yz) + (pi^FOMcharge_yz times  Delta^totalcharge_yz)right) +  \r\n\t sum_y in mathcalG sum_z in mathcalZ sum_t in mathcalT left( omega_ttimes(pi^VOM_yz + pi^FUEL_yz)times Theta_yztright) + sum_y in mathcalO cup DF  sum_z in mathcalZ sum_t in mathcalT left( omega_ttimespi^VOMcharge_yz times Pi_yztright) + \r\n\tsum_s in mathcalS sum_z in mathcalZ sum_t in mathcalT left(omega_t times n_s^slope times Lambda_sztright) + sum_t in mathcalT left(omega_t times pi^unmet_rsv times r^unmet_tright)  \r\n\tsum_y in mathcalH sum_z in mathcalZ sum_t in mathcalTleft(omega_t times pi^START_yz times chi_sztright) +  \r\n\t sum_l in mathcalLleft(pi^TCAP_l times bigtriangleupvarphi^max_lright)\r\nendaligned","category":"page"},{"location":"objective_function.html#","page":"Objective Function","title":"Objective Function","text":"The first summation represents the fixed costs of generation/discharge over all zones and technologies, which reflects the sum of the annualized capital cost, pi^INVEST_yz, times the total new capacity added (if any), plus the Fixed O&M cost, pi^FOM_yz, times the net installed generation capacity, overlineOmega^size_yz times Delta^total_yz (e.g., existing capacity less retirements plus additions).","category":"page"},{"location":"objective_function.html#","page":"Objective Function","title":"Objective Function","text":"The second summation corresponds to the fixed cost of installed energy storage capacity and is summed over only the storage resources (y in mathcalO). This term includes the sum of the annualized energy capital cost, pi^INVESTenergy_yz, times the total new energy capacity added (if any), plus the Fixed O&M cost, pi^FOM energy_yz, times the net installed energy storage capacity, Delta^total_yz (e.g., existing capacity less retirements plus additions).","category":"page"},{"location":"objective_function.html#","page":"Objective Function","title":"Objective Function","text":"The third summation corresponds to the fixed cost of installed charging power capacity and is summed over only over storage resources with independent/asymmetric charge and discharge power components (y in mathcalO^asym). This term includes the sum of the annualized charging power capital cost, pi^INVESTcharge_yz, times the total new charging power capacity added (if any), plus the Fixed O&M cost, pi^FOM energy_yz, times the net installed charging power capacity, Delta^total_yz (e.g., existing capacity less retirements plus additions).","category":"page"},{"location":"objective_function.html#","page":"Objective Function","title":"Objective Function","text":"The fourth and fifth summations correspond to the operational cost across all zones, technologies, and time steps. The fourth summation represents the sum of fuel cost, pi^FUEL_yz (if any), plus variable O&M cost, pi^VOM_yz times the energy generation/discharge by generation or storage resources (or demand satisfied via flexible demand resources, yinmathcalDF) in time step t, Theta_yzt, and the weight of each time step t, omega_t. The fifth summation represents the variable charging O&M cost, pi^VOMcharge_yz times the energy withdrawn for charging by storage resources (or demand deferred by flexible demand resources) in time step t , Pi_yzt and the annual weight of time step t,omega_t. The weight of each time step, omega_t, is equal to 1 when modeling grid operations over the entire year (8760 hours), but otherwise is equal to the number of hours in the year represented by the representative time step, t such that the sum of omega_t forall t in T = 8760, approximating annual operating costs.","category":"page"},{"location":"objective_function.html#","page":"Objective Function","title":"Objective Function","text":"The sixth summation represents the total cost of unserved demand across all segments s of a segment-wise price-elastic demand curve, equal to the marginal value of consumption (or cost of non-served energy), n_s^slope, times the amount of non-served energy, Lambda_yzt, for each segment on each zone during each time step (weighted by omega_t).","category":"page"},{"location":"objective_function.html#","page":"Objective Function","title":"Objective Function","text":"The seventh summation represents the total cost of not meeting hourly operating reserve requirements (if modeled), where pi^unmet_rsv is the cost penalty per unit of non-served reserve requirement, and r^unmet_t is the amount of non-served reserve requirement in each time step (weighted by omega_t).","category":"page"},{"location":"objective_function.html#","page":"Objective Function","title":"Objective Function","text":"The eighth summation corresponds to the startup costs incurred by technologies to which unit commitment decisions apply (e.g. y in mathcalUC), equal to the cost of start-up, pi^START_yz, times the number of startup events, chi_yzt, for the cluster of units in each zone and time step (weighted by omega_t).","category":"page"},{"location":"objective_function.html#","page":"Objective Function","title":"Objective Function","text":"The last term corresponds to the transmission reinforcement or construction costs, for each transmission line (if modeled). Transmission reinforcement costs are equal to the sum across all lines of the product between the transmission reinforcement/construction cost, pi^TCAP_l, times the additional transmission capacity variable, bigtriangleupvarphi^max_l. Note that fixed O\\&M and replacement capital costs (depreciation) for existing transmission capacity is treated as a sunk cost and not included explicitly in the GenX objective function.","category":"page"},{"location":"objective_function.html#","page":"Objective Function","title":"Objective Function","text":"In summary, the objective function can be understood as the minimization of costs associated with five sets of different decisions: (1) where and how to invest on capacity, (2) how to dispatch or operate that capacity, (3) which consumer demand segments to serve or curtail, (4) how to cycle and commit thermal units subject to unit commitment decisions, (5) and where and how to invest in additional transmission network capacity to increase power transfer capacity between zones. Note however that each of these components are considered jointly and the optimization is performed over the whole problem at once as a monolithic co-optimization problem.","category":"page"},{"location":"objective_function.html#","page":"Objective Function","title":"Objective Function","text":"While the objective function is formulated as a cost minimization problem, it is also equivalent to a social welfare maximization problem, with the bulk of demand treated as inelastic and always served, and the utility of consumption for price-elastic consumers represented as a segment-wise approximation, as per the cost of unserved demand summation above.","category":"page"},{"location":"discharge.html#Discharge-1","page":"Discharge","title":"Discharge","text":"","category":"section"},{"location":"discharge.html#","page":"Discharge","title":"Discharge","text":"Modules = [GenX]\r\nPages = [\"discharge.jl\"]","category":"page"},{"location":"discharge.html#GenX.discharge-Tuple{JuMP.Model,Dict}","page":"Discharge","title":"GenX.discharge","text":"power(EP::Model, inputs::Dict)\n\nThis module defines the power decision variable Theta_yt forall y in mathcalG t in mathcalT, representing energy injected into the grid by resource y by at time period t.\n\nThis module additionally defines contributions to the objective function from variable costs of generation (variable O\\&M plus fuel cost) from all resources y in mathcalG over all time periods t in mathcalT:\n\nbeginaligned\n\tObj_Var_gen =\n\tsum_y in mathcalG  sum_t in mathcalTomega_ttimes(pi^VOM_y + pi^FUEL_y)times Theta_yt\nendaligned\n\n\n\n\n\n","category":"method"},{"location":"discharge.html#GenX.investment_discharge-Tuple{JuMP.Model,Dict}","page":"Discharge","title":"GenX.investment_discharge","text":"investment_discharge(EP::Model, inputs::Dict)\n\nThis function defines the expressions and constraints keeping track of total available power generation/discharge capacity across all resources as well as constraints on capacity retirements.\n\nThe total capacity of each resource is defined as the sum of the existing capacity plus the newly invested capacity minus any retired capacity (Eq. \\ref{eq:totalpowercap}). Note for storage resources, additional energy and charge power capacity decisions and constraints are defined in the storage module.\n\nbeginaligned\n Delta^total_yz =(overlineDelta_yz+Omega_yz-Delta_yz) forall y in mathcalG z in mathcalZ\nendaligned\n\nOne cannot retire more capacity than existing capacity.\n\nbeginaligned\nDelta_yz leq overlineDelta_yz\n\thspace4 cm  forall y in mathcalG z in mathcalZ\nendaligned\n\nFor resources where overlineOmega_yz and underlineOmega_yz is defined, then we impose constraints on minimum (Eq. \\ref{eq:mincap}) and maximum power capacity (Eq. \\ref{eq:maxcap}).\n\nbeginaligned\n Delta^total_yz leq overlineOmega_yz\n\thspace4 cm  forall y in mathcalG z in mathcalZ \r\n Delta^total_yz  geq underlineOmega_yz\n\thspace4 cm  forall y in mathcalG z in mathcalZ\nendaligned\n\nIn addition, this function adds investment and fixed O\\&M related costs related to discharge/generation capacity to the objective function:\n\nbeginaligned\n \tsum_y in mathcalG  sum_z in mathcalZ\n\tleft( (pi^INVEST_yz times overlineOmega^size_yz times  Omega_yz)\n\t+ (pi^FOM_yz times overlineOmega^size_yz times  Delta^total_yz)right)\nendaligned\n\n\n\n\n\n","category":"method"},{"location":"storage.html#Storage-1","page":"Storage","title":"Storage","text":"","category":"section"},{"location":"storage.html#","page":"Storage","title":"Storage","text":"Modules = [GenX]\r\nPages = [\"storage.jl\"]","category":"page"},{"location":"storage.html#GenX.storage-Tuple{JuMP.Model,Dict,Int64,Int64,Int64}","page":"Storage","title":"GenX.storage","text":"storage(EP::Model, inputs::Dict, Reserves::Int, OperationWrapping::Int, LongDurationStorage::Int)\n\nA wide range of energy storage devices (all o in mathcalO) can be modeled in GenX, using one of two generic storage formulations: (1) storage technologies with symmetric charge and discharge capacity (all o in mathcalO^sym), such as Lithium-ion batteries and most other electrochemical storage devices that use the same components for both charge and discharge; and (2) storage technologies that employ distinct and potentially asymmetric charge and discharge capacities (all o in mathcalO^asym), such as most thermal storage technologies or hydrogen electrolysis/storage/fuel cell or combustion turbine systems.\n\nStorage with symmetric charge and discharge capacity\n\nFor storage technologies with symmetric charge and discharge capacity (all o in mathcalO^sym), charge rate, Pi_ozt, is constrained by the total installed power capacity, Omega_oz. Since storage resources generally represent a `cluster' of multiple similar storage devices of the same type/cost in the same zone, GenX permits storage resources to simultaneously charge and discharge (as some units could be charging while others discharge), with the simultaenous sum of charge, Pi_ozt, and discharge, Theta_ozt, also limited by the total installed power capacity, Delta^total_oz. These two constraints are as follows:\n\nbeginaligned\n\t  Pi_ozt leq Delta^total_oz  quad forall o in mathcalO^sym z in mathcalZ t in mathcalT\r\n\t  Pi_ozt + Theta_ozt leq Delta^total_oz  quad forall o in mathcalO^sym z in mathcalZ t in mathcalT\nendaligned\n\nThese constraints are created with the function storage_symmetric() in storage_symmetric.jl.\n\nIf reserves are modeled, the following two constraints replace those above:\n\nbeginaliged\n\t  Pi_ozt + f^charge_ozt leq Delta^total_oz  quad forall o in mathcalO^sym z in mathcalZ t in mathcalT\r\n\t  Pi_ozt + f^charge_ozt + Theta_ozt + f^discharge_ozt + r^discharge_ozt leq Delta^total_oz  quad forall o in mathcalO^sym z in mathcalZ t in mathcalT \r\nendaligned\n\nwhere f^charge_ozt is the contribution of storage resources to frequency regulation while charging, f^discharge_ozt is the contribution of storage resources to frequency regulation while discharging, and r^discharge_ozt is the contribution of storage resources to upward reserves while discharging. Note that as storage resources can contribute to regulation and reserves while either charging or discharging, the proxy variables f^charge_ozt f^discharge_ozt and r^charge_ozt r^discharge_ozt are created for storage resources where the total contribution to regulation and reserves, f_ozt r_ozt is the sum of the proxy variables.\n\nThese constraints are created with the function storage_symmetric_reserves() in storage_symmetric.jl.\n\nStorage with asymmetric charge and discharge capacity\n\nFor storage technologies with asymmetric charge and discharge capacities (all o in mathcalO^asym), charge rate, Pi_ozt, is constrained by the total installed charge capacity, Delta^total charge_oz, as follows:\n\nbeginaligned\n\t  Pi_ozt leq Delta^total charge_oz  quad forall o in mathcalO^asym z in mathcalZ t in mathcalT\nendaligned\n\nThese constraints are created with the function storage_asymmetric() in storage_asymmetric.jl.\n\nIf reserves are modeled, the above constraint is replaced by the following:\n\nbeginaligned\n\t  Pi_ozt + f^charge_ozt leq Delta^total charge_oz  quad forall o in mathcalO^asym z in mathcalZ t in mathcalT\nendaligned\n\nwhere f^+_y=ozt is the contribution of storage resources to frequency regulation while charging.\n\nThese constraints are created with the function storage_asymmetric_reserves() in storage_asymmetric.jl.\n\nAll storage resources\n\nThe following constraints apply to all storage resources, o in mathcalO, regardless of whether the charge/discharge capacities are symmetric or asymmetric.\n\nThe following two constraints track the state of charge of the storage resources at the end of each time period, relating the volume of energy stored at the end of the time period, Gamma_ozt, to the state of charge at the end of the prior time period, Gamma_ozt-1, the charge and discharge decisions in the current time period, Pi_ozt Theta_ozt, and the self discharge rate for the storage resource (if any), eta_oz^loss.  The first of these two constraints enforces storage inventory balance for interior time steps ($ t \\in \\mathcal{T}^{interior}) while the second enforces storage balance constraint for the initial time step (t \\in \\mathcal{T}^{start}$).\n\nbeginaligned allowdisplaybreaks\n\t  Gamma_ozt =Gamma_ozt-1 - frac1eta_oz^dischargeTheta_ozt + eta_oz^chargePi_ozt - eta_oz^lossGamma_ozt-1   quad forall o in mathcalO z in mathcalZ t in mathcalT^interior\r\n\t  Gamma_ozt =Gamma_ozt+tau^period-1 - frac1eta_oz^dischargeTheta_ozt + eta_oz^chargePi_ozt - eta_oz^lossGamma_ozt+tau^period-1   quad forall o in mathcalO z in mathcalZ t in mathcalT^start\nendaligned\n\nWhen modeling the entire year as a single chronological period with total number of time steps of tau^period, storage inventory in the first time step is linked to storage inventory at the last time step of the period representing the year. Alternatively, when modeling the entire year with multiple representative periods, Eq. \\ref{eq:SoCBalstart} relates storage inventory in the first timestep of the representative period with the inventory at the last time step of the representative period, where each representative period is made of tau^period time steps. In this implementation, energy exchange between representative periods is not permitted. When modeling representative time periods, GenX enables modeling of long duration energy storage which tracks state of charge between representative periods enable energy to be moved throughout the year. If LongDurationStorage=1 and OperationWrapping=1, this function calls long_duration_storage() in long_duration_storage.jl to enable this feature.\n\nThe next constraint limits the volume of energy stored at any time, Gamma_ozt, to be less than the installed energy storage capacity, Delta^total energy_oz. Finally, the maximum discharge rate for storage resources, Pi_ozt, is constrained to be less than the discharge power capacity, Omega_ozt or the state of charge at the end of the last period, Gamma_ozt-1, whichever is lessor.\n\nbeginaligned\n\t  Gamma_ozt leq Delta^total energy_oz  quad forall o in mathcalO z in mathcalZ t in mathcalT\r\n\t  Theta_ozt leq Delta^total_oz  quad forall o in mathcalO z in mathcalZ t in mathcalT\r\n\t  Theta_ozt leq Gamma_ozt-1  quad forall o in mathcalO z in mathcalZ t in mathcalT\nendaligned\n\nThe above constraints are established in storage_all() in storage_all.jl.\n\nIf reserves are modeled, two pairs of proxy variables f^charge_ozt f^discharge_ozt and r^charge_ozt r^discharge_ozt are created for storage resources, to denote the contribution of storage resources to regulation or reserves while charging or discharging, respectively. The total contribution to regulation and reserves, f_ozt r_ozt is then the sum of the proxy variables:\n\nbeginaligned\n\t  f_ozt = f^charge_ozt + f^dicharge_ozt  quad forall o in mathcalO z in mathcalZ t in mathcalT\r\n\t  r_ozt = r^charge_ozt + r^dicharge_ozt  quad forall o in mathcalO z in mathcalZ t in mathcalT\nendaligned\n\nThe total storage contribution to frequency regulation (f_ozt) and reserves (r_ozt) are each limited specified fraction of installed discharge power capacity (upsilon^reg_yz upsilon^rsv_yz), reflecting the maximum ramp rate for the storage resource in whatever time interval defines the requisite response time for the regulation or reserve products (e.g., 5 mins or 15 mins or 30 mins). These response times differ by system operator and reserve product, and so the user should define these parameters in a self-consistent way for whatever system context they are modeling.\n\nbeginaligned\n\tf_yzt leq upsilon^reg_yz times Delta^total_yz\n\thspace4 cm  forall y in mathcalW z in mathcalZ t in mathcalT \r\n\tr_yz t leq upsilon^rsv_yztimes Delta^total_yz\n\thspace4 cm  forall y in mathcalW z in mathcalZ t in mathcalT\n\tendaligned\n\nWhen charging, reducing the charge rate is contributing to upwards reserve and frequency regulation as it drops net demand. As such, the sum of the charge rate plus contribution to regulation and reserves up must be greater than zero. Additionally, the discharge rate plus the contribution to regulation must be greater than zero.\n\nbeginaligned\n\t  Pi_ozt - f^charge_ozt - r^charge_ozt geq 0  quad forall o in mathcalO z in mathcalZ t in mathcalT\r\n\t  Theta_ozt - f^discharge_ozt geq 0  quad forall o in mathcalO z in mathcalZ t in mathcalT\nendaligned\n\nAdditionally, when reserves are modeled, the maximum charge rate and contribution to regulation while charging can be no greater than the available energy storage capacity, or the difference between the total energy storage capacity, Delta^total energy_oz, and the state of charge at the end of the previous time period, Gamma_ozt-1. Note that for storage to contribute to reserves down while charging, the storage device must be capable of increasing the charge rate (which increase net load).\n\nbeginaligned\n\t  Pi_ozt + f^charge_ozt leq Delta^energy total_oz - Gamma_ozt-1  quad forall o in mathcalO z in mathcalZ t in mathcalT\nendaligned\n\nFinally, the constraints on maximum discharge rate are replaced by the following, to account for capacity contributed to regulation and reserves:\n\nbeginaligned\n\t  Theta_ozt + f^discharge_ozt + r^discharge_ozt leq Delta^total_oz  quad forall o in mathcalO z in mathcalZ t in mathcalT\r\n\t  Theta_ozt + f^discharge_ozt + r^discharge_ozt leq Gamma_ozt-1  quad forall o in mathcalO z in mathcalZ t in mathcalT\nendaligned\n\nThe above reserve related constraints are established by storage_all_reserves() in storage_all.jl\n\n\n\n\n\n","category":"method"},{"location":"storage.html#GenX.write_storage-Tuple{AbstractString,AbstractString,Dict,Dict,JuMP.Model}","page":"Storage","title":"GenX.write_storage","text":"write_storage(path::AbstractString, sep::AbstractString, inputs::Dict,setup::Dict, EP::Model)\n\nFunction for writing the capacities of different storage technologies, including hydro reservoir, flexible storage tech etc.\n\n\n\n\n\n","category":"method"},{"location":"storage_all.html#Storage-All-1","page":"Storage All","title":"Storage All","text":"","category":"section"},{"location":"storage_all.html#","page":"Storage All","title":"Storage All","text":"Modules = [GenX]\r\nPages = [\"storage_all.jl\"]","category":"page"},{"location":"storage_all.html#GenX.storage_all-Tuple{JuMP.Model,Dict,Int64,Int64,Int64}","page":"Storage All","title":"GenX.storage_all","text":"storage_all(EP::Model, inputs::Dict, Reserves::Int, OperationWrapping::Int, LongDurationStorage::Int)\n\nSets up variables and constraints common to all storage resources. See storage() in storage.jl for description of constraints.\n\n\n\n\n\n","category":"method"},{"location":"transmission.html#Transmission-1","page":"Transmission","title":"Transmission","text":"","category":"section"},{"location":"transmission.html#","page":"Transmission","title":"Transmission","text":"Modules = [GenX]\r\nPages = [\"transmission.jl\"]","category":"page"},{"location":"transmission.html#GenX.transmission-Tuple{JuMP.Model,Dict,Int64,Int64}","page":"Transmission","title":"GenX.transmission","text":"transmission(EP::Model, inputs::Dict, UCommit::Int, NetworkExpansion::Int)\n\nThis function establishes decisions, expressions, and constraints related to transmission power flows between model zones and associated transmission losses (if modeled).\n\nThe function adds transmission reinforcement or construction costs to the objective function. Transmission reinforcement costs are equal to the sum across all lines of the product between the transmission reinforcement/construction cost, pi^TCAP_l, times the additional transmission capacity variable, bigtriangleupvarphi^max_l.\n\nbeginaligned\n sum_l in mathcalLleft(pi^TCAP_l times bigtriangleupvarphi^max_lright)\nendaligned\n\nNote that fixed O\\&M and replacement capital costs (depreciation) for existing transmission capacity is treated as a sunk cost and not included explicitly in the GenX objective function.\n\nPower flow and transmission loss terms are also added to the power balance constraint for each zone:\n\nbeginaligned\n\t- sum_lin mathcalL(varphi^map_lz times Phi_lt) - frac12 sum_lin mathcalL(varphi^map_lz times beta_lt(cdot))\nendaligned\n\nPower flows, Phi_lt, on each line l into or out of a zone (defined by the network map varphi^map_lz), are considered in the demand balance equation for each zone. By definition, power flows leaving their reference zone are positive, thus the minus sign is used for this term. Losses due to power flows increase demand, and one-half of losses across a line linking two zones are attributed to each connected zone. The losses function beta_lt(cdot) will depend on the configuration used to model losses (see below).\n\nAccounting for Transmission and Network Expansion Between Zones\n\nTransmission flow constraints are modeled using a 'transport method','' where power flow, Phi_lt, on each line (or more likely a `path' aggregating flows across multiple parallel lines) is constrained to be less than or equal to the line's maximum power transfer capacity, varphi^max_l, plus any transmission capacity added on that line (for lines eligible for expansion in the set mathcalE). The additional transmission capacity, bigtriangleupvarphi^max_l  is constrained by a maximum allowed reinforcement overlinebigtriangleupvarphi^max_l, for each line l in mathcalE.\n\nbeginaligned\n\t trasmission constraints\n\t-varphi^max_l leq  Phi_lt leq varphi^max_l  quad forall l in (mathcalL setminus mathcalE )forall t  in mathcalT\r\n\t trasmission expansion\n\t-(varphi^max_l + bigtriangleupvarphi^max_l ) leq  Phi_lt leq (varphi^max_l + bigtriangleupvarphi^max_l )  quad forall l in mathcalEforall t  in mathcalT\r\n\t bigtriangleupvarphi^max_l  leq overlinebigtriangleupvarphi^max_l quad forall l in mathcalE\nendaligned\n\nAccounting for Transmission Losses\n\nTransmission losses due to power flows can be accounted for in three different ways. The first option is to neglect losses entirely, setting the value of the losses function to zero for all lines at all hours. The second option is to assume that losses are a fixed percentage, varphi^loss_l, of the magnitude of power flow on each line, mid Phi_lt mid (e.g., losses are a linear function of power flows). Finally, the third option is to calculate losses, ell_lt, by approximating a quadratic-loss function of power flow across the line using a piecewise-linear function with total number of segments equal to the size of the set mathcalM.\n\nbeginaligned\nconfigurable losses formulation\n\t beta_lt(cdot) = begincases 0  textif textlosses0   varphi^loss_ltimes mid Phi_lt mid  textif textlosses1   ell_lt textif textlosses2 endcases quad forall l in mathcalLforall t  in mathcalT\nendaligned\n\nFor the second option, an absolute value approximation is utilized to calculate the magnitude of the power flow on each line (reflecting the fact that negative power flows for a line linking nodes i and j represents flows from node j to i and causes the same magnitude of losses as an equal power flow from i to j). This absolute value function is linearized such that the flow in the line must be equal to the subtraction of the auxiliary variable for flow in the positive direction, Phi^+_lt, and the auxiliary variable for flow in the negative direction, Phi^+_lt, of the line. Then, the magnitude of the flow is calculated as the sum of the two auxiliary variables. The sum of positive and negative directional flows are also constrained by the maximum line flow capacity.\n\nbeginaligned\n trasmission losses simple\n\tPhi_lt =  Phi^+_lt  - Phi^-_lt quad forall l in mathcalL forall t  in mathcalT\r\n\tmid Phi_lt mid =  Phi^+_lt  + Phi^-_lt quad forall l in mathcalL forall t  in mathcalT\r\n\tPhi^+_lt  + Phi^-_lt leq varphi^max_l quad forall l in mathcalL forall t  in mathcalT\nendaligned\n\nIf discrete unit commitment decisions are modeled, ``phantom losses'' can be observed wherein the auxiliary variables for flows in both directions (Phi^+_lt and Phi^-_lt) are both increased to produce increased losses so as to avoid cycling a thermal generator and incurring start-up costs or opportunity costs related to minimum down times. This unrealistic behavior can be eliminated via inclusion of additional constraints and a set of auxiliary binary variables, ON^+_lt in 01 forall l in mathcalL. Then the following additional constraints are created:\n\nbeginaligned\n\tPhi^+_lt leq TransON^+_lt  quad forall l in mathcalL forall t  in mathcalT\r\n\tPhi^-_lt leq (varphi^max_l + bigtriangleupvarphi^max_l) -TransON^+_lt quad  forall l in mathcalL forall t  in mathcalT\nendaligned\n\nwhere TransON^+_lt is a continuous variable, representing the product of the binary variable ON^+_lt and the expression, (varphi^max_l + bigtriangleupvarphi^max_l). This product cannot be defined explicitly, since it will lead to a bilinear expression involving two variables. Instead, we enforce this definition via the Glover's Linearization as shown below (also referred McCormick Envelopes constraints for bilinear expressions, which is exact when one of the variables is binary).\n\nbeginaligned\n\tTransON^+_lt leq  (varphi^max_l + overlinebigtriangleupvarphi^max_l) times TransON^+_lt  quad forall l in mathcalL forall t  in mathcalT \r\n\tTransON^+_lt leq  (varphi^max_l + bigtriangleupvarphi^max_l)  quad forall l in mathcalL forall t  in mathcalT \r\n\tTransON^+_lt leq (varphi^max_l + bigtriangleupvarphi^max_l) - (varphi^max_l + overlinebigtriangleupvarphi^max_l) times(1- TransON^+_lt)  quad forall l in mathcalL forall t  in mathcalT \r\nendaligned\n\nThese constraints permit only the positive or negative auxiliary flow variables to be non-zero at a given time period, not both.\n\nFor the third option, losses are calculated as a piecewise-linear approximation of a quadratic function of power flows. In order to do this, we represent the absolute value of the line flow variable by the sum of positive stepwise flow variables (mathcalS^+_mlt mathcalS^-_mlt), associated with each partition of line losses computed using the corresponding linear expressions. This can be understood as a segmentwise linear fitting (or first order approximation) of the quadratic losses function. The first constraint below computes the losses a the accumulated sum of losses for each linear stepwise segment of the approximated quadratic function, including both positive domain and negative domain segments. A second constraint ensures that the stepwise variables do not exceed the maximum size per segment. The slope and maximum size for each segment are calculated as per the method in \\cite{Zhang2013}.\n\nbeginaligned\n\t ell_lt = fracvarphi^ohm_l(varphi^volt_l)^2bigg( sum_m in mathcalM( S^+_mltimes mathcalS^+_mlt + S^-_mltimes mathcalS^-_mlt) bigg) quad forall l in mathcalL forall t  in mathcalT \r\n\t textquad Where \r\n\t quad S^+_ml = frac2+4 times sqrt2times (m-1)1+sqrt2 times (2 times M-1) (varphi^max_l + overlinebigtriangleupvarphi^max_l) quad forall m in 1 colon M l in mathcalL  \r\n\t quad S^-_ml = frac2+4 times sqrt2times (m-1)1+sqrt2 times (2 times M-1) (varphi^max_l + overlinebigtriangleupvarphi^max_l) quad forall m in 1 colon M l in mathcalL\r\n\t \r\n\t mathcalS^+_mlt mathcalS^-_mlt = overlinemathcalS_ml quad forall m in 1M l in mathcalL t in mathcalT \r\n\t textquad Where \r\n\t quad overlineS_lz =  begincases frac(1+sqrt2)1+sqrt2 times (2 times M-1)  (varphi^max_l + overlinebigtriangleupvarphi^max_l)  textif m = 1 \r\n\tfrac2 times sqrt2 1+sqrt2 times (2 times M-1) (varphi^max_l + overlinebigtriangleupvarphi^max_l)  textif m  1 endcases\nendaligned\n\nNext, a constraint ensures that the sum of auxiliary segment variables (m geq 1) minus the \"zero\" segment (which allows values to go into the negative domain) from both positive and negative domains must total the actual power flow across the line, and a constraint ensures that the sum of negative and positive flows do not exceed the maximum flow for the line.\n\nbeginaligned\n\tsum_m in 1M (mathcalS^+_mlt) - mathcalS^+_0lt =  Phi_lt quad forall l in mathcalL forall t  in mathcalT\r\n\tsum_m in 1M (mathcalS^-_mlt) - mathcalS^-_0lt  =  - Phi_lt\nendaligned\n\nAs with losses option 2, this segment-wise approximation of a quadratic loss function also permits 'phantom losses' to avoid cycling thermal units when discrete unit commitment decisions are modeled. In this case, the additional constraints below are also added to ensure that auxiliary segments variables do not exceed maximum value per segment and that they are filled in order; i.e., one segment cannot be non-zero unless prior segment is at its maximum value. Binary constraints deal with absolute value of power flow on each line. If the flow is positive, mathcalS^+_0lt must be zero; if flow is negative, mathcalS^+_0lt must be positive and takes on value of the full negative flow, forcing all mathcalS^+_mlt other segments (m geq 1) to be zero. Conversely, if the flow is negative, mathcalS^-_0lt must be zero; if flow is positive, mathcalS^-_0lt must be positive and takes on value of the full positive flow, forcing all mathcalS^-_mlt other segments (m geq 1) to be zero. Requiring segments to fill in sequential order and binary variables to ensure variables reflect the actual direction of power flows are both necessary to eliminate ``phantom losses'' from the solution. These constraints and binary decisions are ommited if the model is fully linear.\n\nbeginaligned\n\tmathcalS^+_mlt =    overlinemathcalS_ml times ON^+_mlt quad forall m in 1M forall l in mathcalL forall t  in mathcalT\r\n\tmathcalS^-_mlt =    overlinemathcalS_ml times ON^-_mlt  quad forall m in1M forall l in mathcalL forall t  in mathcalT\r\n\tmathcalS^+_mlt geq ON^+_m+1lt times overlinemathcalS_ml quad forall m in 1M forall l in mathcalL forall t  in mathcalT\r\n\tmathcalS^-_mlt geq ON^-_m+1lt times overlinemathcalS_ml  quad forall m in 1M forall l in mathcalL forall t  in mathcalT\r\n\tmathcalS^+_0lt leq varphi^max_l times (1- ON^+_1lt) quad forall l in mathcalL forall t  in mathcalT\r\n\tmathcalS^-_0lt leq varphi^max_l times (1- ON^-_1lt) quad forall l in mathcalL forall t  in mathcalT\nendaligned\n\n\n\n\n\n","category":"method"},{"location":"load_inputs.html#Reading-Input-Files-1","page":"GenX Inputs","title":"Reading Input Files","text":"","category":"section"},{"location":"load_inputs.html#","page":"GenX Inputs","title":"GenX Inputs","text":"Modules = [GenX]\r\nPages = [\"load_inputs.jl\"]","category":"page"},{"location":"load_inputs.html#GenX.load_inputs-Tuple{Dict,AbstractString}","page":"GenX Inputs","title":"GenX.load_inputs","text":"load_inputs(setup::Dict,path::AbstractString)\n\nLoads various data inputs from multiple input .csv files in path directory and stores variables in a Dict (dictionary) object for use in model() function\n\ninputs: setup - dict object containing setup parameters path - string path to working directory\n\nreturns: Dict (dictionary) object containing all data inputs\n\n\n\n\n\n","category":"method"},{"location":"load_inputs.html#Capacity-Reserve-Margin-1","page":"GenX Inputs","title":"Capacity Reserve Margin","text":"","category":"section"},{"location":"load_inputs.html#","page":"GenX Inputs","title":"GenX Inputs","text":"Modules = [GenX]\r\nPages = [\"load_cap_reserve_margin.jl\"]","category":"page"},{"location":"load_inputs.html#CO_2-Emissions-Cap-1","page":"GenX Inputs","title":"CO_2 Emissions Cap","text":"","category":"section"},{"location":"load_inputs.html#","page":"GenX Inputs","title":"GenX Inputs","text":"Modules = [GenX]\r\nPages = [\"load_co2_cap.jl\"]","category":"page"},{"location":"load_inputs.html#Energy-Share-Requirement-1","page":"GenX Inputs","title":"Energy Share Requirement","text":"","category":"section"},{"location":"load_inputs.html#","page":"GenX Inputs","title":"GenX Inputs","text":"Modules = [GenX]\r\nPages = [\"load_energy_share_requirement.jl\"]","category":"page"},{"location":"load_inputs.html#Fuels-Data-1","page":"GenX Inputs","title":"Fuels Data","text":"","category":"section"},{"location":"load_inputs.html#","page":"GenX Inputs","title":"GenX Inputs","text":"Modules = [GenX]\r\nPages = [\"load_fuels_data.jl\"]","category":"page"},{"location":"load_inputs.html#GenX.load_fuels_data-Tuple{Dict,AbstractString,AbstractString,Dict}","page":"GenX Inputs","title":"GenX.load_fuels_data","text":"load_fuels_data(setup::Dict, path::AbstractString, sep::AbstractString, inputs_fuel::Dict)\n\nFunction for reading input parameters related to fuel costs and CO_2 content of fuels\n\n\n\n\n\n","category":"method"},{"location":"load_inputs.html#Generators-Input-Data-1","page":"GenX Inputs","title":"Generators Input Data","text":"","category":"section"},{"location":"load_inputs.html#","page":"GenX Inputs","title":"GenX Inputs","text":"Modules = [GenX]\r\nPages = [\"load_generators_data.jl\"]","category":"page"},{"location":"load_inputs.html#GenX.load_generators_data-Tuple{Dict,AbstractString,AbstractString,Dict,Dict,Dict}","page":"GenX Inputs","title":"GenX.load_generators_data","text":"load_generators_data(setup::Dict, path::AbstractString, sep::AbstractString, inputs_gen::Dict, fuel_costs::Dict, fuel_CO2::Dict)\n\nFunction for reading input parameters related to electricity generators (plus storage and flexible demand resources)\n\n\n\n\n\n","category":"method"},{"location":"load_inputs.html#Variability-of-Generators'-Outputs-1","page":"GenX Inputs","title":"Variability of Generators' Outputs","text":"","category":"section"},{"location":"load_inputs.html#","page":"GenX Inputs","title":"GenX Inputs","text":"Modules = [GenX]\r\nPages = [\"load_generators_variability.jl\"]","category":"page"},{"location":"load_inputs.html#GenX.load_generators_variability-Tuple{Dict,AbstractString,AbstractString,Dict}","page":"GenX Inputs","title":"GenX.load_generators_variability","text":"load_generators_variability(setup::Dict, path::AbstractString, sep::AbstractString, inputs_genvar::Dict)\n\nFunction for reading input parameters related to hourly maximum capacity factors for all generators (plus storage and flexible demand resources)\n\n\n\n\n\n","category":"method"},{"location":"load_inputs.html#Load-Data-1","page":"GenX Inputs","title":"Load Data","text":"","category":"section"},{"location":"load_inputs.html#","page":"GenX Inputs","title":"GenX Inputs","text":"Modules = [GenX]\r\nPages = [\"load_load_data.jl\"]","category":"page"},{"location":"load_inputs.html#GenX.load_load_data-Tuple{Dict,AbstractString,AbstractString,Dict}","page":"GenX Inputs","title":"GenX.load_load_data","text":"load_data(setup::Dict, path::AbstractString, sep::AbstractString, inputs_load::Dict)\n\nFunction for reading input parameters related to electricity load (demand)\n\n\n\n\n\n","category":"method"},{"location":"load_inputs.html#Minimum-Capacity-Requirements-1","page":"GenX Inputs","title":"Minimum Capacity Requirements","text":"","category":"section"},{"location":"load_inputs.html#","page":"GenX Inputs","title":"GenX Inputs","text":"Modules = [GenX]\r\nPages = [\"load_minimum_capacity_requirement.jl\"]","category":"page"},{"location":"load_inputs.html#GenX.load_minimum_capacity_requirement-Tuple{AbstractString,AbstractString,Dict,Dict}","page":"GenX Inputs","title":"GenX.load_minimum_capacity_requirement","text":"load_minimum_capacity_requirement(path::AbstractString,sep::AbstractString, inputs::Dict, setup::Dict)\n\nFunction for reading input parameters related to mimimum capacity requirement constraints (e.g. technology specific deployment mandates)\n\n\n\n\n\n","category":"method"},{"location":"load_inputs.html#Transmission-Network-1","page":"GenX Inputs","title":"Transmission Network","text":"","category":"section"},{"location":"load_inputs.html#","page":"GenX Inputs","title":"GenX Inputs","text":"Modules = [GenX]\r\nPages = [\"load_network_data.jl\"]","category":"page"},{"location":"load_inputs.html#GenX.load_network_data-Tuple{Dict,AbstractString,AbstractString,Dict}","page":"GenX Inputs","title":"GenX.load_network_data","text":"load_network_data(setup::Dict, path::AbstractString, sep::AbstractString, inputs_nw::Dict)\n\nFunction for reading input parameters related to the electricity transmission network\n\n\n\n\n\n","category":"method"},{"location":"load_inputs.html#Mapping-Representative-Time-Periods-1","page":"GenX Inputs","title":"Mapping Representative Time Periods","text":"","category":"section"},{"location":"load_inputs.html#","page":"GenX Inputs","title":"GenX Inputs","text":"Modules = [GenX]\r\nPages = [\"load_period_map.jl\"]","category":"page"},{"location":"load_inputs.html#GenX.load_period_map-Tuple{Dict,AbstractString,AbstractString,Dict}","page":"GenX Inputs","title":"GenX.load_period_map","text":"load_period_map(setup::Dict,path::AbstractString,sep::AbstractString, inputs::Dict)\n\nFunction for reading input parameters related to mapping of representative time periods to full chronological time series\n\n\n\n\n\n","category":"method"},{"location":"load_inputs.html#Reserves-Data-1","page":"GenX Inputs","title":"Reserves Data","text":"","category":"section"},{"location":"load_inputs.html#","page":"GenX Inputs","title":"GenX Inputs","text":"Modules = [GenX]\r\nPages = [\"load_reserves.jl\"]","category":"page"},{"location":"load_inputs.html#GenX.load_reserves-Tuple{Dict,AbstractString,AbstractString,Dict}","page":"GenX Inputs","title":"GenX.load_reserves","text":"load_reserves(setup::Dict,path::AbstractString,sep::AbstractString, inputs_res::Dict)\n\nFunction for reading input parameters related to frequency regulation and operating reserve requirements\n\n\n\n\n\n","category":"method"},{"location":"hydro_res.html#Hydro-Resources-1","page":"Hydro","title":"Hydro Resources","text":"","category":"section"},{"location":"hydro_res.html#","page":"Hydro","title":"Hydro","text":"Modules = [GenX]\r\nPages = [\"hydro_res.jl\"]","category":"page"},{"location":"hydro_res.html#GenX.hydro_res-Tuple{JuMP.Model,Dict,Int64}","page":"Hydro","title":"GenX.hydro_res","text":"hydro_res(EP::Model, inputs::Dict, Reserves::Int)\n\nThis module defines the operational constraints for reservoir hydropower plants.\n\nHydroelectric generators with water storage reservoirs (y in mathcalW) are effectively modeled as energy storage devices that cannot charge from the grid and instead receive exogenous inflows to their storage reservoirs, reflecting stream flow inputs. For resources with unknown reservoir capacity (y in mathcalW^nocap), their operation is parametrized by their generation efficiency, eta_yz^down, and energy inflows to the reservoir at every time-step, represented as a fraction of the total power capacity,(rho^max_yzt).  In case reservoir capacity is known (y in mathcalW^cap), an additional parameter, mu^stor_yz, referring to the ratio of energy capacity to discharge power capacity, is used to define the available reservoir storage capacity.\n\nStorage inventory balance\n\nReservoir hydro systems are governed by the storage inventory balance constraint given below. This constraint enforces that energy level of the reservoir resource y and zone z in time step t (Gamma_yzt) is defined as the sum of the reservoir level in the previous time step, less the amount of electricity generated, Theta_yzt (accounting for the generation efficiency, eta_yz^down), minus any spillage varrho_yzt, plus the hourly inflows into the reservoir (equal to the installed reservoir discharged capacity times the normalized hourly inflow parameter rho^max_yz t).\n\nbeginaligned\nGamma_yzt = Gamma_yzt-1 -frac1eta_yz^downTheta_yzt - varrho_yzt + rho^max_yzt times Delta^total_yz  hspace1 cm  forall y in mathcalW z in mathcalZ t in mathcalT^interior \r\nGamma_yzt = Gamma_yzt+tau^period-1 -frac1eta_yz^downTheta_yzt - varrho_yzt + rho^max_yzt times Delta^total_yz  hspace1 cm  forall y in mathcalW z in mathcalZ t in mathcalT^start\nendaligned\n\nWe implement time-wrapping to endogenize the definition of the intial state prior to the first period with the following assumption. If time step t is the first time step of the year then storage inventory at t is defined based on last time step of the year. Alternatively, if time step t is the first time step of a representative period, then storage inventory at t is defined based on the last time step of the representative period. Thus, when using representative periods, the storage balance constraint for hydro resources does not allow for energy exchange between representative periods.\n\nNote: in future updates, an option to model hydro resources with large reservoirs that can transfer energy across sample periods will be implemented, similar to the functions for modeling long duration energy storage in longdurationstorage.jl.\n\nRamping Limits\n\nThe following constraints enforce hourly changes in power output (ramps down and ramps up) to be less than the maximum ramp rates (kappa^down_yz and kappa^up_yz ) in per unit terms times the total installed capacity of technology y (Delta^total_yz).\n\nbeginaligned\nTheta_yzt - Theta_yzt-1 leq kappa^up_yz times Delta^total_yz\nhspace2 cm  forall y in mathcalW z in mathcalZ t in mathcalT\nendaligned\n\nbeginaligned\nTheta_yzt-1 - Theta_yzt leq kappa^down_yz Delta^total_yz\nhspace2 cm  forall y in mathcalW z in mathcalZ t in mathcalT\nendaligned\n\nRamping constraints are enforced for all time steps except the first time step of the year or first time of each representative period when using representative periods to model grid operations.\n\nPower generation and stream flow bounds\n\nElectricity production plus total spilled power from hydro resources is constrained to always be above a minimum output parameter, rho^min_yz, to represent operational constraints related to minimum stream flows or other demands for water from hydro reservoirs. Electricity production is constrained by either the the net installed capacity or by the energy level in the reservoir in the prior time step, whichever is more binding. For the latter constraint, the constraint for the first time step of the year (or the first time step of each representative period) is implemented based on energy storage level in last time step of the year (or last time step of each representative period).\n\nbeginaligned\nTheta_yzt + varrho_yzt  geq rho^min_yz times Delta^total_yz\nhspace2 cm  forall y in mathcalW z in mathcalZ t in mathcalT\nendaligned\n\nbeginaligned\nTheta_yt  leq times Delta^total_yz\nhspace4 cm  forall y in mathcalW z in mathcalZ tin mathcalT\nendaligned\n\nbeginaligned\nTheta_yzt leq  Gamma_yt-1\nhspace4 cm  forall y in mathcalW z in mathcalZ tin mathcalT\nendaligned\n\nReservoir energy capacity constraint\n\nIn case the reservoir capacity is known (y in W^cap), then an additional constraint enforces the total stored energy in each time step to be less than or equal to the available reservoir capacity. Here, the reservoir capacity is defined multiplying the parameter, mu^stor_yz with the available power capacity.\n\nbeginaligned\nGamma_yz t leq mu^stor_yztimes Delta^total_yz\nhspace4 cm  forall y in mathcalW^cap z in mathcalZ tin mathcalT\nendaligned\n\n\n\n\n\n","category":"method"},{"location":"hydro_res.html#GenX.hydro_res_reserves-Tuple{JuMP.Model,Dict}","page":"Hydro","title":"GenX.hydro_res_reserves","text":"hydro_res_reserves(EP::Model, inputs::Dict, Reserves::Int)\n\nThis module defines the modified constraints and additional constraints needed when modeling operating reserves\n\nModifications when operating reserves are modeled\n\nWhen modeling operating reserves, the constraints regarding maximum power flow limits are modified to account for procuring some of the available capacity for frequency regulation (f_yzt) and \"updward\" operating (or spinning) reserves (r_yzt).\n\nbeginaligned\n Theta_yzt + f_yzt +r_yzt  leq  times Delta^total_yz\nhspace4 cm  forall y in mathcalW z in mathcalZ tin mathcalT\nendaligned\n\nThe amount of downward frequency regulation reserves cannot exceed the current power output.\n\nbeginaligned\n f_yzt leq Theta_yzt\nhspace4 cm  forall y in mathcalW z in mathcalZ t in mathcalT\nendaligned\n\nThe amount of frequency regulation and operating reserves procured in each time step is bounded by the user-specified fraction (upsilon^reg_yz,upsilon^rsv_yz) of nameplate capacity for each reserve type, reflecting the maximum ramp rate for the hydro resource in whatever time interval defines the requisite response time for the regulation or reserve products (e.g., 5 mins or 15 mins or 30 mins). These response times differ by system operator and reserve product, and so the user should define these parameters in a self-consistent way for whatever system context they are modeling.\n\nbeginaligned\nf_yzt leq upsilon^reg_yz times Delta^total_yz\nhspace4 cm  forall y in mathcalW z in mathcalZ t in mathcalT \r\nr_yz t leq upsilon^rsv_yztimes Delta^total_yz\nhspace4 cm  forall y in mathcalW z in mathcalZ t in mathcalT\nendaligned\n\n\n\n\n\n","category":"method"},{"location":"must_run.html#Must-Run-1","page":"Must Run","title":"Must Run","text":"","category":"section"},{"location":"must_run.html#","page":"Must Run","title":"Must Run","text":"Modules = [GenX]\r\nPages = [\"must_run.jl\"]","category":"page"},{"location":"must_run.html#GenX.must_run-Tuple{JuMP.Model,Dict}","page":"Must Run","title":"GenX.must_run","text":"must_run(EP::Model, inputs::Dict)\n\nThis function defines the constraints for operation of `must-run' or non-dispatchable resources, such as rooftop solar systems that do not receive dispatch signals, run-of-river hydroelectric facilities without the ability to spill water, or cogeneration systems that must produce a fixed quantity of heat in each time step. This resource type can also be used to model baseloaded or self-committed thermal generators that do not respond to economic dispatch.\n\nFor must-run resources (yin mathcalMR) output in each time period t must exactly equal the available capacity factor times the installed capacity, not allowing for curtailment. These resources are also not eligible for contributing to frequency regulation or operating reserve requirements.\n\nbeginaligned\nTheta_yzt = rho^max_yzttimes Delta^total_yz\nhspace4 cm  forall y in mathcalMR z in mathcalZt in mathcalT\nendaligned\n\n\n\n\n\n","category":"method"},{"location":"model_notation.html#Model-Notation-1","page":"Notation","title":"Model Notation","text":"","category":"section"},{"location":"model_notation.html#Table-1:-Model-Indices-and-Sets-1","page":"Notation","title":"Table 1: Model Indices and Sets","text":"","category":"section"},{"location":"model_notation.html#","page":"Notation","title":"Notation","text":"","category":"page"},{"location":"model_notation.html#","page":"Notation","title":"Notation","text":"Notation Description\nt in mathcalT where t denotes an time step and mathcalT is the set of time steps over which grid operations are modeled\nmathcalT^interior in mathcalT^ where mathcalT^interior is the set of interior timesteps in the data series\nmathcalT^start in mathcalT where mathcalT^start is the set of initial timesteps in the data series. mathcalT^start=1 when representing entire year as a single contiguous period; $\\mathcal{T}^{start}={\\left(m-1\\right) \\times \\tau^{period}+1\nn in mathcalN where n corresponds to a contiguous time period and mathcalN correspond to the set of contiguous periods of length tau^period that make up the input time series (e.g. load, variable renewable energy availability) to the model\nmathcalN^rep in mathcalN where mathcalN^rep correspond to set of representative time period hat are selected from set of contiguous periods, mathcalM\nm in mathcalM where m correspond to a representative time period and mathcalM corresponds to the set of representative periods indexed as per their chronological ocurrence in the set of contiguous periods spanning the input time series data, i.e. mathcalN\nz in mathcalZ where z denotes a zone and mathcalZ is the set of zones in the network\nl in mathcalL where l denotes a line and mathcalL is the set of transmission lines in the network\ny in mathcalG where y denotes a technology and mathcalG is the set of available technologies\nmathcalH in mathcalG where mathcalH is the subset of thermal resources\nmathcalVRE in mathcalG where mathcalVRE is the subset of curtailable variable renewable energy resources\noverlinemathcalVRE^yz set of VRE resource bins for VRE technology type y in mathcalVRE in zone z\nmathcalCE in mathcalG where mathcalCE is the subset of resources qualifying for the clean energy standard policy constraint\nmathcalUC in mathcalH where mathcalUC is the subset of thermal resources subject to unit commitment constraints\ns in mathcalS where s denotes a segment and mathcalS is the set of consumers segments for price-responsive demand curtailment\nmathcalO in mathcalG where mathcalO is the subset of storage resources excluding heat storage and hydro storage\no in mathcalO where o denotes a storage technology in a set mathcalO\nmathcalO^sym in mathcalO where mathcalO^sym correspond to the set of energy storage technologies with equal (or symmetric) charge and discharge power capacities\nmathcalO^asym in mathcalO where mathcalO^asym correspond to the set of energy storage technologies with independently sized (or asymmetric) charge and discharge power capacities\nmathcalO^LDES in mathcalO where mathcalO^LDES correspond to the set of long-duration energy storage technologies for which inter-period energy exchange is permitted when using representative periods to model annual grid operations\nmathcalW in mathcalG where mathcalW set of hydroelectric generators with water storage reservoirs\nmathcalW^nocap in mathcalW where mathcalW^nocap is a subset of set of $ \\mathcal{W}$ and represents resources with unknown reservoir capacity\nmathcalW^cap in mathcalW where mathcalW^cap is a subset of set of $ \\mathcal{W}$ and represents resources with known reservoir capacity\nmathcalMR in mathcalG where mathcalMR set of must-run resources\nmathcalDF in mathcalG where mathcalDF set of flexible demand resources\nmathcalG_p^ESR subseteq mathcalG where mathcalG_p^ESR is a subset of mathcalG that is elgible for ESR policy constraint p\np in mathcalP where p denotes a instance in the policy set mathcalP\nmathcalP^ESR subseteq mathcalP Energy Share Requirement type policies\nmathcalP^CO_2 subseteq mathcalP CO_2 emission cap policies\nmathcalP^CO_2_mass subseteq mathcalP^CO_2 CO_2 emissions limit policy constraints, mass-based\nmathcalP^CO_2_load subseteq mathcalP^CO_2 CO_2 emissions limit policy constraints, load emission-rate based\nmathcalP^CO_2_gen subseteq mathcalP^CO_2 CO_2 emissions limit policy constraints, generation emission-rate based\nmathcalP^CRM subseteq mathcalP Capacity reserve margin (CRM) type policy constraints\nmathcalP^MinTech subseteq mathcalP Minimum Capacity Carve-out type policy constraint\nmathcalZ^ESR_p subseteq mathcalZ set of zones eligible for ESR policy constraint p in mathcalP^ESR\nmathcalZ^CRM_p subseteq mathcalZ set of zones that form the locational deliverable area for capacity reserve margine policy constraint p in mathcalP^CRM\nmathcalZ^CO_2_pmass subseteq mathcalZ set of zones are under the emission cap mass-based cap-and-trade policy constraint p in mathcalP^CO_2_mass\nmathcalZ^CO_2_pload subseteq mathcalZ set of zones are under the emission cap load emission-rate based cap-and-trade policy constraint p in mathcalP^CO_2_load\nmathcalZ^CO_2_pgen subseteq mathcalZ set of zones are under the emission cap generation emission-rate based cap-and-trade policy constraint p in mathcalP^CO2gen\nmathcalL_p^in subseteq mathcalL The subset of transmission lines entering Locational Deliverability Area of capactiy reserve margine policy p in mathcalP^CRM\nmathcalL_p^in subseteq mathcalL The subset of transmission lines leaving Locational Deliverability Area of capactiy reserve margine policy p in mathcalP^CRM","category":"page"},{"location":"model_notation.html#","page":"Notation","title":"Notation","text":"","category":"page"},{"location":"model_notation.html#Table-2:-Decision-Variables-1","page":"Notation","title":"Table 2: Decision Variables","text":"","category":"section"},{"location":"model_notation.html#","page":"Notation","title":"Notation","text":"","category":"page"},{"location":"model_notation.html#","page":"Notation","title":"Notation","text":"Notation Description\nOmega^energy_yz in mathbbR_+ Installed energy capacity of resource y  in zone z - only applicable for storage resources, y in mathcalO [MWh]\nOmega^charge_yz in mathbbR_+ Installed charging power capacity of resource y  in zone z - only applicable for storage resources, y in mathcalO [MW]\nDelta_yz in mathbbR_+ Retired capacity of technology y from existing capacity in zone z [MW]\nDelta^energy_yz in mathbbR_+ Retired energy capacity of technology y from existing capacity in zone z - only applicable for storage resources, y in mathcalO[MWh]\nDelta^charge_yz in mathbbR_+ Retired charging capacity of technology y from existing capacity in zone z - only applicable for storage resources, y in mathcalO^asym[MW]\nDelta_yz^total in mathbbR_+ Total installed capacity of technology y in zone z [MW]\nDelta_yz^totalenergy in mathbbR_+ Total installed energy capacity of technology y in zone z  - only applicable for storage resources, y in mathcalO [MWh]\nDelta_yz^totalcharge in mathbbR_+ Total installed charging power capacity of technology y in zone z - only applicable for storage resources, y in mathcalO^asym [MW]\n$\\bigtriangleup\\varphi^{max}_{l} $ Additional transmission capacity added to line l [MW]\nTheta_yzt in mathbbR_+ Energy injected into the grid by technology y at time step t in zone z [MWh]\nPi_yzt in mathbbR_+ Energy withdrawn from grid by technology y at time step t in zone z [MWh]\nGamma_yzt in mathbbR_+ Stored energy level of technology y at end of time step t in zone z [MWh]\nLambda_szt in mathbbR_+ Non-served energy/curtailed demand from the price-responsive demand segment s in zone z at time step t [MWh]\nl_lt in mathbbR_+ Losses in line l at time step t [MWh]\nvarrho_yztin mathbbR_+ Spillage from a reservoir technology y at end of time step t in zone z [MWh]\nf_yztin mathbbR_+ Frequency regulation contribution [MW] for up and down reserves from technology y in zone z at time t\\footnote{Regulation reserve contribution are modeled to be symmetric, consistent with current practice in electricity markets}\nr_yzt in mathbbR_+ Upward spinning reserves contribution [MW] from technology y in zone z at time t\\footnote{we are not modeling down spinning reserves since these are usually never binding for high variable renewable energy systems}\nf^charge_yztin mathbbR_+ Frequency regulation contribution [MW] for up and down reserves from charging storage technology y in zone z at time t\nf^discharge_yztin mathbbR_+ Frequency regulation contribution [MW] for up and down reserves from discharging storage technology y in zone z at time t\nr^charge_yzt in mathbbR_+ Upward spinning reserves contribution [MW] from charging storage technology y in zone z at time t\nr^discharge_yzt in mathbbR_+ Upward spinning reserves contribution [MW] from discharging storage technology y in zone z at time t\nr^unmet_t in mathbbR_+ Shortfall in provision of upward operating spinning reserves during each time period t in T\nalpha^ContingencyAux_yz in 01 Binary variable that is set to be 1 if the total installed capacity  Delta^texttotal_yz  0 for any generator y in mathcalUC and zone z, and can be 0 otherwise\nPhi_lt in mathbbR_+ Power flow in line l at time step t [MWh]\nv_yzt Commitment state of the generation cluster y in zone z at time t\nmathcalX_yzt Number of startup decisions,  of the generation cluster y in zone z at time t\nzeta_yzt Number of shutdown decisions,  of the generation cluster y in zone z at time t\nmathcalQ_on in mathbbR_+ Inventory of storage of type o at the beginning of input period n [MWh]\nDeltamathcalQ_om in mathbbR Excess storage inventory built up during representative period m [MWh]\n$ON^{+}_{l,t} \\in {0,1} $ Binary variable to activate positive flows on line l in time t\nTransON^+_lt in mathbbR_+ Variable defining maximum positive flow in line l in time t [MW]","category":"page"},{"location":"model_notation.html#","page":"Notation","title":"Notation","text":"","category":"page"},{"location":"model_notation.html#Table-3:-Parameters-1","page":"Notation","title":"Table 3: Parameters","text":"","category":"section"},{"location":"model_notation.html#","page":"Notation","title":"Notation","text":"","category":"page"},{"location":"model_notation.html#","page":"Notation","title":"Notation","text":"Notation Description\nD_zt Electricity demand in zone z and at time step t [MWh]\ntau^period number of time steps in each representative period w in mathcalW^rep and each input period w in mathcalW^input\nomega_t weight of each model time step omega_t =1 forall t in T when modeling each time step of the year at an hourly resolution\nn_s^slope Cost of non-served energy/demand curtailment for price-responsive demand segment s [$/MWh]\nn_s^size Size of price-responsive demand segment s as a fraction of the hourly zonal demand [%]\noverlineOmega_yz Maximum capacity of technology y in zone z [MW]\nunderlineOmega_yz Minimum capacity of technology y in zone z [MW]\noverlineOmega^energy_yz Maximum energy capacity of technology y in zone z - only applicable for storage resources, y in mathcalO  [MWh]\nunderlineOmega^energy_yz Minimum energy capacity of technology y in zone z - only applicable for storage resources, y in mathcalO [MWh]\noverlineOmega^charge_yz Maximum charging power capacity of technology y in zone z  - only applicable for storage resources, y in mathcalO^asym [MW]\nunderlineOmega^charge_yz Minimum charging capacity of technology y in zone z- only applicable for storage resources, y in mathcalO^asym [MW]\noverlineDelta_yz Existing installed capacity of technology y in zone z [MW]\noverlineDelta^energy_yz Existing installed energy capacity of technology y in zone z - only applicable for storage resources, y in mathcalO [MW]\noverlineDelta^charge_yz Existing installed charging capacity of technology y in zone z - only applicable for storage resources, y in mathcalO [MW]\noverlineOmega_yz^size Unit size of technology y in zone z [MW]\npi_yz^INVEST Investment cost (annual amortization of total construction cost) for power capacity of technology y in zone z [$/MW-yr]\npi_yz^INVESTenergy Investment cost (annual amortization of total construction cost) for energy capacity of technology y in zone z - only applicable for storage resources, y in mathcalO [$/MWh-yr]\npi_yz^INVESTcharge Investment cost (annual amortization of total construction cost) for charging power capacity of technology y in zone z - only applicable for storage resources, y in mathcalO [$/MW-yr]\npi_yz^FOM Fixed O&M cost of technology y in zone z [$/MW-yr]\npi_yz^FOMenergy Fixed O&M cost of energy component of technology y in zone z - only applicable for storage resources, y in mathcalO [$/MWh-yr]\npi_yz^FOMcharge Fixed O&M cost of charging power component of technology y in zone z - only applicable for storage resources, y in mathcalO [$/MW-yr]\npi_yz^VOM Variable O&M cost of technology\ny in zone z [$/MWh] \npi_yz^VOMcharge Variable O&M cost of charging technology y in zone z - only applicable for storage and demand flexibility resources, y in mathcalO cup mathcalDF [$/MWh]\npi_yz^FUEL Fuel cost of technology y in zone z [$/MWh]\npi_yz^START Startup cost of technology y in zone z [$/startup]\nupsilon^reg_yz Maximum fraction of capacity that a resource y in zone z can contribute to frequency regulation reserve requirements\nupsilon^rsv_yz Maximum fraction of capacity that a resource y in zone z can contribute to upward operating (spinning) reserve requirements\npi^Unmet_rsv Cost of unmet spinning reserves in [$/MW]\nepsilon^load_reg Frequency regulation reserve requirement as a fraction of forecasted demand in each time step\nepsilon^vre_reg Frequency regulation reserve requirement as a fraction of variable renewable energy generation in each time step\nepsilon^load_rsv Operating (spinning) reserve requirement as a fraction of forecasted demand in each time step\nepsilon^vre_rsv Operating (spinning) reserve requirement as a fraction of forecasted variable renewable energy generation in each time step\nepsilon_yz^CO_2 CO_2 emissions per unit energy produced by technology y in zone z [metric tons/MWh]\nepsilon_yzp^MinTech Equals to 1 if a generator of technology y in zone z is eligible for minimum capacity carveout policy p in mathcalP^MinTech, otherwise 0\nREQ_p^MinTech The minimum capacity requirement of minimum capacity carveout policy p in mathcalP^MinTech [MW]\nepsilon_yzp^CRM Capacity derating factor of technology y in zone z for capacity reserve margin policy p in mathcalP^CRM [fraction]\nRM_zp^CRM Reserve margin of zone z of capacity reserve margin policy p in mathcalP^CRM [fraction]\nepsilon_zpmass^CO_2 Emission budget of zone z under the emission cap p in mathcalP^CO_2_mass [ million of metric tonnes]\nepsilon_zpload^CO_2 Maximum carbon intensity of the load of zone z under the emission cap p in mathcalP^CO_2_load [metric tonnes/MWh]\nepsilon_zpgen^CO_2 Maximum emission rate of the generation of zone z under the emission cap p in mathcalP^CO_2_gen [metric tonnes/MWh]\nrho_yz^min Minimum stable power output per unit of installed capacity for technology y in zone z [%]\nrho_yzt^max Maximum available generation per unit of installed capacity during time step t for technology y in zone z [%]\nVREIndex_yz Resource bin index for VRE technology y in zone z. VREIndex_yz=1 for the first bin, and VREIndex_yz=0 for remaining bins. Only defined for yin mathcalVRE\nvarphi^map_lz Topology of the network, for line l: varphi^map_lz=1 for zone z of origin, - 1 for zone z of destination, 0 otherwise.\neta_yz^loss Self discharge rate per time step per unit of installed capacity for storage technology y in zone z [%]\neta_yz^charge Single-trip efficiency of storage charging/demand deferral for technology y in zone z [%]\neta_yz^discharge Single-trip efficiency of storage (and hydro reservoir) discharging/demand satisfaction for technology y in zone z [%]\nmu_yz^stor ratio of energy capacity to discharge power capacity for storage technology (and hydro reservoir) y in zone z [MW/MWh]\nmu_yz^mathcalDF Maximum percentage of hourly demand that can be shifted by technology y in zone z [%]\nkappa_yz^up Maximum ramp-up rate per time step as percentage of installed capacity of technology y in zone z [%/hr]\nkappa_yz^down Maximum ramp-down rate per time step as percentage of installed capacity of technology y in zone z [%/hr]\ntau_yz^up Minimum uptime for thermal generator type y in zone z before new shutdown [hours].\ntau_yz^down Minimum downtime or thermal generator type y in zone z before new restart [hours].\ntau_yz^advance maximum  time  by which flexible demand resource can  be  advanced [hours]\ntau_yz^delay maximum  time  by which flexible demand resource can  be  delayed [hours]\neta_yz^dflex energy losses associated with shifting the flexible load [%]\nmu_pz^mathcalRPS share of total demand in each model zone z in mathcalRPS^p  that must be served by qualifying renewable energy resources y in mathcalG^RPS_p\nf(n) Mapping each modeled period n in mathcalN to corresponding representative period w in mathcalW","category":"page"},{"location":"model_notation.html#","page":"Notation","title":"Notation","text":"","category":"page"},{"location":"thermal_commit.html#Thermal-Commit-1","page":"Thermal Commit","title":"Thermal Commit","text":"","category":"section"},{"location":"thermal_commit.html#","page":"Thermal Commit","title":"Thermal Commit","text":"Modules = [GenX]\r\nPages = [\"thermal_commit.jl\"]","category":"page"},{"location":"thermal_commit.html#GenX.thermal_commit-Tuple{JuMP.Model,Dict,Int64}","page":"Thermal Commit","title":"GenX.thermal_commit","text":"thermal_commit(EP::Model, inputs::Dict, Reserves::Int)\n\nThis function defines the operating constraints for thermal power plants subject to unit commitment constraints on power plant start-ups and shut-down decision (y in UC).\n\nWe model capacity investment decisions and commitment and cycling (start-up, shut-down) of thermal generators using the integer clustering technique developed in \\cite{Palmintier2011, Palmintier2014}. In a typical binary unit commitment formulation, each unit is either on or off. With the clustered unit commitment formulation, one or more cluster(s) of similar generators are clustered by type and zone (typically using heat rate and fixed O\\&M cost to create clusters), and the integer commitment state variable for each cluster varies from zero to the number of units in the cluster, fracDelta^total_yzOmega^size_yz. As discussed in \\cite{Palmintier2014}, this approach replaces the large set of binary commitment decisions and associated constraints, which scale directly with the number of individual units, with a smaller set of integer commitment states and  constraints, one for each cluster y. The dimensionality of the problem thus scales with the number of units of a given type in each zone, rather than by the number of discrete units, significantly improving computational efficiency. However, this method entails the simplifying assumption that all clustered units have identical parameters (e.g., capacity size, ramp rates, heat rate) and that all committed units in a given time step t are operating at the same power output per unit.\n\nPower balance expression\n\nThis function adds the sum of power generation from thermal units subject to unit commitment (Theta_y in UCt in Tz in Z) to the power balance expression.\n\nStartup and shutdown events (thermal plant cycling)\n\n***Capacitated limits on unit commitment decision variables***\n\nThermal resources subject to unit commitment (y in mathcalUC) adhere to the following constraints on commitment states, startup events, and shutdown events, which limit each decision to be no greater than the maximum number of discrete units installed (as per the following three constraints):\n\nbeginaligned\nnu_yzt leq fracDelta^texttotal_yzOmega^size_yz\n\thspace15cm forall y in mathcalUC forall z in mathcalZ forall t in mathcalT\nendaligned\n\nbeginaligned\nchi_yzt leq fracDelta^texttotal_yzOmega^size_yz\n\thspace15cm forall y in mathcalUC forall z in mathcalZ forall t in mathcalT\nendaligned\n\nbeginaligned\nzeta_yzt leq fracDelta^texttotal_yzOmega^size_yz\n\thspace15cm forall y in mathcalUC forall z in mathcalZ forall t in mathcalT\nendaligned\n\n(See Constraints 1-3 in the code)\n\nwhere decision nu_yzt designates the commitment state of generator cluster y in zone z at time t, decision chi_yzt represents number of startup decisions, decision zeta_yzt represents number of shutdown decisions, Delta^texttotal_yz is the total installed capacity, and parameter Omega^size_yz is the unit size.\n\n***Commitment state constraint linking start-up and shut-down decisions***\n\nAdditionally, the following constarint maintains the commitment state variable across time, nu_yzt, as the sum of the commitment state in the prior, nu_yzt-1, period plus the number of units started in the current period, chi_yzt, less the number of units shut down in the current period, zeta_yzt:\n\nbeginaligned\nnu_yzt =nu_yzt-1 + chi_yzt - zeta_yzt\n\thspace15cm forall y in mathcalUC forall z in mathcalZ forall t in mathcalT^interior \r\nnu_yzt =nu_yzt +tau^period-1 + chi_yzt - zeta_yzt\n\thspace15cm forall y in mathcalUC forall z in mathcalZ forall t in mathcalT^start\nendaligned\n\n(See Constraint 4 in the code)\n\nLike other time-coupling constraints, this constraint wraps around to link the commitment state in the first time step of the year (or each representative period), t in mathcalT^start, to the last time step of the year (or each representative period), t+tau^period-1.\n\nRamping constraints\n\nThermal resources subject to unit commitment (y in UC) adhere to the following ramping constraints on hourly changes in power output:\n\nbeginaligned\n\tTheta_yzt-1 - Theta_yzt leq  kappa^down_yz cdot Omega^size_yz cdot (nu_yzt - chi_yzt)  6pt\n\tqquad  -  rho^min_yz cdot Omega^size_yz cdot chi_yzt  hspace05cm forall y in mathcalUC forall z in mathcalZ forall t in mathcalT  6pt\n\tqquad  +  textmin( rho^max_yzt textmax( rho^min_yz kappa^down_yz ) ) cdot Omega^size_yz cdot zeta_yzt \nendaligned\n\nbeginaligned\n\tTheta_yzt - Theta_yzt-1 leq  kappa^up_yz cdot Omega^size_yz cdot (nu_yzt - chi_yzt)  6pt\n\tqquad  +  textmin( rho^max_yzt textmax( rho^min_yz kappa^up_yz ) ) cdot Omega^size_yz cdot chi_yzt  hspace05cm forall y in mathcalUC forall z in mathcalZ forall t in mathcalT 6pt\n\tqquad  -  rho^min_yz cdot Omega^size_yz cdot zeta_yzt \nendaligned\n\n(See Constraints 5-6 in the code)\n\nwhere decision Theta_yzt is the energy injected into the grid by technology y in zone z at time t, parameter kappa_yzt^updown is the maximum ramp-up or ramp-down rate as a percentage of installed capacity, parameter rho_yz^min is the minimum stable power output per unit of installed capacity, and parameter rho_yzt^max is the maximum available generation per unit of installed capacity. These constraints account for the ramping limits for committed (online) units as well as faster changes in power enabled by units starting or shutting down in the current time step.\n\nMinimum and maximum power output\n\nIf not modeling regulation and spinning reserves, thermal resources subject to unit commitment adhere to the following constraints that ensure power output does not exceed minimum and maximum feasible levels:\n\nbeginaligned\n\tTheta_yzt geq rho^min_yz times Omega^size_yz times nu_yzt\n\thspace15cm forall y in mathcalUC forall z in mathcalZ forall t in mathcalT\nendaligned\n\nbeginaligned\n\tTheta_yzt geq rho^max_yz times Omega^size_yz times nu_yzt\n\thspace15cm forall y in mathcalUC forall z in mathcalZ forall t in mathcalT\nendaligned\n\n(See Constraints 7-8 the code)\n\nIf modeling reserves and regulation, these constraints are replaced by those established in this thermalcommitreserves().\n\nMinimum and maximum up and down time\n\nThermal resources subject to unit commitment adhere to the following constraints on the minimum time steps after start-up before a unit can shutdown again (minimum up time) and the minimum time steps after shut-down before a unit can start-up again (minimum down time):\n\nbeginaligned\n\tnu_yzt geq displaystyle sum_hatt = t-tau^up_yz^t chi_yzhatt\n\thspace15cm forall y in mathcalUC forall z in mathcalZ forall t in mathcalT\nendaligned\n\nbeginaligned\n\tfracoverlineDelta_yz + Omega_yz - Delta_yzOmega^size_yz -  nu_yzt geq displaystyle sum_hatt = t-tau^down_yz^t zeta_yzhatt\n\thspace15cm forall y in mathcalUC forall z in mathcalZ forall t in mathcalT\nendaligned\n\n(See Constraints 9-10 in the code)\n\nwhere tau_yz^updown is the minimum up or down time for units in generating cluster y in zone z.\n\nLike with the ramping constraints, the minimum up and down constraint time also wrap around from the start of each time period to the end of each period.\n\n\n\n\n\n","category":"method"},{"location":"thermal_commit.html#GenX.thermal_commit_reserves-Tuple{JuMP.Model,Dict}","page":"Thermal Commit","title":"GenX.thermal_commit_reserves","text":"thermal_commit_reserves(EP::Model, inputs::Dict)\n\nThis function is called by the thermal_commit() function when regulation and reserves constraints are active and defines reserve related constraints for thermal power plants subject to unit commitment constraints on power plant start-ups and shut-down decisions.\n\nMaximum contributions to frequency regulation and reserves\n\nWhen modeling frequency regulation and reserves contributions, thermal units subject to unit commitment adhere to the following constraints which limit the maximum contribution to regulation and reserves in each time step to a specified maximum fraction (upsilon^rsv_yz) of the commitment capacity in that time step ((Omega^size_yz cdot nu_yzt)):\n\nbeginaligned\n\tf_yzt leq upsilon^reg_yz times rho^max_yzt (Omega^size_yz times nu_yzt) hspace15cm forall y in mathcalUC forall z in mathcalZ forall t in mathcalT\nendaligned\n\nbeginaligned\n\tr_yzt leq upsilon^rsv_yz times rho^max_yzt (Omega^size_yz times nu_yzt) hspace15cm forall y in mathcalUC forall z in mathcalZ forall t in mathcalT\nendaligned\n\nwhere f_yzt is the frequency regulation contribution limited by the maximum regulation contribution upsilon^reg_yz, and r_yzt is the reserves contribution limited by the maximum reserves contribution upsilon^rsv_yz. Limits on reserve contributions reflect the maximum ramp rate for the thermal resource in whatever time interval defines the requisite response time for the regulation or reserve products (e.g., 5 mins or 15 mins or 30 mins). These response times differ by system operator and reserve product, and so the user should define these parameters in a self-consistent way for whatever system context they are modeling.\n\nMinimum and maximum power output\n\nWhen modeling frequency regulation and spinning reserves contributions, thermal resources subject to unit commitment adhere to the following constraints that ensure the sum of power output and reserve and/or regulation contributions do not exceed minimum and maximum feasible power output:\n\nbeginaligned\n\tTheta_yzt - f_yzt geq rho^min_yz times Omega^size_yz times nu_yzt\n\thspace15cm forall y in mathcalUC forall z in mathcalZ forall t in mathcalT\nendaligned\n\nbeginaligned\n\tTheta_yzt + f_yzt + r_yzt leq rho^max_yzt times Omega^size_yz times nu_yzt\n\thspace15cm forall y in mathcalUC forall z in mathcalZ forall t in mathcalT\nendaligned\n\nNote there are multiple versions of these constraints in the code in order to avoid creation of unecessary constraints and decision variables for thermal units unable to provide regulation and/or reserves contributions due to input parameters (e.g. RegMax and/or RSVMax = 0)\n\n\n\n\n\n","category":"method"},{"location":"documentation.html#Documentation-1","page":"Documentation","title":"Documentation","text":"","category":"section"},{"location":"documentation.html#","page":"Documentation","title":"Documentation","text":"Modules = [GenX]\r\nPages = [\"documentation.jl\"]","category":"page"},{"location":"non_served_energy.html#Non-served-Energy-1","page":"Non Served Energy","title":"Non-served Energy","text":"","category":"section"},{"location":"non_served_energy.html#","page":"Non Served Energy","title":"Non Served Energy","text":"Modules = [GenX]\r\nPages = [\"non_served_energy.jl\"]","category":"page"},{"location":"non_served_energy.html#GenX.non_served_energy-Tuple{JuMP.Model,Dict}","page":"Non Served Energy","title":"GenX.non_served_energy","text":"non_served_energy(EP::Model, inputs::Dict)\n\nThis function defines the non-served energy/curtailed demand decision variable Lambda_stz forall s in mathcalS forall t in mathcalT z in mathcalZ, representing the total amount of demand curtailed in demand segment s at time period t in zone z. The first segment of non-served energy, s=1, is used to denote the cost of involuntary demand curtailment (e.g. emergency load shedding or rolling blackouts), specified as the value of n_1^slope. Additional segments, s geq 2 can be used to specify a segment-wise approximation of a price elastic demand curve, or segments of price-responsive curtailable loads (aka demand response). Each segment denotes a price/cost at which the segment of demand is willing to curtail consumption, n_s^slope, representing the marginal willingness to pay for electricity of this segment of demand (or opportunity cost incurred when demand is not served) and a maximum quantity of demand in this segment, n_s^size, specified as a share of demand in each zone in each time step, D_tz Note that the current implementation assumes demand segments are an equal share of hourly load in all zones.\n\nThis function defines contributions to the objective function from the cost of non-served energy/curtailed demand from all demand curtailment segments s in mathcalS over all time periods t in mathcalT and all zones z in mathcalZ:\n\nbeginaligned\n\tObj_NSE =\n\tsum_s in mathcalS  sum_t in mathcalT sum_z in mathcalZomega_t times n_s^slope times Lambda_stz\nendaligned\n\nContributions to the power balance expression from non-served energy/curtailed demand from each demand segment s in mathcalS are also defined as:\n\nbeginaligned\n\tPowerBal_NSE =\n\tsum_s in mathcalS  Lambda_stz\n\t\thspace4 cm  forall s in mathcalS t in mathcalT\nendaligned\n\nBounds on curtailable demand\n\nDemand curtailed in each segment of curtailable demands s in mathcalS cannot exceed maximum allowable share of demand:\n\nbeginaligned\n\tLambda_stz leq (n_s^size times D_tz)\n\thspace4 cm  forall s in mathcalS t in mathcalT zin mathcalZ\nendaligned\n\nAdditionally, total demand curtailed in each time step cannot exceed total demand:\n\nbeginaligned\n\tsum_s in mathcalS  Lambda_stz leq D_tz\n\thspace4 cm  forall t in mathcalT zin mathcalZ\nendaligned\n\n\n\n\n\n","category":"method"},{"location":"minimum_capacity_requirement.html#Minimum-Capacity-Requirement-1","page":"Minimum Capacity Requirement","title":"Minimum Capacity Requirement","text":"","category":"section"},{"location":"minimum_capacity_requirement.html#","page":"Minimum Capacity Requirement","title":"Minimum Capacity Requirement","text":"Modules = [GenX]\r\nPages = [\"minimum_capacity_requirement.jl\"]","category":"page"},{"location":"minimum_capacity_requirement.html#GenX.minimum_capacity_requirement-Tuple{JuMP.Model,Dict}","page":"Minimum Capacity Requirement","title":"GenX.minimum_capacity_requirement","text":"minimum_capacity_requirement(EP::Model, inputs::Dict)\n\nThe minimum capacity requirement constraint allows for modeling minimum deployment of a certain technology or set of eligible technologies across the eligible model zones and can be used to mimic policies supporting specific technology build out (i.e. capacity deployment targets/mandates for storage, offshore wind, solar etc.). The default unit of the constraint is in MW. For each requirement p in mathcalP^MinCapReq, we model the policy with the following constraint. math \\begin{aligned} \\sum_{y \\in \\mathcal{G} } \\sum_{z \\in \\mathcal{Z} } \\left( \\epsilon_{y,z,p}^{MinCapReq} \\times \\Delta^{\\text{total}}_{y,z} \\right) \\geq REQ_{p}^{MinCapReq} \\hspace{1 cm}  \\forall p \\in \\mathcal{P}^{MinCapReq} \\end{aligned} Note that epsilon_yzp^MinCapReq is the eligiblity of a generator of technology y in zone z of requirement p and will be equal to 1 for eligible generators and will be zero for ineligible resources. The dual value of each minimum capacity constraint can be interpreted as the required payment (e.g. subsidy) per MW per year required to ensure adequate revenue for the qualifying resources.\n\n\n\n\n\n","category":"method"},{"location":"investment_charge.html#Investment-Charge-1","page":"Investment Charge","title":"Investment Charge","text":"","category":"section"},{"location":"investment_charge.html#","page":"Investment Charge","title":"Investment Charge","text":"Modules = [GenX]\r\nPages = [\"investment_charge.jl\"]","category":"page"},{"location":"investment_charge.html#GenX.investment_charge-Tuple{JuMP.Model,Dict}","page":"Investment Charge","title":"GenX.investment_charge","text":"investment_charge(EP::Model, inputs::Dict)\n\nThis function defines the expressions and constraints keeping track of total available storage charge capacity across all resources as well as constraints on capacity retirements. The function also adds investment and fixed O\\&M related costs related to charge capacity to the objective function.\n\nThe total capacity of each resource is defined as the sum of the existing capacity plus the newly invested capacity minus any retired capacity (Eq. \\ref{eq:totalchargecap}).\n\nbeginaligned\n Delta^totalcharge_yz =(overlineDelta^charge_yz+Omega^charge_yz-Delta^charge_yz) forall y in mathcalO^asym z in mathcalZ\nendaligned\n\nOne cannot retire more capacity than existing capacity.\n\nbeginaligned\nDelta^charge_yz leq overlineDelta^charge_yz\n\thspace4 cm  forall y in mathcalO^asym z in mathcalZ\nendaligned\n\nFor resources where overlineOmega_yz^charge and underlineOmega_yz^charge is defined, then we impose constraints on minimum (Eq. \\ref{eq:mincap}) and maximum power capacity (Eq. \\ref{eq:maxcap}).\n\nbeginaligned\n Delta^totalcharge_yz leq overlineOmega^charge_yz\n\thspace4 cm  forall y in mathcalO^asym z in mathcalZ \r\n Delta^totalcharge_yz  geq underlineOmega^charge_yz\n\thspace4 cm  forall y in mathcalO^asym z in mathcalZ\nendaligned\n\nIn addition, this function adds investment and fixed O\\&M related costs related to charge capacity to the objective function:\n\nbeginaligned\n \tsum_y in mathcalO^asym  sum_z in mathcalZ\n\tleft( (pi^INVESTcharge_yz times    Omega^charge_yz)\n\t+ (pi^FOMcharge_yz times  Delta^totalcharge_yz)right)\nendaligned\n\n\n\n\n\n","category":"method"},{"location":"investment_energy.html#Investment-Energy-1","page":"Investment Energy","title":"Investment Energy","text":"","category":"section"},{"location":"investment_energy.html#","page":"Investment Energy","title":"Investment Energy","text":"Modules = [GenX]\r\nPages = [\"investment_energy.jl\"]","category":"page"},{"location":"investment_energy.html#GenX.investment_energy-Tuple{JuMP.Model,Dict}","page":"Investment Energy","title":"GenX.investment_energy","text":"investment_energy(EP::Model, inputs::Dict)\n\nThis function defines the expressions and constraints keeping track of total available storage charge capacity across all resources as well as constraints on capacity retirements. The function also adds investment and fixed O\\&M related costs related to charge capacity to the objective function.\n\nThe total capacity of each resource is defined as the sum of the existing capacity plus the newly invested capacity minus any retired capacity (Eq. \\ref{eq:totalchargecap}).\n\nbeginaligned\n Delta^totalenergy_yz =(overlineDelta^energy_yz+Omega^energy_yz-Delta^energy_yz) forall y in mathcalO z in mathcalZ\nendaligned\n\nOne cannot retire more capacity than existing capacity.\n\nbeginaligned\nDelta^energy_yz leq overlineDelta^energy_yz\n\t\thspace4 cm  forall y in mathcalO z in mathcalZ\nendaligned\n\nFor resources where overlineOmega_yz^energy and underlineOmega_yz^energy is defined, then we impose constraints on minimum (Eq. \\ref{eq:mincap}) and maximum power capacity (Eq. \\ref{eq:maxcap}).\n\nbeginaligned\n Delta^totalenergy_yz leq overlineOmega^energy_yz\n\thspace4 cm  forall y in mathcalO z in mathcalZ \r\n Delta^totalenergy_yz  geq underlineOmega^energy_yz\n\thspace4 cm  forall y in mathcalO z in mathcalZ\nendaligned\n\nIn addition, this function adds investment and fixed O\\&M related costs related to charge capacity to the objective function:\n\nbeginaligned\n \tsum_y in mathcalO  sum_z in mathcalZ\n\tleft( (pi^INVESTenergy_yz times    Omega^energy_yz)\n\t+ (pi^FOMenergy_yz times  Delta^totalenergy_yz)right)\nendaligned\n\n\n\n\n\n","category":"method"},{"location":"long_duration_storage.html#Long-Duration-Storage-1","page":"Long Duration Storage","title":"Long Duration Storage","text":"","category":"section"},{"location":"long_duration_storage.html#","page":"Long Duration Storage","title":"Long Duration Storage","text":"Modules = [GenX]\r\nPages = [\"long_duration_storage.jl\"]","category":"page"},{"location":"long_duration_storage.html#GenX.long_duration_storage-Tuple{JuMP.Model,Dict}","page":"Long Duration Storage","title":"GenX.long_duration_storage","text":"long_duration_storage(EP::Model, inputs::Dict)\n\nThis function creates variables and constraints enabling modeling of long duration storage resources when modeling representative time periods.\n\nStorage inventory balance at beginning of each representative period\n\nThe constraints in this section are used to approximate the behavior of long-duration energy storage technologies when approximating annual grid operations by modeling operations over representative periods. Previously, the state of charge balance for storage (as defined in storage_all()) assumed that state of charge at the beginning and end of each representative period has to be the same. In other words, the amount of energy built up or consumed by storage technology o in zone z over the representative period m, Delta Q_ozm = 0. This assumption implicitly excludes the possibility of transferring energy from one representative period to the other which could be cost-optimal when the capital cost of energy storage capacity is relatively small. To model long-duration energy storage using representative periods, we replace the state of charge equation, such that the first term on the right hand side accounts for change in storage inventory associated with representative period m (Delta Q_ozm), which could be positive (net accumulation) or negative (net reduction).\n\nbeginaligned\n Gamma_oz(m-1)times tau^period+1  =left(1-eta_oz^lossright)times left(Gamma_ozmtimes tau^period -Delta Q_ozmright) -  \r\n frac1eta_oz^dischargeTheta_oz(m-1)times tau^period+1 + eta_oz^chargePi_oz(m-1)times tau^period+1 quad forall o in mathcalO^LDES z in mathcalZ m in mathcalM\nendaligned\n\nBy definition mathcalT^start=left(m-1right) times tau^period+1  m in mathcalM, which implies that this constraint is defined for all values of t in T^start.\n\nStorage inventory change input periods\n\nWe need additional variables and constraints to approximate energy exchange between representative periods, while accounting for their chronological occurence in the original input time series data and the possibility that two representative periods may not be adjacent to each other (Fig. \\ref{fig:LDESmodel}). To implement this, we introduce a new variable Q_oz n that models inventory of storage technology o in O in zone z in each input period n in mathcalN. Additionally we define a function mapping, f n rightarrow m, that uniquely maps each input period n to its corresponding representative period m. This mapping is available as an output of the process used to identify representative periods (E.g. k-means clustering \\cite{Mallapragada2018}).\n\n\\begin{figure}[h] \\caption{Modeling inter-period energy exchange via long-duration storage when using representative period temporal resolution to approximate annual grid operations} \\includegraphics[width=\\textwidth]{LDES_approach.png} \\end{figure}\n\nThe following two equations define the storage inventory at the beginning of each input period n+1 as the sum of storage inventory at begining of previous input period n plus change in storage inventory for that period. The latter is approximated by the change in storage inventory in the corresponding representative period, identified per the mapping f(n).  The second constraint relates the storage level of the last input period, N, with the storage level at the beginning of the first input period. Finally, if the input period is also a representative period, then a third constraint enforces that initial storage level estimated by the intra-period storage balance constraint should equal the initial storage level estimated from the inter-period storage balance constraints.\n\n%note that N refers to the last modeled period. Here,\n\nbeginaligned\n Q_ozn+1 = Q_ozn + Delta Q_ozf(n)\nquad forall  o in mathcalO^LDES z in mathcalZ n in mathcalNsetminusN\nendaligned\n\nbeginaligned\n Q_oz1 = Q_ozN + Delta Q_ozf(N)\nquad forall  o in mathcalO^LDES z in mathcalZ n = N\nendaligned\n\nbeginaligned\n Q_ozn =Gamma_ozf(n)times tau^period - Delta Q_ozm\nquad forall  o in mathcalO^LDES z in mathcalZ n in   mathcalN^rep\nendaligned\n\nFinally, the next constraint enforces that the initial storage level for each input period n must be less than the installed energy capacity limit. This constraint ensures that installed energy storage capacity is consistent with the state of charge during both the operational time periods t during each sample period m as well as at the start of each chronologically ordered input period n in the full annual time series.\n\nbeginaligned\n    Q_ozn leq Delta^total energy_oz\nquad forall n in mathcalN o in mathcalO^LDES\nendaligned\n\n\n\n\n\n","category":"method"},{"location":"storage_symmetric.html#Storage-Symmetric-1","page":"Storage Symmetric","title":"Storage Symmetric","text":"","category":"section"},{"location":"storage_symmetric.html#","page":"Storage Symmetric","title":"Storage Symmetric","text":"Modules = [GenX]\r\nPages = [\"storage_symmetric.jl\"]","category":"page"},{"location":"storage_symmetric.html#GenX.storage_symmetric-Tuple{JuMP.Model,Dict,Int64}","page":"Storage Symmetric","title":"GenX.storage_symmetric","text":"storage_symmetric(EP::Model, inputs::Dict, Reserves::Int)\n\nSets up variables and constraints specific to storage resources with symmetric charge and discharge capacities. See storage() in storage.jl for description of constraints.\n\n\n\n\n\n","category":"method"},{"location":"storage_symmetric.html#GenX.storage_symmetric_reserves-Tuple{JuMP.Model,Dict}","page":"Storage Symmetric","title":"GenX.storage_symmetric_reserves","text":"storage_symmetric_reserves(EP::Model, inputs::Dict)\n\nSets up variables and constraints specific to storage resources with symmetric charge and discharge capacities when reserves are modeled. See storage() in storage.jl for description of constraints.\n\n\n\n\n\n","category":"method"},{"location":"write_outputs.html#Functions-for-Writing-the-Different-Results/Outputs-to-Separate-Files-1","page":"GenX Outputs","title":"Functions for Writing the Different Results/Outputs to Separate Files","text":"","category":"section"},{"location":"write_outputs.html#","page":"GenX Outputs","title":"GenX Outputs","text":"Modules = [GenX]\r\nPages = [\"write_outputs.jl\"]","category":"page"},{"location":"write_outputs.html#GenX.write_outputs-Tuple{JuMP.Model,AbstractString,Dict,Dict}","page":"GenX Outputs","title":"GenX.write_outputs","text":"write_outputs(EP::Model, path::AbstractString, setup::Dict, inputs::Dict)\n\nFunction for the entry-point for writing the different output files. From here, onward several other functions are called, each for writing specific output files, like costs, capacities, etc.\n\n\n\n\n\n","category":"method"},{"location":"write_outputs.html#Write-Status-1","page":"GenX Outputs","title":"Write Status","text":"","category":"section"},{"location":"write_outputs.html#","page":"GenX Outputs","title":"GenX Outputs","text":"Modules = [GenX]\r\nPages = [\"write_status.jl\"]","category":"page"},{"location":"write_outputs.html#GenX.write_status-Tuple{AbstractString,AbstractString,Dict,Dict,JuMP.Model}","page":"GenX Outputs","title":"GenX.write_status","text":"write_status(path::AbstractString, sep::AbstractString, inputs::Dict, EP::Model)\n\nFunction for writing the final solve status of the optimization problem solved\n\n\n\n\n\n","category":"method"},{"location":"write_outputs.html#Write-Costs-1","page":"GenX Outputs","title":"Write Costs","text":"","category":"section"},{"location":"write_outputs.html#","page":"GenX Outputs","title":"GenX Outputs","text":"Modules = [GenX]\r\nPages = [\"write_costs.jl\"]","category":"page"},{"location":"write_outputs.html#GenX.write_costs-Tuple{AbstractString,AbstractString,Dict,Dict,JuMP.Model}","page":"GenX Outputs","title":"GenX.write_costs","text":"write_costs(path::AbstractString, sep::AbstractString, inputs::Dict, setup::Dict, EP::Model)\n\nFunction for writing the costs pertaining to the objective function (fixed, variable O & M etc.)\n\n\n\n\n\n","category":"method"},{"location":"write_outputs.html#Write-Capacities-1","page":"GenX Outputs","title":"Write Capacities","text":"","category":"section"},{"location":"write_outputs.html#","page":"GenX Outputs","title":"GenX Outputs","text":"Modules = [GenX]\r\nPages = [\"write_capacity.jl\"]","category":"page"},{"location":"write_outputs.html#GenX.write_capacity-Tuple{AbstractString,AbstractString,Dict,Dict,JuMP.Model}","page":"GenX Outputs","title":"GenX.write_capacity","text":"write_capacity(path::AbstractString, sep::AbstractString, inputs::Dict, setup::Dict, EP::Model))\n\nFunction for writing the diferent capacities for the different generation technologies (starting capacities or, existing capacities, retired capacities, and new-built capacities)\n\n\n\n\n\n","category":"method"},{"location":"write_outputs.html#Write-Charge-Values-1","page":"GenX Outputs","title":"Write Charge Values","text":"","category":"section"},{"location":"write_outputs.html#","page":"GenX Outputs","title":"GenX Outputs","text":"Modules = [GenX]\r\nPages = [\"write_charge.jl\"]","category":"page"},{"location":"write_outputs.html#GenX.write_charge-Tuple{AbstractString,AbstractString,Dict,Dict,JuMP.Model}","page":"GenX Outputs","title":"GenX.write_charge","text":"write_charge(path::AbstractString, sep::AbstractString, inputs::Dict, setup::Dict, EP::Model)\n\nFunction for writing the charging energy values of the different storage technologies.\n\n\n\n\n\n","category":"method"},{"location":"write_outputs.html#Write-Storage-1","page":"GenX Outputs","title":"Write Storage","text":"","category":"section"},{"location":"write_outputs.html#","page":"GenX Outputs","title":"GenX Outputs","text":"Modules = [GenX]\r\nPages = [\"write_storage.jl\"]","category":"page"},{"location":"write_outputs.html#Write-Power-1","page":"GenX Outputs","title":"Write Power","text":"","category":"section"},{"location":"write_outputs.html#","page":"GenX Outputs","title":"GenX Outputs","text":"Modules = [GenX]\r\nPages = [\"write_power.jl\"]","category":"page"},{"location":"write_outputs.html#GenX.write_power-Tuple{AbstractString,AbstractString,Dict,Dict,JuMP.Model}","page":"GenX Outputs","title":"GenX.write_power","text":"write_power(path::AbstractString, sep::AbstractString, inputs::Dict, setup::Dict, EP::Model)\n\nFunction for writing the different values of power generated by the different technologies in operation\n\n\n\n\n\n","category":"method"},{"location":"write_outputs.html#Write-Curtailment-1","page":"GenX Outputs","title":"Write Curtailment","text":"","category":"section"},{"location":"write_outputs.html#","page":"GenX Outputs","title":"GenX Outputs","text":"Modules = [GenX]\r\nPages = [\"write_curtailment.jl\"]","category":"page"},{"location":"write_outputs.html#GenX.write_curtailment-Tuple{AbstractString,AbstractString,Dict,Dict,JuMP.Model}","page":"GenX Outputs","title":"GenX.write_curtailment","text":"write_curtailment(path::AbstractString, sep::AbstractString, inputs::Dict, setup::Dict, EP::Model)\n\nFunction for writing the curtailment values of the different variable renewable resources.\n\n\n\n\n\n","category":"method"},{"location":"write_outputs.html#","page":"GenX Outputs","title":"GenX Outputs","text":"","category":"page"},{"location":"thermal_no_commit.html#Thermal-No-Commit-1","page":"Thermal No Commit","title":"Thermal No Commit","text":"","category":"section"},{"location":"thermal_no_commit.html#","page":"Thermal No Commit","title":"Thermal No Commit","text":"Modules = [GenX]\r\nPages = [\"thermal_no_commit.jl\"]","category":"page"},{"location":"thermal_no_commit.html#GenX.thermal_no_commit-Tuple{JuMP.Model,Dict,Int64}","page":"Thermal No Commit","title":"GenX.thermal_no_commit","text":"thermal_no_commit(EP::Model, inputs::Dict, Reserves::Int)\n\nThis function defines the operating constraints for thermal power plants NOT subject to unit commitment constraints on power plant start-ups and shut-down decisions (y in H setminus UC).\n\nRamping limits\n\nThermal resources not subject to unit commitment (y in H setminus UC) adhere instead to the following ramping limits on hourly changes in power output:\n\nbeginaligned\n\tTheta_yzt-1 - Theta_yzt leq kappa_yz^down Delta^texttotal_yz hspace1cm forall y in mathcalH setminus UC forall z in mathcalZ forall t in mathcalT\nendaligned\n\nbeginaligned\n\tTheta_yzt - Theta_yzt-1 leq kappa_yz^up Delta^texttotal_yz hspace1cm forall y in mathcalH setminus UC forall z in mathcalZ forall t in mathcalT\nendaligned\n\n(See Constraints 1-2 in the code)\n\nThis set of time-coupling constraints wrap around to ensure the power output in the first time step of each year (or each representative period), t in mathcalT^start, is within the eligible ramp of the power output in the final time step of the year (or each representative period), t+tau^period-1.\n\nMinimum and maximum power output\n\nWhen not modeling regulation and reserves, thermal units not subject to unit commitment decisions are bound by the following limits on maximum and minimum power output:\n\nbeginaligned\n\tTheta_yzt geq rho^min_yz times Delta^total_yz\n\thspace1cm forall y in mathcalH setminus UC forall z in mathcalZ forall t in mathcalT\nendaligned\n\nbeginaligned\n\tTheta_yzt leq rho^max_yzt times Delta^total_yz\n\thspace1cm forall y in mathcalH setminus UC forall z in mathcalZ forall t in mathcalT\nendaligned\n\n(See Constraints 3-4 in the code)\n\n\n\n\n\n","category":"method"},{"location":"thermal_no_commit.html#GenX.thermal_no_commit_reserves-Tuple{JuMP.Model,Dict}","page":"Thermal No Commit","title":"GenX.thermal_no_commit_reserves","text":"thermal_no_commit_reservesEP::Model, inputs::Dict)\n\nThis function is called by the thermalnocommit() function when regulation and reserves constraints are active and defines reserve related constraints for thermal power plants not subject to unit commitment constraints on power plant start-ups and shut-down decisions.\n\nMaximum contributions to frequency regulation and reserves\n\nThermal units not subject to unit commitment adhere instead to the following constraints on maximum reserve and regulation contributions:\n\nbeginaligned\n\tf_yzt leq upsilon^reg_yz times rho^max_yzt Delta^texttotal_yz hspace1cm forall y in mathcalH setminus UC forall z in mathcalZ forall t in mathcalT\nendaligned\n\nbeginaligned\n\tr_yzt leq upsilon^rsv_yz times rho^max_yzt Delta^texttotal_yz hspace1cm forall y in mathcalH setminus UC forall z in mathcalZ forall t in mathcalT\nendaligned\n\nwhere f_yzt is the frequency regulation contribution limited by the maximum regulation contribution upsilon^reg_yz, and r_yzt is the reserves contribution limited by the maximum reserves contribution upsilon^rsv_yz. Limits on reserve contributions reflect the maximum ramp rate for the thermal resource in whatever time interval defines the requisite response time for the regulation or reserve products (e.g., 5 mins or 15 mins or 30 mins). These response times differ by system operator and reserve product, and so the user should define these parameters in a self-consistent way for whatever system context they are modeling.\n\nMinimum and maximum power output\n\nWhen modeling regulation and spinning reserves, thermal units not subject to unit commitment are bound by the following limits on maximum and minimum power output:\n\nbeginaligned\n\tTheta_yzt - f_yzt geq rho^min_yz times Delta^texttotal_yz\n\thspace1cm forall y in mathcalH setminus UC forall z in mathcalZ forall t in mathcalT\nendaligned\n\nbeginaligned\n\tTheta_yzt + f_yzt + r_yzt leq rho^max_yzt times Delta^texttotal_yz\n\thspace1cm forall y in mathcalH setminus UC forall z in mathcalZ forall t in mathcalT\nendaligned\n\nNote there are multiple versions of these constraints in the code in order to avoid creation of unecessary constraints and decision variables for thermal units unable to provide regulation and/or reserves contributions due to input parameters (e.g. Reg_Max and/or RSV_Max = 0)\n\n\n\n\n\n","category":"method"},{"location":"index.html#GenX-Documentation-1","page":"Welcome Page","title":"GenX Documentation","text":"","category":"section"},{"location":"index.html#","page":"Welcome Page","title":"Welcome Page","text":"CurrentModule = GenX","category":"page"},{"location":"index.html#Overview-1","page":"Welcome Page","title":"Overview","text":"","category":"section"},{"location":"index.html#","page":"Welcome Page","title":"Welcome Page","text":"GenX is a highly-configurable, open source electricity resource capacity expansion model that incorporates several state-of-the-art practices in electricity system planning to offer improved decision support for a changing electricity landscape.","category":"page"},{"location":"index.html#","page":"Welcome Page","title":"Welcome Page","text":"The model was originally developed by Jesse D. Jenkins and Nestor A. Sepulveda at the Massachusetts Institute of Technology and is now jointly maintained by a team of contributors at the MIT Energy Initiative (led by Dharik Mallapragada) and the Princeton University ZERO Lab (led by Jenkins). ","category":"page"},{"location":"index.html#","page":"Welcome Page","title":"Welcome Page","text":"GenX is a constrained linear or mixed integer linear optimization model that determines the portfolio of electricity generation, storage, transmission, and demand-side resource investments and operational decisions to meet electricity demand in one or more future planning years at lowest cost, while subject to a variety of power system operational constraints, resource availability limits, and other imposed environmental, market design, and policy constraints.","category":"page"},{"location":"index.html#","page":"Welcome Page","title":"Welcome Page","text":"GenX features a modular and transparent code structure developed in Julia + JuMP. The model is designed to be highly flexible and configurable for use in a variety of applications from academic research and technology evaluation to public policy and regulatory analysis and resource planning. Depending on the planning problem or question to be studied, GenX can be configured with varying levels of model resolution and scope, with regards to: (1) temporal resolution of time series data such as electricity demand and renewable energy availability; (2) power system operational detail and unit commitment constraints; and (3) geospatial resolution and transmission network representation. The model is also capable of representing a full range of conventional and novel electricity resources, including thermal generators, variable renewable resources (wind and solar), run-of-river, reservoir and pumped-storage hydroelectric generators, energy storage devices, demand-side flexibility, demand response, and several advanced technologies such as long-duration energy storage.","category":"page"},{"location":"index.html#Requirements-1","page":"Welcome Page","title":"Requirements","text":"","category":"section"},{"location":"index.html#","page":"Welcome Page","title":"Welcome Page","text":"GenX.jl runs on Julia v1.3.0 and JuMP v0.21.3, and is currently setup to use one of the following solvers: A) Gurobi, and B) CPLEX. Note that using Gurobi and CPLEX requires a valid license on the host machine. Compatibility with open source solvers Clp and GLPK will be added shortly. The file juliaenv.jl in the parent directory lists all of the packages and their versions needed to run GenX. You can see all of the packages installed in your Julia environment and their version numbers by running pkg> status on the package manager command line in the Jula REPL.","category":"page"},{"location":"index.html#","page":"Welcome Page","title":"Welcome Page","text":"You can see all of the packages installed in your Julia environment and their version numbers by running pkg> status on the package manager command line.","category":"page"},{"location":"index.html#Running-an-Instance-of-GenX-1","page":"Welcome Page","title":"Running an Instance of GenX","text":"","category":"section"},{"location":"index.html#","page":"Welcome Page","title":"Welcome Page","text":"Download or clone the GenX repository on your machine in a directory named 'GenX'. Create this new directory in a location where you wish to store the GenXJulEnv environment.","category":"page"},{"location":"index.html#","page":"Welcome Page","title":"Welcome Page","text":"The Run.jl file in each of the example sub-folders within Example_Systems/ provides an example of how to use GenX.jl for capacity expansion modeling. The following are the main steps performed in the Run.jl script:","category":"page"},{"location":"index.html#","page":"Welcome Page","title":"Welcome Page","text":"Establish path to environment setup files and GenX source files.\nRead in model settings GenX_Settings.yml from the example directory.\nConfigure solver settings.\nLoad the model inputs from the example directory and perform time-domain clustering if required.\nGenerate a GenX model instance.\nSolve the model.\nWrite the output files to a specified directory.","category":"page"},{"location":"index.html#","page":"Welcome Page","title":"Welcome Page","text":"Here are step-by-step instructions for running Run.jl:","category":"page"},{"location":"index.html#","page":"Welcome Page","title":"Welcome Page","text":"Start an instance of the Julia kernel.\nMake your present working directory to be where the Run.jl is located. To do this, you can use the Julia command julia> cd(“/path/to/directory/containing/file), using the actual pathname of the directory containing Run.jl. Note that all your inputs files should be in this directory in addition to Run.jl. Details about the required input files can be found in the documentation linked above or in the examples provided in the folder Example_Systems/. You can check your present working directory by running the command julia> pwd().\nRun the script by executing the command julia> include(“Run.jl”).\nAfter the script runs to completion, results will be written to a folder called “Results”, also located in the same directory as Run.jl.","category":"page"},{"location":"index.html#","page":"Welcome Page","title":"Welcome Page","text":"Note that if you have not already installed the required Julia packages, you are using a version of JuMP other than v0.21.4, or you do not have a valid Gurobi license on your host machine, you will receive an error message and Run.jl will not run to completion.","category":"page"},{"location":"index.html#Running-Modeling-to-Generate-Alternatives-with-GenX-1","page":"Welcome Page","title":"Running Modeling to Generate Alternatives with GenX","text":"","category":"section"},{"location":"index.html#","page":"Welcome Page","title":"Welcome Page","text":"GenX includes a modeling to generate alternatives (MGA) package that can be used to automatically enumerate a diverse set of near cost-optimal solutions to electricity system planning problems. To use the MGA algorithm, user will need to perform the following tasks:","category":"page"},{"location":"index.html#","page":"Welcome Page","title":"Welcome Page","text":"Add a Resource_Type column in the Generators_data.csv file denoting the type of each technology.\nAdd a MGA column in the Generators_data.csv file denoting the availability of the technology.\nSet the ModelingToGenerateAlternatives flag in the GenX_Settings.yml file to 1.\nSet the ModelingtoGenerateAlternativeSlack flag in the GenX_Settings.yml file to the desirable level of slack.\nCreate a Rand_mga_objective_coefficients.csv file to provide random objective function coefficients for each MGA iteration. For each iteration, number of rows in the Rand_mga_objective_coefficients.csv file represents the number of distinct technology types while number of columns represent the number of model zones.\nSolve the model using Run.jl file.","category":"page"},{"location":"index.html#","page":"Welcome Page","title":"Welcome Page","text":"Results from the MGA algorithm would be saved in MGA_max and MGA_min folders in the Example_Systems/ folder.","category":"page"},{"location":"index.html#Contents-1","page":"Welcome Page","title":"Contents","text":"","category":"section"},{"location":"index.html#","page":"Welcome Page","title":"Welcome Page","text":"","category":"page"},{"location":"index.html#Index-1","page":"Welcome Page","title":"Index","text":"","category":"section"},{"location":"index.html#","page":"Welcome Page","title":"Welcome Page","text":"","category":"page"}]
}
