var documenterSearchIndex = {"docs":
[{"location":"thermal-no-commit.html#Thermal-No-Commit-1","page":"Thermal No Commit","title":"Thermal No Commit","text":"","category":"section"},{"location":"thermal-no-commit.html#","page":"Thermal No Commit","title":"Thermal No Commit","text":"Modules = [GenX]\nPages = [\"thermal_no_commit.jl\"]","category":"page"},{"location":"thermal-no-commit.html#GenX.thermal_no_commit-Tuple{JuMP.Model,Dict,Int64}","page":"Thermal No Commit","title":"GenX.thermal_no_commit","text":"thermal_no_commit(EP::Model, inputs::Dict, Reserves::Int)\n\nThis function defines the operating constraints for thermal power plants NOT subject to unit commitment constraints on power plant start-ups and shut-down decisions (y in H setminus UC).\n\nRamping limits\n\nThermal resources not subject to unit commitment (y in H setminus UC) adhere instead to the following ramping limits on hourly changes in power output:\n\nbeginaligned\n\tTheta_yzt-1 - Theta_yzt leq kappa_yz^down Delta^texttotal_yz hspace3cm forall y in mathcalH setminus UC forall z in mathcalZ forall t in mathcalT\nendaligned\nbeginaligned\n\tTheta_yzt - Theta_yzt-1 leq kappa_yz^up Delta^texttotal_yz hspace35cm forall y in mathcalH setminus UC forall z in mathcalZ forall t in mathcalT\nendaligned\n\n(See Constraints 1-2 in the code)\n\nThis set of time-coupling constraints wrap around to ensure the power output in the first time step of each year (or each representative period), t in mathcalT^start, is within the eligible ramp of the power output in the final time step of the year (or each representative period), t+tau^period-1.\n\nMinimum and maximum power output\n\nWhen not modeling regulation and reserves, thermal units not subject to unit commitment decisions are bound by the following limits on maximum and minimum power output:\n\nbeginaligned\n\tTheta_yzt geq rho^min_yz times Delta^total_yz\n\thspace4cm forall y in mathcalH setminus UC forall z in mathcalZ forall t in mathcalT\nendaligned\nbeginaligned\n\tTheta_yzt leq rho^max_yzt times Delta^total_yz\n\thspace4cm forall y in mathcalH setminus UC forall z in mathcalZ forall t in mathcalT\nendaligned\n\n(See Constraints 3-4 in the code)\n\n\n\n\n\n","category":"method"},{"location":"thermal-no-commit.html#GenX.thermal_no_commit_reserves-Tuple{JuMP.Model,Dict}","page":"Thermal No Commit","title":"GenX.thermal_no_commit_reserves","text":"\tthermal_no_commit_reservesEP::Model, inputs::Dict)\n\nThis function is called by the thermal_no_commit() function when regulation and reserves constraints are active and defines reserve related constraints for thermal power plants not subject to unit commitment constraints on power plant start-ups and shut-down decisions.\n\n**Maximum contributions to frequency regulation and reserves**\n\nThermal units not subject to unit commitment adhere instead to the following constraints on maximum reserve and regulation contributions:\n\n```math\n\\begin{aligned}\n\tf_{y,z,t} \\leq \\upsilon^{reg}_{y,z} \\times \\rho^{max}_{y,z,t} \\Delta^{\\text{total}}_{y,z} \\hspace{4cm} \\forall y \\in \\mathcal{H \\setminus UC}, \\forall z \\in \\mathcal{Z}, \\forall t \\in \\mathcal{T}\n\\end{aligned}\n\\begin{aligned}\n\tr_{y,z,t} \\leq \\upsilon^{rsv}_{y,z} \\times \\rho^{max}_{y,z,t} \\Delta^{\\text{total}}_{y,z} \\hspace{4cm} \\forall y \\in \\mathcal{H \\setminus UC}, \\forall z \\in \\mathcal{Z}, \\forall t \\in \\mathcal{T}\n\\end{aligned}\n```\nwhere $f_{y,z,t}$ is the frequency regulation contribution limited by the maximum regulation contribution $\\upsilon^{reg}_{y,z}$, and $r_{y,z,t}$ is the reserves contribution limited by the maximum reserves contribution $\\upsilon^{rsv}_{y,z}$. Limits on reserve contributions reflect the maximum ramp rate for the thermal resource in whatever time interval defines the requisite response time for the regulation or reserve products (e.g., 5 mins or 15 mins or 30 mins). These response times differ by system operator and reserve product, and so the user should define these parameters in a self-consistent way for whatever system context they are modeling.\n\n**Minimum and maximum power output**\n\nWhen modeling regulation and spinning reserves, thermal units not subject to unit commitment are bound by the following limits on maximum and minimum power output:\n\n```math\n\\begin{aligned}\n\t\\Theta_{y,z,t} - f_{y,z,t} \\geq \\rho^{min}_{y,z} \\times \\Delta^{\\text{total}}_{y,z}\n\t\\hspace{3.5cm} \\forall y \\in \\mathcal{H \\setminus UC}, \\forall z \\in \\mathcal{Z}, \\forall t \\in \\mathcal{T}\n\\end{aligned}\n\\begin{aligned}\n\t\\Theta_{y,z,t} + f_{y,z,t} + r_{y,z,t} \\leq \\rho^{max}_{y,z,t} \\times \\Delta^{\\text{total}}_{y,z}\n\t\\hspace{2.2cm} \\forall y \\in \\mathcal{H \\setminus UC}, \\forall z \\in \\mathcal{Z}, \\forall t \\in \\mathcal{T}\n\\end{aligned}\n```\n\nNote there are multiple versions of these constraints in the code in order to avoid creation of unecessary constraints and decision variables for thermal units unable to provide regulation and/or reserves contributions due to input parameters (e.g. Reg_Max and/or RSV_Max = 0)\n\n\n\n\n\n","category":"method"},{"location":"new_doc_page.html#Header-1","page":"New Documentation Page","title":"Header","text":"","category":"section"},{"location":"new_doc_page.html#Sub-header-1","page":"New Documentation Page","title":"Sub header","text":"","category":"section"},{"location":"new_doc_page.html#","page":"New Documentation Page","title":"New Documentation Page","text":"This is a new documantation page","category":"page"},{"location":"new_doc_page.html#","page":"New Documentation Page","title":"New Documentation Page","text":"Modules = [GenX]\nPages = [\"configure_cbc.jl\"]","category":"page"},{"location":"non-served-energy.html#Non-served-Energy-1","page":"Non Served Energy","title":"Non-served Energy","text":"","category":"section"},{"location":"non-served-energy.html#","page":"Non Served Energy","title":"Non Served Energy","text":"Modules = [GenX]\nPages = [\"non_served_energy.jl\"]","category":"page"},{"location":"non-served-energy.html#GenX.non_served_energy-Tuple{JuMP.Model,Dict}","page":"Non Served Energy","title":"GenX.non_served_energy","text":"non_served_energy(EP::Model, inputs::Dict)\n\nThis function defines the non-served energy/curtailed demand decision variable Lambda_stz forall s in mathcalS forall t in mathcalT z in mathcalZ, representing the total amount of demand curtailed in demand segment s at time period t in zone z. The first segment of non-served energy, s=1, is used to denote the cost of involuntary demand curtailment (e.g. emergency load shedding or rolling blackouts), specified as the value of n_1^slope. Additional segments, s geq 2 can be used to specify a segment-wise approximation of a price elastic demand curve, or segments of price-responsive curtailable loads (aka demand response). Each segment denotes a price/cost at which the segment of demand is willing to curtail consumption, n_s^slope, representing the marginal willingness to pay for electricity of this segment of demand (or opportunity cost incurred when demand is not served) and a maximum quantity of demand in this segment, n_s^size, specified as a share of demand in each zone in each time step, D_tz Note that the current implementation assumes demand segments are an equal share of hourly load in all zones.\n\nThis function defines contributions to the objective function from the cost of non-served energy/curtailed demand from all demand curtailment segments s in mathcalS over all time periods t in mathcalT and all zones z in mathcalZ:\n\nbeginaligned\n\tObj_NSE =\n\tsum_s in mathcalS  sum_t in mathcalT sum_z in mathcalZomega_t times n_s^slope times Lambda_stz\nendaligned\n\nContributions to the power balance expression from non-served energy/curtailed demand from each demand segment s in mathcalS are also defined as:\n\nbeginaligned\n\tPowerBal_NSE =\n\tsum_s in mathcalS  Lambda_stz\n\t\thspace4 cm  forall s in mathcalS t in mathcalT\nendaligned\n\nBounds on curtailable demand\n\nDemand curtailed in each segment of curtailable demands s in mathcalS cannot exceed maximum allowable share of demand:\n\nbeginaligned\n\tLambda_stz leq (n_s^size times D_tz)\n\thspace4 cm  forall s in mathcalS t in mathcalT zin mathcalZ\nendaligned\n\nAdditionally, total demand curtailed in each time step cannot exceed total demand:\n\nbeginaligned\n\tsum_s in mathcalS  Lambda_stz leq D_tz\n\thspace4 cm  forall t in mathcalT zin mathcalZ\nendaligned\n\n\n\n\n\n","category":"method"},{"location":"ucommit.html#Unit-Commitment-1","page":"Unit Commitment","title":"Unit Commitment","text":"","category":"section"},{"location":"ucommit.html#","page":"Unit Commitment","title":"Unit Commitment","text":"Modules = [GenX]\nPages = [\"ucommit.jl\"]","category":"page"},{"location":"ucommit.html#GenX.ucommit-Tuple{JuMP.Model,Dict,Int64}","page":"Unit Commitment","title":"GenX.ucommit","text":"ucommit(EP::Model, inputs::Dict, UCommit::Int)\n\nThis function creates decision variables and cost expressions associated with thermal plant unit commitment or start-up and shut-down decisions (cycling on/off)\n\nUnit commitment decision variables:\n\nThis function defines the following decision variables:\n\nnu_ytz\n\ndesignates the commitment state of generator cluster y in zone z at time t; chi_ytz represents number of startup decisions in cluster y in zone z at time t; zeta_ytz represents number of shutdown decisions in cluster y in zone z at time t.\n\n**Cost expressions:*\n\nThe total cost of start-ups across all generators subject to unit commitment (y in UC) and all time periods, t is expressed as:\n\nbeginaligned\n\tC^start = sum_y in UC t in T omega_t times start_cost_y times chi_yt\nendaligned\n\nThe sum of start-up costs is added to the objective function.\n\n\n\n\n\n","category":"method"},{"location":"must-run.html#Must-Run-1","page":"Must Run","title":"Must Run","text":"","category":"section"},{"location":"must-run.html#","page":"Must Run","title":"Must Run","text":"Modules = [GenX]\nPages = [\"must_run.jl\"]","category":"page"},{"location":"must-run.html#GenX.must_run-Tuple{JuMP.Model,Dict}","page":"Must Run","title":"GenX.must_run","text":"must_run(EP::Model, inputs::Dict)\n\nThis function defines the constraints for operation of `must-run' or non-dispatchable resources, such as rooftop solar systems that do not receive dispatch signals, run-of-river hydroelectric facilities without the ability to spill water, or cogeneration systems that must produce a fixed quantity of heat in each time step. This resource type can also be used to model baseloaded or self-committed thermal generators that do not respond to economic dispatch.\n\nFor must-run resources (yin mathcalMR) output in each time period t must exactly equal the available capacity factor times the installed capacity, not allowing for curtailment. These resources are also not eligible for contributing to frequency regulation or operating reserve requirements.\n\nbeginaligned allowdisplaybreaks\nlabeleqmustruncapub\n\tTheta_yzt = rho^max_yzttimes Delta^total_yz\n\thspace4 cm  forall y in mathcalMR z in mathcalZt in mathcalT\nendaligned\n\n\n\n\n\n","category":"method"},{"location":"reserves.html#Reserves-1","page":"Reserves","title":"Reserves","text":"","category":"section"},{"location":"reserves.html#","page":"Reserves","title":"Reserves","text":"Modules = [GenX]\nPages = [\"reserves.jl\"]","category":"page"},{"location":"reserves.html#GenX.reserves-Tuple{JuMP.Model,Dict,Int64}","page":"Reserves","title":"GenX.reserves","text":"reserves(EP::Model, inputs::Dict, UCommit::Int)\n\nThis function sets up reserve decisions and constraints, using reserves_core() and reserves_contingency() functions.\n\n\n\n\n\n","category":"method"},{"location":"reserves.html#GenX.reserves_contingency-Tuple{JuMP.Model,Dict,Int64}","page":"Reserves","title":"GenX.reserves_contingency","text":"reserves_contingency(EP::Model, inputs::Dict, UCommit::Int)\n\nThis function establishes several different versions of contingency reserve requirement expression, CONTINGENCY used in the reserves_core() function below.\n\nContingency reserves represent requirements for upward ramping capability within a specified time frame to compensated for forced outages or unplanned failures of generators or transmission lines (e.g. N-1 contingencies).\n\nThere are three options for the Contingency expression, depending on user settings:\n\n\\begin{enumerate} \\item a static contingency, in which the contingency requirement is set based on a fixed value (in MW) specified in the '''reserves.csv''' input file; \\item a dynamic contingency based on installed capacity decisions, in which the largest \\textit{installed} generator is used to determine the contingency requirement for all time periods; and \\item dynamic unit commitment based contingency, in which the largest \\textit{committed} generator in any time period is used to determine the contingency requirement in that time period. \\end{enumerate}\n\nNote that the two dynamic contigencies are only available if unit commitment is being modeled.\n\nStatic contingency Option 1 (static contingency) is expressed by the following constraint:\n\nbeginaligned\n\tContingency = epsilon^contingency\n\tlabeleqstatconting\nendaligned\n\nwhere epsilon^contingency is static contingency requirement in MWs.\n\nDynamic capacity-based contingency Option 2 (dynamic capacity-based contingency) is expressed by the following constraints (Eqs. \\ref{eq:dynamconting1} - \\ref{eq:dynamconting3}):\n\nbeginaligned\n\tContingency geq Omega^size_yz times alpha^ContingencyAux_yz hspace4cm forall y in mathcalUC z in mathcalZ\n\tlabeleqdynamconting1\nendaligned\nbeginaligned\n\talpha^ContingencyAux_yz leq Delta^texttotal_yz hspace4cm forall y in mathcalUC z in mathcalZ\n\tlabeleqdynamconting2\nendaligned\nbeginaligned\n\talpha^ContingencyAux_yz geq M_y times Delta^texttotal_yz hspace4cm forall y in mathcalUC z in mathcalZ\n\tlabeleqdynamconting3\nendaligned\n\nwhere M_y is a `big M' constant equal to the largest possible capacity that can be installed for generation cluster y, and alpha^ContingencyAux_yz in 01 is a binary auxiliary variable that is forced by the second and third equations above to be 1 if the total installed capacity Delta^texttotal_yz  0 for any generator y in mathcalUC and zone z, and can be 0 otherwise. Note that if the user specifies contingency option 2, and is also using the linear relaxation of unit commitment constraints, the capacity size parameter for units in the set mathcalUC must still be set to a discrete unit size for this contingency to work as intended.\n\nDynamic commitment-based contingency Option 3 (dynamic commitment-based contingency) is expressed by the following three sets of constraints (Eqs. \\ref{eq:dynamconting4} - \\ref{eq:dynamconting6}):\n\nbeginaligned\n\tContingency geq Omega^size_yz times Contingency_Aux_yzt hspace4cm forall y in mathcalUC z in mathcalZ\n\tlabeleqdynamconting4\nendaligned\nbeginaligned\n\tContingency_Aux_yzt leq nu_yzt hspace4cm forall y in mathcalUC z in mathcalZ\n\tlabeleqdynamconting5\nendaligned\nbeginaligned\n\tContingency_Aux_yzt geq M_y times nu_yzt hspace4cm forall y in mathcalUC z in mathcalZ\n\tlabeleqdynamconting6\nendaligned\n\nwhere M_y is a `big M' constant equal to the largest possible capacity that can be installed for generation cluster y, and Contingency_Aux_yzt in 01 is a binary auxiliary variable that is forced by the second and third equations above to be 1 if the commitment state for that generation cluster nu_yzt  0 for any generator y in mathcalUC and zone z and time period t, and can be 0 otherwise. Note that this dynamic commitment-based contingency can only be specified if discrete unit commitment decisions are used (e.g. it will not work if relaxed unit commitment is used).\n\n\n\n\n\n","category":"method"},{"location":"thermal-commit.html#Thermal-Commit-1","page":"Thermal Commit","title":"Thermal Commit","text":"","category":"section"},{"location":"thermal-commit.html#","page":"Thermal Commit","title":"Thermal Commit","text":"Modules = [GenX]\nPages = [\"thermal_commit.jl\"]","category":"page"},{"location":"thermal-commit.html#GenX.thermal_commit-Tuple{JuMP.Model,Dict,Int64}","page":"Thermal Commit","title":"GenX.thermal_commit","text":"thermal_commit(EP::Model, inputs::Dict, Reserves::Int)\n\nThis function defines the operating constraints for thermal power plants subject to unit commitment constraints on power plant start-ups and shut-down decision (y in UC).\n\nWe model capacity investment decisions and commitment and cycling (start-up, shut-down) of thermal generators using the integer clustering technique developed in \\cite{Palmintier2011, Palmintier2014}. In a typical binary unit commitment formulation, each unit is either on or off. With the clustered unit commitment formulation, one or more cluster(s) of similar generators are clustered by type and zone (typically using heat rate and fixed O\\&M cost to create clusters), and the integer commitment state variable for each cluster varies from zero to the number of units in the cluster, fracDelta^total_yzOmega^size_yz. As discussed in \\cite{Palmintier2014}, this approach replaces the large set of binary commitment decisions and associated constraints, which scale directly with the number of individual units, with a smaller set of integer commitment states and  constraints, one for each cluster y. The dimensionality of the problem thus scales with the number of units of a given type in each zone, rather than by the number of discrete units, significantly improving computational efficiency. However, this method entails the simplifying assumption that all clustered units have identical parameters (e.g., capacity size, ramp rates, heat rate) and that all committed units in a given time step t are operating at the same power output per unit.\n\nPower balance expression\n\nThis function adds the sum of power generation from thermal units subject to unit commitment (Theta_y in UCt in Tz in Z) to the power balance expression.\n\nStartup and shutdown events (thermal plant cycling)\n\n***Capacitated limits on unit commitment decision variables***\n\nThermal resources subject to unit commitment (y in mathcalUC) adhere to the following constraints on commitment states, startup events, and shutdown events, which limit each decision to be no greater than the maximum number of discrete units installed (as per the following three constraints):\n\nbeginaligned\nlabeleqnumclustermax1\nnu_yzt leq fracDelta^texttotal_yzOmega^size_yz\n\thspace4cm forall y in mathcalUC forall z in mathcalZ forall t in mathcalT\nendaligned\nlabeleqnumclustermax2\nbeginaligned\nchi_yzt leq fracDelta^texttotal_yzOmega^size_yz\n\thspace4cm forall y in mathcalUC forall z in mathcalZ forall t in mathcalT\nendaligned\nbeginaligned\nlabeleqnumclustermax3\nzeta_yzt leq fracDelta^texttotal_yzOmega^size_yz\n\thspace4cm forall y in mathcalUC forall z in mathcalZ forall t in mathcalT\nendaligned\n\n(See Constraints 1-3 in the code)\n\nwhere decision nu_yzt designates the commitment state of generator cluster y in zone z at time t, decision chi_yzt represents number of startup decisions, decision zeta_yzt represents number of shutdown decisions, Delta^texttotal_yz is the total installed capacity, and parameter Omega^size_yz is the unit size.\n\n***Commitment state constraint linking start-up and shut-down decisions***\n\nAdditionally, the following constarint maintains the commitment state variable across time, nu_yzt, as the sum of the commitment state in the prior, nu_yzt-1, period plus the number of units started in the current period, chi_yzt, less the number of units shut down in the current period, zeta_yzt:\n\nbeginaligned allowdisplaybreaks\nlabelequcommitconstraintint\nnu_yzt =nu_yzt-1 + chi_yzt - zeta_yzt\n\thspace35cm forall y in mathcalUC forall z in mathcalZ forall t in mathcalT^interior \nlabelequcommitconstraintstart\nnu_yzt =nu_yzt +tau^period-1 + chi_yzt - zeta_yzt\n\thspace35cm forall y in mathcalUC forall z in mathcalZ forall t in mathcalT^start\nendaligned\n\n(See Constraint 4 in the code)\n\nLike other time-coupling constraints, this constraint wraps around to link the commitment state in the first time step of the year (or each representative period), t in mathcalT^start, to the last time step of the year (or each representative period), t+tau^period-1.\n\nRamping constraints\n\nThermal resources subject to unit commitment (y in UC) adhere to the following ramping constraints on hourly changes in power output:\n\nbeginaligned\nbeginaligned\n\tTheta_yzt-1 - Theta_yzt leq  kappa^down_yz cdot Omega^size_yz cdot (nu_yzt - chi_yzt)  6pt\n\tqquad  -  rho^min_yz cdot Omega^size_yz cdot chi_yzt  hspace05cm forall y in mathcalUC forall z in mathcalZ forall t in mathcalT  6pt\n\tqquad  +  textmin( rho^max_yzt textmax( rho^min_yz kappa^down_yz ) ) cdot Omega^size_yz cdot zeta_yzt \nendaligned\nendaligned\nbeginaligned\nbeginaligned\n\tTheta_yzt - Theta_yzt-1 leq  kappa^up_yz cdot Omega^size_yz cdot (nu_yzt - chi_yzt)  6pt\n\tqquad  +  textmin( rho^max_yzt textmax( rho^min_yz kappa^up_yz ) ) cdot Omega^size_yz cdot chi_yzt  hspace05cm forall y in mathcalUC forall z in mathcalZ forall t in mathcalT 6pt\n\tqquad  -  rho^min_yz cdot Omega^size_yz cdot zeta_yzt \nendaligned\nendaligned\n\n(See Constraints 5-6 in the code)\n\nwhere decision Theta_yzt is the energy injected into the grid by technology y in zone z at time t, parameter kappa_yzt^updown is the maximum ramp-up or ramp-down rate as a percentage of installed capacity, parameter rho_yz^min is the minimum stable power output per unit of installed capacity, and parameter rho_yzt^max is the maximum available generation per unit of installed capacity. These constraints account for the ramping limits for committed (online) units as well as faster changes in power enabled by units starting or shutting down in the current time step.\n\nMinimum and maximum power output\n\nIf not modeling regulation and spinning reserves, thermal resources subject to unit commitment adhere to the following constraints that ensure power output does not exceed minimum and maximum feasible levels:\n\nbeginaligned\n\tTheta_yzt geq rho^min_yz times Omega^size_yz times nu_yzt\n\thspace4cm forall y in mathcalUC forall z in mathcalZ forall t in mathcalT\nendaligned\nbeginaligned\n\tTheta_yzt leq rho^max_yzt time Omega^size_yz times nu_yzt\n\thspace4cm forall y in mathcalUC forall z in mathcalZ forall t in mathcalT\nendaligned\n\n(See Constraints 7-8 the code)\n\nIf modeling reserves and regulation, these constraints are replaced by those established in this thermalcommitreserves().\n\nMinimum and maximum up and down time\n\nThermal resources subject to unit commitment adhere to the following constraints on the minimum time steps after start-up before a unit can shutdown again (minimum up time) and the minimum time steps after shut-down before a unit can start-up again (minimum down time):\n\nbeginaligned\nlabeleqminuptime\n\tnu_yzt geq displaystyle sum_hatt = t-tau^up_yz^t chi_yzhatt\n\thspace5cm forall y in mathcalUC forall z in mathcalZ forall t in mathcalT\nendaligned\nbeginaligned\nlabeleqmindowntime\n\tfracoverlineDelta_yz + Omega_yz - Delta_yzOmega^size_yz -  nu_yzt geq displaystyle sum_hatt = t-tau^down_yz^t zeta_yzhatt\n\thspace15cm forall y in mathcalUC forall z in mathcalZ forall t in mathcalT\nendaligned\n\n(See Constraints 9-10 in the code)\n\nwhere tau_yz^updown is the minimum up or down time for units in generating cluster y in zone z.\n\nLike with the ramping constraints, the minimum up and down constraint time also wrap around from the start of each time period to the end of each period.\n\n\n\n\n\n","category":"method"},{"location":"thermal-commit.html#GenX.thermal_commit_reserves-Tuple{JuMP.Model,Dict}","page":"Thermal Commit","title":"GenX.thermal_commit_reserves","text":"thermal_commit_reserves(EP::Model, inputs::Dict)\n\nThis function is called by the thermal_commit() function when regulation and reserves constraints are active and defines reserve related constraints for thermal power plants subject to unit commitment constraints on power plant start-ups and shut-down decisions.\n\nMaximum contributions to frequency regulation and reserves\n\nWhen modeling frequency regulation and reserves contributions, thermal units subject to unit commitment adhere to the following constraints which limit the maximum contribution to regulation and reserves in each time step to a specified maximum fraction (upsilon^rsv_yz) of the commitment capacity in that time step ((Omega^size_yz cdot nu_yzt)):\n\nbeginaligned\n\tf_yzt leq upsilon^reg_yz times rho^max_yzt (Omega^size_yz times nu_yzt) hspace4cm forall y in mathcalUC forall z in mathcalZ forall t in mathcalT\nendaligned\nbeginaligned\n\tr_yzt leq upsilon^rsv_yz times rho^max_yzt (Omega^size_yz times nu_yzt) hspace4cm forall y in mathcalUC forall z in mathcalZ forall t in mathcalT\nendaligned\n\nwhere f_yzt is the frequency regulation contribution limited by the maximum regulation contribution upsilon^reg_yz, and r_yzt is the reserves contribution limited by the maximum reserves contribution upsilon^rsv_yz. Limits on reserve contributions reflect the maximum ramp rate for the thermal resource in whatever time interval defines the requisite response time for the regulation or reserve products (e.g., 5 mins or 15 mins or 30 mins). These response times differ by system operator and reserve product, and so the user should define these parameters in a self-consistent way for whatever system context they are modeling.\n\nMinimum and maximum power output\n\nWhen modeling frequency regulation and spinning reserves contributions, thermal resources subject to unit commitment adhere to the following constraints that ensure the sum of power output and reserve and/or regulation contributions do not exceed minimum and maximum feasible power output:\n\nbeginaligned\n\tTheta_yzt - f_yzt geq rho^min_yz times Omega^size_yz times nu_yzt\n\thspace4cm forall y in mathcalUC forall z in mathcalZ forall t in mathcalT\nendaligned\nbeginaligned\n\tTheta_yzt + f_yzt + r_yzt leq rho^max_yzt times Omega^size_yz times nu_yzt\n\thspace32cm forall y in mathcalUC forall z in mathcalZ forall t in mathcalT\nendaligned\n\nNote there are multiple versions of these constraints in the code in order to avoid creation of unecessary constraints and decision variables for thermal units unable to provide regulation and/or reserves contributions due to input parameters (e.g. RegMax and/or RSVMax = 0)\n\n\n\n\n\n","category":"method"},{"location":"hydro-res.html#Hydro-Resources-1","page":"Hydro","title":"Hydro Resources","text":"","category":"section"},{"location":"hydro-res.html#","page":"Hydro","title":"Hydro","text":"Modules = [GenX]\nPages = [\"hydro_res.jl\"]","category":"page"},{"location":"hydro-res.html#GenX.hydro_res-Tuple{JuMP.Model,Dict,Int64}","page":"Hydro","title":"GenX.hydro_res","text":"hydro_res(EP::Model, inputs::Dict, Reserves::Int)\n\nThis module defines the operational constraints for reservoir hydropower plants.\n\nHydroelectric generators with water storage reservoirs (y in mathcalW) are effectively modeled as energy storage devices that cannot charge from the grid and instead receive exogenous inflows to their storage reservoirs, reflecting stream flow inputs. For resources with unknown reservoir capacity (y in mathcalW^nocap), their operation is parametrized by their generation efficiency, eta_yz^down, and energy inflows to the reservoir at every time-step, represented as a fraction of the total power capacity,(rho^max_yzt).  In case reservoir capacity is known (y in mathcalW^cap), an additional parameter, mu^stor_yz, referring to the ratio of energy capacity to discharge power capacity, is used to define the available reservoir storage capacity.\n\nStorage inventory balance\n\nReservoir hydro systems are governed by the storage inventory balance constraint given below. This constraint enforces that energy level of the reservoir resource y and zone z in time step t (Gamma_yzt) is defined as the sum of the reservoir level in the previous time step, less the amount of electricity generated, Theta_yzt (accounting for the generation efficiency, eta_yz^down), minus any spillage varrho_yzt, plus the hourly inflows into the reservoir (equal to the installed reservoir discharged capacity times the normalized hourly inflow parameter rho^max_yz t).\n\nbeginaligned allowdisplaybreaks\nlabeleqhydroSoCBalint\nGamma_yzt = Gamma_yzt-1 -frac1eta_yz^downTheta_yzt - varrho_yzt + rho^max_yzt times Delta^total_yz  hspace1 cm  forall y in mathcalW z in mathcalZ t in mathcalT^interior \nlabeleqhydroSoCBalstart\nGamma_yzt = Gamma_yzt+tau^period-1 -frac1eta_yz^downTheta_yzt - varrho_yzt + rho^max_yzt times Delta^total_yz  hspace1 cm  forall y in mathcalW z in mathcalZ t in mathcalT^start\nendaligned\n\nWe implement time-wrapping to endogenize the definition of the intial state prior to the first period with the following assumption. If time step t is the first time step of the year then storage inventory at t is defined based on last time step of the year. Alternatively, if time step t is the first time step of a representative period, then storage inventory at t is defined based on the last time step of the representative period. Thus, when using representative periods, the storage balance constraint for hydro resources does not allow for energy exchange between representative periods.\n\nNote: in future updates, an option to model hydro resources with large reservoirs that can transfer energy across sample periods will be implemented, similar to the functions for modeling long duration energy storage in longdurationstorage.jl.\n\nRamping Limits\n\nThe following constraints enforce hourly changes in power output (ramps down and ramps up) to be less than the maximum ramp rates (kappa^down_yz and kappa^up_yz ) in per unit terms times the total installed capacity of technology y (Delta^total_yz).\n\nbeginaligned allowdisplaybreaks\nlabeleqhydrorampdown\nTheta_yzt - Theta_yzt-1 leq kappa^up_yz times Delta^total_yz\nhspace2 cm  forall y in mathcalW z in mathcalZ t in mathcalT\nendaligned\n\nbeginaligned\nlabeleqhydrorampup\nTheta_yzt-1 - Theta_yzt leq kappa^down_yz Delta^total_yz\nhspace2 cm  forall y in mathcalW z in mathcalZ t in mathcalT\nendaligned\n\nRamping constraints are enforced for all time steps except the first time step of the year or first time of each representative period when using representative periods to model grid operations.\n\nPower generation and stream flow bounds\n\nElectricity production plus total spilled power from hydro resources is constrained to always be above a minimum output parameter, rho^min_yz, to represent operational constraints related to minimum stream flows or other demands for water from hydro reservoirs. Electricity production is constrained by either the the net installed capacity or by the energy level in the reservoir in the prior time step, whichever is more binding. For the latter constraint, the constraint for the first time step of the year (or the first time step of each representative period) is implemented based on energy storage level in last time step of the year (or last time step of each representative period).\n\nbeginalignedallowdisplaybreaks\nlabeleqhydrominflow\nTheta_yzt + varrho_yzt  geq rho^min_yz times Delta^total_yz\nhspace2 cm  forall y in mathcalW z in mathcalZ t in mathcalT\nendaligned\n\nbeginaligned\nlabeleqhydromaxpcap\n\tTheta_yt  leq times Delta^total_yz\nhspace4 cm  forall y in mathcalW z in mathcalZ tin mathcalT\nendaligned\n\nbeginaligned\nlabeleqhydromaxecap\n\tTheta_yzt leq  Gamma_yt-1\nhspace4 cm  forall y in mathcalW z in mathcalZ tin mathcalT\nendaligned\n\t\n\n**Reservoir energy capacity constraint**\n\nIn case the reservoir capacity is known (y in W^cap) then an additional constraint enforces the total stored energy in each time step to be less than or equal to the available reservoir capacity Here the reservoir capacity is defined multiplying the parameter mu^stor_yz with the available power capacity\n\nbeginaligned allowdisplaybreaks\nlabeleqhydrorescap\nGamma_yz t leq mu^stor_yztimes Delta^total_yz\nhspace4 cm  forall y in mathcalW^cap z in mathcalZ tin mathcalT\nendaligned\n\n\n\n\n\n","category":"method"},{"location":"hydro-res.html#GenX.hydro_res_reserves-Tuple{JuMP.Model,Dict}","page":"Hydro","title":"GenX.hydro_res_reserves","text":"hydro_res_reserves(EP::Model, inputs::Dict, Reserves::Int)\n\nThis module defines the modified constraints and additional constraints needed when modeling operating reserves\n\n**Modifications when operating reserves are modeled**\n\nWhen modeling operating reserves, the constraints regarding maximum power flow limits are modified to account for procuring some of the available capacity for frequency regulation ($f_{y,z,t}$) and \"updward\" operating (or spinning) reserves ($r_{y,z,t}$).\n\n```math\n\\begin{aligned} a\\allowdisplaybreaks\n\\label{eq:hydromaxpcapres}\n \\Theta_{y,z,t} + f_{y,z,t} +r_{y,z,t}  \\leq  \\times \\Delta^{total}_{y,z}\n\\hspace{4 cm}  \\forall y \\in \\mathcal{W}, z \\in \\mathcal{Z}, t\\in \\mathcal{T}\n\\end{aligned}\n```\n\nThe amount of downward frequency regulation reserves cannot exceed the current power output.\n\n```math\n\\begin{aligned}\n\\label{eq: hydrodownreg}\n f_{y,z,t} \\leq \\Theta_{y,z,t}\n\\hspace{4 cm}  \\forall y \\in \\mathcal{W}, z \\in \\mathcal{Z}, t \\in \\mathcal{T}\n\\end{aligned}\n ```\n\n The amount of frequency regulation and operating reserves procured in each time step is bounded by the user-specified fraction ($\\upsilon^{reg}_{y,z}$,$\\upsilon^{rsv}_{y,z}$) of nameplate capacity for each reserve type, reflecting the maximum ramp rate for the hydro resource in whatever time interval defines the requisite response time for the regulation or reserve products (e.g., 5 mins or 15 mins or 30 mins). These response times differ by system operator and reserve product, and so the user should define these parameters in a self-consistent way for whatever system context they are modeling.\n\n ```math\n \\begin{aligned}\n  f_{y,z,t} \\leq \\upsilon^{reg}_{y,z} \\times \\Delta^{total}_{y,z}\n  \\hspace{4 cm}  \\forall y \\in \\mathcal{W}, z \\in \\mathcal{Z}, t \\in \\mathcal{T} \\\\\n  r_{y,z, t} \\leq \\upsilon^{rsv}_{y,z}\\times \\Delta^{total}_{y,z}\n  \\hspace{4 cm}  \\forall y \\in \\mathcal{W}, z \\in \\mathcal{Z}, t \\in \\mathcal{T}\n  \\end{aligned}\n```\n\n\n\n\n\n","category":"method"},{"location":"curtailable-variable-renewable.html#Curtailable-Variable-Renewables-1","page":"Curtailable Variable Renewable","title":"Curtailable Variable Renewables","text":"","category":"section"},{"location":"curtailable-variable-renewable.html#","page":"Curtailable Variable Renewable","title":"Curtailable Variable Renewable","text":"Modules = [GenX]\nPages = [\"curtailable_variable_renewable.jl\"]","category":"page"},{"location":"curtailable-variable-renewable.html#GenX.curtailable_variable_renewable_reserves-Tuple{JuMP.Model,Dict}","page":"Curtailable Variable Renewable","title":"GenX.curtailable_variable_renewable_reserves","text":"curtailable_variable_renewable_reserves(EP::Model, inputs::Dict)\n\nWhen modeling operating reserves, this function is called by curtailable_variable_renewable(), which modifies the constraint for maximum power output in each time step from VRE resources to account for procuring some of the available capacity for frequency regulation (f_yzt) and upward operating (spinning) reserves (r_yzt).\n\nbeginaligned allowdisplaybreaks\nlabeleqVREpoweroutres\n\tTheta_yzt + f_yzt + r_yzt leq sum_(xz)in overlinemathcalVRE^xzrho^max_xzttimes Delta^total_xz  hspace05 cm   forall yz in (yz)VREIndex_yz=1 z in mathcalZt in mathcalT\nendaligned\n\nThe amount of downward frequency regulation reserves also cannot exceed the current power output.\n\nbeginaligned allowdisplaybreaks\nlabeleqVREpoweroutresdown\n\tf_yzt leq Theta_yzt\n\tforall yz in (yz)VREIndex_yz=1 z in mathcalZt in mathcalT\nendaligned\n\nThe amount of frequency regulation and operating reserves procured in each time step is bounded by the user-specified fraction (upsilon^reg_yz,upsilon^rsv_yz) of available capacity in each period for each reserve type, reflecting the maximum ramp rate for the VRE resource in whatever time interval defines the requisite response time for the regulation or reserve products (e.g., 5 mins or 15 mins or 30 mins). These response times differ by system operator and reserve product, and so the user should define these parameters in a self-consistent way for whatever system context they are modeling.\n\nbeginaligned allowdisplaybreaks\n\tr_yzt leq upsilon^rsv_yz sum_(xz)in overlinemathcalVRE^xzrho^max_xzttimes Delta^total_xz  hspace1 cm   forall yz in (yz)VREIndex_yz=1 z in mathcalZt in mathcalT \n\tf_yzt leq upsilon^reg_yz sum_(xz)in overlinemathcalVRE^xzrho^max_xzttimes Delta^total_xz  hspace1 cm   forall yz in (yz)VREIndex_yz=1 z in mathcalZt in mathcalT\nendaligned\n\n\n\n\n\n","category":"method"},{"location":"discharge.html#Discharge-1","page":"Discharge","title":"Discharge","text":"","category":"section"},{"location":"discharge.html#","page":"Discharge","title":"Discharge","text":"Modules = [GenX]\nPages = [\"discharge.jl\"]","category":"page"},{"location":"discharge.html#GenX.discharge-Tuple{JuMP.Model,Dict}","page":"Discharge","title":"GenX.discharge","text":"power(EP::Model, inputs::Dict)\n\nThis module defines the power decision variable Theta_yt forall y in mathcalG t in mathcalT, representing energy injected into the grid by resource y by at time period t.\n\nThis module additionally defines contributions to the objective function from variable costs of generation (variable O\\&M plus fuel cost) from all resources y in mathcalG over all time periods t in mathcalT:\n\nbeginaligned\n\tObj_Var_gen =\n\tsum_y in mathcalG  sum_t in mathcalTomega_ttimes(pi^VOM_y + pi^FUEL_y)times Theta_yt\nendaligned\n\n\n\n\n\n","category":"method"},{"location":"load_inputs.html#Reading-Input-Files-1","page":"Load Inputs","title":"Reading Input Files","text":"","category":"section"},{"location":"load_inputs.html#Capacity-Reserve-Margin-1","page":"Load Inputs","title":"Capacity Reserve Margin","text":"","category":"section"},{"location":"load_inputs.html#","page":"Load Inputs","title":"Load Inputs","text":"Modules = [GenX]\nPages = [\"load_cap_reserve_margin.jl\"]","category":"page"},{"location":"load_inputs.html#GenX.load_cap_reserve_margin-Tuple{Dict,AbstractString,AbstractString,Dict}","page":"Load Inputs","title":"GenX.load_cap_reserve_margin","text":"load_cap_reserve_margin(setup::Dict, path::AbstractString, sep::AbstractString, inputs_crm::Dict, network_var::DataFrame)\n\nFunction for reading input parameters related to planning reserve margin constraints\n\n\n\n\n\n","category":"method"},{"location":"load_inputs.html#CO_2-Emissions-Cap-1","page":"Load Inputs","title":"CO_2 Emissions Cap","text":"","category":"section"},{"location":"load_inputs.html#","page":"Load Inputs","title":"Load Inputs","text":"Modules = [GenX]\nPages = [\"load_co2_cap.jl\"]","category":"page"},{"location":"load_inputs.html#GenX.load_co2_cap-Tuple{Dict,AbstractString,AbstractString,Dict}","page":"Load Inputs","title":"GenX.load_co2_cap","text":"load_co2_cap(setup::Dict, path::AbstractString, sep::AbstractString, inputs_co2::Dict)\n\nFunction for reading input parameters related to CO_2 emissions cap constraints\n\n\n\n\n\n","category":"method"},{"location":"load_inputs.html#Energy-Share-Requirement-1","page":"Load Inputs","title":"Energy Share Requirement","text":"","category":"section"},{"location":"load_inputs.html#","page":"Load Inputs","title":"Load Inputs","text":"Modules = [GenX]\nPages = [\"load_energy_share_requirement.jl\"]","category":"page"},{"location":"load_inputs.html#GenX.load_energy_share_requirement-Tuple{Dict,AbstractString,AbstractString,Dict}","page":"Load Inputs","title":"GenX.load_energy_share_requirement","text":"load_energy_share_requirement(setup::Dict, path::AbstractString, sep::AbstractString, inputs_ESR::Dict)\n\nFunction for reading input parameters related to mimimum energy share requirement constraints (e.g. renewable portfolio standard or clean electricity standard policies)\n\n\n\n\n\n","category":"method"},{"location":"load_inputs.html#Fuels-Data-1","page":"Load Inputs","title":"Fuels Data","text":"","category":"section"},{"location":"load_inputs.html#","page":"Load Inputs","title":"Load Inputs","text":"Modules = [GenX]\nPages = [\"load_fuels_data.jl\"]","category":"page"},{"location":"load_inputs.html#GenX.load_fuels_data-Tuple{Dict,AbstractString,AbstractString,Dict}","page":"Load Inputs","title":"GenX.load_fuels_data","text":"load_fuels_data(setup::Dict, path::AbstractString, sep::AbstractString, inputs_fuel::Dict)\n\nFunction for reading input parameters related to fuel costs and CO_2 content of fuels\n\n\n\n\n\n","category":"method"},{"location":"load_inputs.html#Generators-Input-Data-1","page":"Load Inputs","title":"Generators Input Data","text":"","category":"section"},{"location":"load_inputs.html#","page":"Load Inputs","title":"Load Inputs","text":"Modules = [GenX]\nPages = [\"load_generators_data.jl\"]","category":"page"},{"location":"load_inputs.html#GenX.load_generators_data-Tuple{Dict,AbstractString,AbstractString,Dict,Dict,Dict}","page":"Load Inputs","title":"GenX.load_generators_data","text":"load_generators_data(setup::Dict, path::AbstractString, sep::AbstractString, inputs_gen::Dict, fuel_costs::Dict, fuel_CO2::Dict)\n\nFunction for reading input parameters related to electricity generators (plus storage and flexible demand resources)\n\n\n\n\n\n","category":"method"},{"location":"load_inputs.html#Variability-of-Generators'-Outputs-1","page":"Load Inputs","title":"Variability of Generators' Outputs","text":"","category":"section"},{"location":"load_inputs.html#","page":"Load Inputs","title":"Load Inputs","text":"Modules = [GenX]\nPages = [\"load_generators_variability.jl\"]","category":"page"},{"location":"load_inputs.html#GenX.load_generators_variability-Tuple{Dict,AbstractString,AbstractString,Dict}","page":"Load Inputs","title":"GenX.load_generators_variability","text":"load_generators_variability(setup::Dict, path::AbstractString, sep::AbstractString, inputs_genvar::Dict)\n\nFunction for reading input parameters related to hourly maximum capacity factors for all generators (plus storage and flexible demand resources)\n\n\n\n\n\n","category":"method"},{"location":"load_inputs.html#Load-Data-1","page":"Load Inputs","title":"Load Data","text":"","category":"section"},{"location":"load_inputs.html#","page":"Load Inputs","title":"Load Inputs","text":"Modules = [GenX]\nPages = [\"load_load_data.jl\"]","category":"page"},{"location":"load_inputs.html#GenX.load_load_data-Tuple{Dict,AbstractString,AbstractString,Dict}","page":"Load Inputs","title":"GenX.load_load_data","text":"load_data(setup::Dict, path::AbstractString, sep::AbstractString, inputs_load::Dict)\n\nFunction for reading input parameters related to electricity load (demand)\n\n\n\n\n\n","category":"method"},{"location":"load_inputs.html#Minimum-Capacity-Requirements-1","page":"Load Inputs","title":"Minimum Capacity Requirements","text":"","category":"section"},{"location":"load_inputs.html#","page":"Load Inputs","title":"Load Inputs","text":"Modules = [GenX]\nPages = [\"load_minimum_capacity_requirement.jl\"]","category":"page"},{"location":"load_inputs.html#GenX.load_minimum_capacity_requirement-Tuple{AbstractString,AbstractString,Dict,Dict}","page":"Load Inputs","title":"GenX.load_minimum_capacity_requirement","text":"load_minimum_capacity_requirement(path::AbstractString,sep::AbstractString, inputs::Dict, setup::Dict)\n\nFunction for reading input parameters related to mimimum capacity requirement constraints (e.g. technology specific deployment mandates)\n\n\n\n\n\n","category":"method"},{"location":"load_inputs.html#Transmission-Network-1","page":"Load Inputs","title":"Transmission Network","text":"","category":"section"},{"location":"load_inputs.html#","page":"Load Inputs","title":"Load Inputs","text":"Modules = [GenX]\nPages = [\"load_network_data.jl\"]","category":"page"},{"location":"load_inputs.html#GenX.load_network_data-Tuple{Dict,AbstractString,AbstractString,Dict}","page":"Load Inputs","title":"GenX.load_network_data","text":"load_network_data(setup::Dict, path::AbstractString, sep::AbstractString, inputs_nw::Dict)\n\nFunction for reading input parameters related to the electricity transmission network\n\n\n\n\n\n","category":"method"},{"location":"load_inputs.html#Mapping-Representative-Time-Periods-1","page":"Load Inputs","title":"Mapping Representative Time Periods","text":"","category":"section"},{"location":"load_inputs.html#","page":"Load Inputs","title":"Load Inputs","text":"Modules = [GenX]\nPages = [\"load_period_map.jl\"]","category":"page"},{"location":"load_inputs.html#GenX.load_period_map-Tuple{Dict,AbstractString,AbstractString,Dict}","page":"Load Inputs","title":"GenX.load_period_map","text":"load_period_map(setup::Dict,path::AbstractString,sep::AbstractString, inputs::Dict)\n\nFunction for reading input parameters related to mapping of representative time periods to full chronological time series\n\n\n\n\n\n","category":"method"},{"location":"load_inputs.html#Reserves-Data-1","page":"Load Inputs","title":"Reserves Data","text":"","category":"section"},{"location":"load_inputs.html#","page":"Load Inputs","title":"Load Inputs","text":"Modules = [GenX]\nPages = [\"load_reserves.jl\"]","category":"page"},{"location":"load_inputs.html#GenX.load_reserves-Tuple{Dict,AbstractString,AbstractString,Dict}","page":"Load Inputs","title":"GenX.load_reserves","text":"load_reserves(setup::Dict,path::AbstractString,sep::AbstractString, inputs_res::Dict)\n\nFunction for reading input parameters related to frequency regulation and operating reserve requirements\n\n\n\n\n\n","category":"method"},{"location":"data-documentation.html#GenX-Database-Documentation-1","page":"GenX Data","title":"GenX Database Documentation","text":"","category":"section"},{"location":"data-documentation.html#Model-setup-parameters-1","page":"GenX Data","title":"1 Model setup parameters","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"Model settings parameters are specified in a GenXSettings.yml file which should be located in the current working directory (or to specify an alternative location, edit the '''settings_path''' variable in your Run.jl file). Settings include those related to model structure, solution strategy and outputs, policy constraints, and others. Model structure related settings parameter affects the formulation of the model constraint and objective functions. Computational performance related parameters affect the accuracy of the solution. Policy related parameters specify the policy type and policy goal. Network related parameters specify settings related to transmission network expansion and losses. Note that all settings parameters are case sensitive.","category":"page"},{"location":"data-documentation.html#Table-1a:-Summary-of-the-Model-settings-parameters-1","page":"GenX Data","title":"Table 1a: Summary of the Model settings parameters","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"","category":"page"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"Settings Parameter Description\nModel structure related \nOperationWrapping Select temporal resolution for operations constraints.\n 0 = Models intra-annual operations as a single contiguous period. Inter-temporal constraint are defined based on linking first time step with the last time step of the year.\n 1 = Models intra-annual operations using multiple representative periods. Inter-temporal constraints are defined based on linking first time step with the last time step of each representative period.\nLongDurationStorage Select whether inter-period energy exchange allowed for storage technologies.\n 0= inter-period energy exchange not allowed.\n 1 = inter-period energy exchange allowed.\nTimeDomainReduction 1 = Use time domain reduced inputs available in the folder with the name defined by settings parameter TimeDomainReduction Folder. If such a folder does not exist or it is empty, time domain reduction will reduce the input data and save the results in the folder with this name. These reduced inputs are based on full input data provided by user in Load_data.csv, Generators_variability.csv, and Fuels_data.csv.\n 0 = Use full input data as provided.\nTimeDomainReductionFolder Name of the folder where time domain reduced input data is accessed and stored.\nUCommit Select technical resolution of of modeling thermal generators.\n 0 = no unit commitment.\n 1 = unit commitment with integer clustering.\n 2 = unit commitment with linearized clustering.\nNetworkExpansion Flag for activating or deactivating inter-regional transmission expansion.\n 1 = active\n 0 = modeling single zone or for multi-zone problems, inter regional transmission expansion is not allowed.\nTrans_Loss_Segments Number of segments to use in piece-wise linear approximation of losses.\n 1 = linear\n >=2 = piece-wise quadratic\nReserves Flag for modeling operating reserves .\n 0 = no operating reserves\n 1 regulation (primary) and spinning (secondary) reserves\nStorageLosses Flag to account for storage related losses.\n 0 = VRE and CO2 constraint DO NOT account for energy lost.\n 1 = constraint DO account for energy lost.\nPolicy related \nEnergyShareRequirement Flag for specifying regional renewable portfolio standard (RPS) and clean energy standard policy (CES) related constraints.\n Default = 0 (No RPS or CES constraints).\n 1 = activate energy share requirement related constraints.\nCO2Cap Flag for specifying the type of CO2 emission limit constraint.\n 0 = no CO2 emission limit\n 1 = mass-based emission limit constraint\n 2 = load + rate-based emission limit constraint\n 3 = generation + rate-based emission limit constraint\nCapacityReserveMargin Flag for Capacity Reserve Margin constraints.\n Default = 0 (No Capacity Reserve Margin constraints)\n 1 = activate Capacity Reserve Margin related constraints\nMinCapReq Minimum technology carve out requirement constraints.\n 1 = if one or more minimum technology capacity constraints are specified\n 0 = otherwise\nSolution strategy and outputs \nSolver Solver name is case sensitive (CPLEX, Gurobi, clp).\nParameterScale Flag to turn on parameter scaling wherein load, capacity and power variables defined in GW rather than MW. This flag aides in improving the computational performance of the model.\n 1 = Scaling is activated.\n 0 = Scaling is not activated.\nModelingToGenerateAlternatives Modeling to Generate Alternative Algorithm.\n 1 = Use the algorithm.\n 0 = Do not use the algorithm.\nModelingtoGenerateAlternativeSlack value used to define the maximum deviation from the least-cost solution as a part of Modeling to Generate Alternative Algorithm. Can take any real value between 0 and 1.\nWriteShadowPrices Get dual of various model related constraints, including to estimate electricity prices, stored value of energy and the marginal CO2 prices.\nMiscellaneous \nPrintModel Flag for printnig the model equations as .lp file.\n 1= including the model equation as an output\n 0 for the model equation not being included as an output\nMacOrWindows Set to either Mac (also works for Linux) or Windows to ensure use of proper file directory separator \\ or /.","category":"page"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"Additionally, Solver related settings parameters are specified in the appropriate solver settings .yml file (e.g. gurobi_settings.yml or cplex_settings.yml), which should be located in the current working directory (or to specify an alternative location, edit the '''solversettingspath''' variable in your Run.jl file). Note that GenX supplies default settings for most solver settings in the various solver-specific functions found in the /src/configure_solver/ directory. To overwrite default settings, you can specify the below Solver specific settings. Note that appropriate solver settings are specific to each solver.","category":"page"},{"location":"data-documentation.html#Table-1b:-Summary-of-the-Solver-settings-parameters-1","page":"GenX Data","title":"Table 1b: Summary of the Solver settings parameters","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"","category":"page"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"Settings Parameter Description\nSolver settings \nMethod Algorithm used to solve continuous models or the root node of a MIP model. Generally, barrier method provides the fastest run times for real-world problem set.\n CPLEX: CPX_PARAM_LPMETHOD - Default = 0; See link for more specifications.\n Gurobi: Method - Default = -1; See link for more specifications.\n clp: SolveType - Default = 5; See link for more specifications.\nBarConvTol Convergence tolerance for barrier algorithm.\n CPLEX: CPX_PARAM_BAREPCOMP - Default = 1e-8; See link for more specifications.\n Gurobi: BarConvTol - Default = 1e-8; See linklink for more specifications.\nFeasib_Tol All constraints must be satisfied as per this tolerance. Note that this tolerance is absolute.\n CPLEX: CPX_PARAM_EPRHS - Default = 1e-6; See link for more specifications.\n Gurobi: FeasibilityTol - Default = 1e-6; See link for more specifications.\n clp: PrimalTolerance - Default = 1e-7; See link for more specifications.\n clp: DualTolerance - Default = 1e-7; See link for more specifications.\nOptimal_Tol Reduced costs must all be smaller than Optimal_Tol in the improving direction in order for a model to be declared optimal.\n CPLEX: CPX_PARAM_EPOPT - Default = 1e-6; See link for more specifications.\n Gurobi: OptimalityTol - Default = 1e-6; See link for more specifications.\nPre_Solve Controls the presolve level.\n Gurobi: Presolve - Default = -1; See link for more specifications.\n clp: PresolveType - Default = 5; See link for more specifications.\nCrossover Determines the crossover strategy used to transform the interior solution produced by barrier algorithm into a basic solution.\n CPLEX: CPX_PARAM_SOLUTIONTYPE - Default = 2; See link for more specifications.\n Gurobi: Crossover - Default = 0; See link for more specifications.\nNumericFocus Controls the degree to which the code attempts to detect and manage numerical issues.\n CPLEX: CPX_PARAM_NUMERICALEMPHASIS - Default = 0; See link for more specifications.\n Gurobi: NumericFocus - Default = 0; See link for more specifications.\nTimeLimit Time limit to terminate the solution algorithm, model could also terminate if it reaches MIPGap before this time.\n CPLEX: CPX_PARAM_TILIM- Default = 1e+75; See link for more specifications.\n Gurobi: TimeLimit - Default = infinity; See link for more specifications.\n clp: MaximumSeconds - Default = -1; See link for more specifications.\nMIPGap Optimality gap in case of mixed-integer program.\n CPLEX: CPX_PARAM_EPGAP- Default = 1e-4; See link for more specifications.\n Gurobi: MIPGap - Default = 1e-4; See link for more specifications.\nDualObjectiveLimit When using dual simplex (where the objective is monotonically changing), terminate when the objective exceeds this limit.\n clp: DualObjectiveLimit - Default = 1e308; See link for more specifications.\nMaximumIterations Terminate after performing this number of simplex iterations.\n clp: MaximumIterations - Default = 2147483647; See link for more specifications.\nLogLevel Set to 1, 2, 3, or 4 for increasing output. Set to 0 to disable output.\n clp: logLevel - Default = 1; See link for more specifications.\n cbc: logLevel - Default = 1; See link for more specifications.\nInfeasibleReturn Set to 1 to return as soon as the problem is found to be infeasible (by default, an infeasibility proof is computed as well).\n clp: InfeasibleReturn - Default = 0; See link for more specifications.\nScaling Sets or unsets scaling; 0 -off, 1 equilibrium, 2 geometric, 3 auto, 4 dynamic(later).\n clp: Scaling - Default = 3; See link for more specifications.\nPerturbation Perturbs problem; Switch on perturbation (50), automatic (100), don't try perturbing (102).\n clp: Perturbation - Default = 3; See link for more specifications.\nmaxSolutions Terminate after this many feasible solutions have been found.\n cbc: maxSolutions - Default = -1; See link for more specifications.\nmaxNodes Terminate after this many branch-and-bound nodes have been evaluated\n cbc: maxNodes - Default = -1; See link for more specifications.\nallowableGap Terminate after optimality gap is less than this value (on an absolute scale)\n cbc: allowableGap - Default = -1; See link for more specifications.\nratioGap Terminate after optimality gap is smaller than this relative fraction.\n cbc: ratioGap - Default = Inf; See link for more specifications.\nthreads Set the number of threads to use for parallel branch & bound.\n cbc: threads - Default = 1; See link for more specifications.","category":"page"},{"location":"data-documentation.html#Inputs-1","page":"GenX Data","title":"2 Inputs","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"All input files are in CSV format. Running the GenX model requires a minimum of five input files. Additionally, the user may need to specify five more input files based on model configuration and type of scenarios of interest. Names of the input files and their functionality is given below. Note that names of the input files are case sensitive.","category":"page"},{"location":"data-documentation.html#Table-2:-Summary-of-the-input-files-1","page":"GenX Data","title":"Table 2: Summary of the input files","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"","category":"page"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"Column Name Description\nMandatory Files \nFuels_data.csv Specify fuel type, CO2 emissions intensity, and time-series of fuel prices.\nNetwork.csv Specify network topology, transmission fixed costs, capacity and loss parameters.\nLoad_data.csv Specify time-series of load profiles for each model zone, weights for each time step, load shedding costs, and optional time domain reduction parameters.\nGenerators_variability.csv Specify time-series of capacity factor/availability for each resource.\nGenerators_data.csv Specify cost and performance data for generation, storage and demand flexibility resources.\nSettings-specific Files \nReserves.csv Specify operational reserve requirements as a function of load and renewables generation and penalty for not meeting these requirements.\nEnergy_share_requirement.csv Specify regional renewable portfolio standard and clean energy standard style policies requiring minimum energy generation from qualifying resources.\nCO2_cap.csv Specify regional CO2 emission limits.\nCapacity_reserve_margin.csv Specify regional capacity reserve margin requirements.\nMinimum_capacity_requirement.csv.csv Specify regional minimum technology capacity deployment requirements.","category":"page"},{"location":"data-documentation.html#.1-Mandatory-input-data-1","page":"GenX Data","title":"2.1 Mandatory input data","text":"","category":"section"},{"location":"data-documentation.html#.1.1-Fuels_data.csv-1","page":"GenX Data","title":"2.1.1 Fuels_data.csv","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"• First row: names of all fuels used in the model instance which should match the labels used in Fuel column in the Generators_data.csv file. For renewable resources or other resources that do not consume a fuel, the name of the fuel is none.","category":"page"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"• Second row: The second row specifies the CO2 emissions intensity of each fuel in tons/MMBtu (million British thermal units). Note that by convention, tons correspond to metric tonnes and not short tons (although as long as the user is internally consistent in their application of units, either can be used).","category":"page"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"• Remaining rows: Rest of the rows in this input file specify the time-series for prices for each fuel in /MMBtu. A constant price can be specified by entering the same value for all hours.","category":"page"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"** First column:** The first column in this file denotes, Time_index, represents the index of time steps in a model instance.","category":"page"},{"location":"data-documentation.html#.1.2-Network.csv-1","page":"GenX Data","title":"2.1.2 Network.csv","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"This input file contains input parameters related to: 1) definition of model zones (regions between which transmission flows are explicitly modeled) and 2) definition of transmission network topology, existing capacity, losses and reinforcement costs. The following table describe each of the mandatory parameter inputs need to be specified to run an instance of the model, along with comments for the model configurations when they are needed.","category":"page"},{"location":"data-documentation.html#Table-3:-Structure-of-the-Network.csv-file-1","page":"GenX Data","title":"Table 3: Structure of the Network.csv file","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"","category":"page"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"Column Name Description\nMandatory Columns \nNetwork_zones Specified as z* where * is a number of the zone.\nSettings-specific Columns \nMultiple zone model \nNetwork_Lines Numerical index for each network line/\nz* (Network map) Next n columns, one per zone, with column header in format of z* where * is the number of the zone. L rows, one for each network line (or interregional path), with a 1 in the column corresponding to the 'origin' zone and a -1 in the column corresponding to the 'destination' zone for each line. No more than one column may be marked as origin and one as destination for each line, or the model will not function correctly. Note that positive flows indicate flow from origin to destination zone; negative flows indicate flow from destination to origin zone.\nLine_Max_Flow_MW Existing capacity of the inter-regional transmission line.\nNetworkExpansion = 1 \nLine_Max_Reinforcement_MW Maximum allowable capacity addition to the existing transmission line.\nLine_Reinforcement_Cost_per_MWyr Cost of adding new capacity to the inter-regional transmission line.\nTrans_Loss_Segments = 1 \nLine_Loss_Percentage fractional transmission loss for each transmission line\nTrans_Loss_Segments > 1 \nOhms Line resistance in Ohms (used to calculate I^2R losses)\nkV Line voltage in kV (used to calculate I^2R losses)\nCapacityReserveMargin> 0 \nCapRes_* Eligibility of the transmission line for adding firm capacity to the capacity reserve margin constraint. * represents the number of the capacity reserve margin constraint.\n 1 = the transmission line is eligible for adding firm capacity to the region\n 0 = the transmission line is not eligible for adding firm capacity to the region\nDerateCapRes_* (0,1) value represents the derating of the firm transmission capacity for the capacity reserve margin constraint.\nCapResExcl_* (-1,1,0) = -1 if the designated direction of the transmission line is inbound to locational deliverability area (LDA) modeled by the capacity reserve margin constraint. = 1 if the designated direction of the transmission line is outbound from the LDA modeled by the capacity reserve margin constraint. Zero otherwise.","category":"page"},{"location":"data-documentation.html#.1.3-Load_data.csv-1","page":"GenX Data","title":"2.1.3 Load_data.csv","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"This file includes parameters to characterize model temporal resolution to approximate annual grid operations, electricity demand for each time step for each zone, and cost of load shedding. Note that GenX is designed to model hourly time steps. With some care and effort, finer (e.g. 15 minute) or courser (e.g. 2 hour) time steps can be modeled so long as all time-related parameters are scaled appropriately (e.g. time period weights, heat rates, ramp rates and minimum up and down times for generators, variable costs, etc).","category":"page"},{"location":"data-documentation.html#Table-4:-Structure-of-the-Load_data.csv-file-1","page":"GenX Data","title":"Table 4: Structure of the Load_data.csv file","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"","category":"page"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"Column Name Description\nMandatory Columns \nVoll Value of lost load in $/MWh.\nDemand_Segment Number of demand curtailment/lost load segments with different cost and capacity of curtailable demand for each segment. User-specified demand segments. Integer values starting with 1 in the first row. Additional segements added in subsequent rows.\nCost_of_Demand_Curtailment_per_MW Cost of non-served energy/demand curtailment (for each segment), reported as a fraction of value of lost load. If Demand_Segment = 1, then this parameter is a scalar and equal to one. In general this parameter is a vector of length equal to the length of Demand_Segment.\nMax_Demand_Curtailment Maximum time-dependent demand curtailable in each segment, reported as % of the demand in each zone and each period. If Demand_Segment = 1, then this parameter is a scalar and equal to one. In general this parameter is a vector of length given by length of Demand_segment.\nTime_Index Index defining time step in the model.\nLoad_MW_z* Load profile of a zone z* in MW; if multiple zones, this parameter will be a matrix with columns equal to number of zones (each column named appropriate zone number appended to parameter) and rows equal to number of time periods of grid operations being modeled.\nSettings-specific Columns \nOperationWrapping = 1 \nRep_Periods Number of representative periods (e.g. weeks, days) that are modeled to approximate annual grid operations.\nTimesteps_per_Rep_Period Number of timesteps per representative period (e.g. 168 if period is set as a week using hour-long time steps).\nSub_Weights Number of annual time steps (e.g. hours) represented by a given representative period. Length of this column is equal to the number of representative periods. Sum of the elements of this column should be equal to the total number of time steps in a model time horizon, defined in parameterWeightTotal (e.g. 8760 hours if modeling 365 days or 8736 if modeling 52 weeks).","category":"page"},{"location":"data-documentation.html#.1.4-Generator_variability.csv-1","page":"GenX Data","title":"2.1.4 Generator_variability.csv","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"This file contains the time-series of capacity factors / availability of each resource included in the Generators_data.csv file for each time step (e.g. hour) modeled.","category":"page"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"• first column: The first column contains the time index of each row (starting in the second row) from 1 to N.","category":"page"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"• Second column onwards: Resources are listed from the second column onward with headers matching each resource name in the Generators_data.csv file in any order. The availability for each resource at each time step is defined as a fraction of installed capacity and should be between 0 and 1. Note that for this reason, resource names specified in Generators_data.csv must be unique. Note that for Hydro reservoir resources (i.e. HYDRO = 1 in the Generators_data.csv), values in this file correspond to inflows (in MWhs) to the hydro reservoir as a fraction of installed power capacity, rather than hourly capacity factor.","category":"page"},{"location":"data-documentation.html#.1.5-Generators_data.csv-1","page":"GenX Data","title":"2.1.5 Generators_data.csv","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"This file contains cost and performance parameters for various generators and other resources (storage, flexible demand, etc) included in the model formulation.","category":"page"},{"location":"data-documentation.html#Table-5:-Mandatory-columns-in-the-Generators_data.csv-file-1","page":"GenX Data","title":"Table 5: Mandatory columns in the Generators_data.csv file","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"","category":"page"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"Column Name Description\nResource This column contains unique names of resources available to the model. Resources can include generators, storage, and flexible or time shiftable demand/loads.\nZone Integer representing zone number where the resource is located.\nTechnology type flags \nNew_Build {-1, 0, 1}, Flag for resource (storage, generation) eligibility for capacity expansion.\n New_Build = 1: eligible for capacity expansion and retirement.\n New_Build = 0: not eligible for capacity expansion, eligible for retirement.\n New_Build = -1: not eligible for capacity expansion or retirement.\nTHERM {0, 1, 2}, Flag to indicate membership in set of thermal resources (e.g. nuclear, combined heat and power, natural gas combined cycle, coal power plant)\n THERM = 0: Not part of set (default)\n THERM = 1: If the power plant relies on thermal energy input and subject unit commitment constraints/decisions if UCommit >=1 (e.g. cycling decisions/costs/constraints).\n THERM = 2: If the power plant relies on thermal energy input and is subject to simplified economic dispatch constraints (ramping limits and minimum output level but no cycling decisions/costs/constraints).\nCap_size Size (MW) of a single generating unit. This is used only for resources with integer unit commitment (THERM = 1) - not relevant for other resources.\nVRE {0, 1}, Flag to indicate membership in set of dispatchable (or curtailable) variable renewable energy resources (onshore wind, offshore wind, utility-scale solar PV, and distributed solar PV subject to dispatch signals).\n VRE = 0: Not part of set (default)\n VRE = 1: Dispatchable variable renewable energy (VRE) resources.\nNum_VRE_bins Number of resource availability profiles considered for each VRE resource per zone. This parameter is used to decide the number of capacity investment decision variables related to a single variable renewable energy technology in each zone.\n Num_VRE_bins = 1: using a single resource availability profile per technology per zone. 1 capacity investment decision variable and 1 generator RID tracking technology power output (and in each zone).\n Num_VRE_bins > 1: using multiple resource availability profiles per technology per zone. Num_VRE_bins capacity investment decision variables and 1 generator RID used to define technology power output at each time step (and in each zone). Example: Suppose we are modeling 3 bins of wind profiles for each zone. Then include 3 rows with wind resource names as Wind_1, Wind_2, and Wind_3 and a corresponding increasing sequence of RIDs. Set Num_VRE_bins for the generator with smallest RID, Wind_1, to be 3 and set Num_VRE_bins for the other rows corresponding to Wind_2 and Wind_3, to be zero. By setting Num_VRE_bins for Wind_2 and Wind_3, the model eliminates the power outputs variables for these generators. The power output from the technology across all bins is reported in the power output variable for the first generator. This allows for multiple bins without significantly increasing number of model variables (adding each bin only adds one new capacity variable and no operational variables). See documentation for '''curtailablevariablerenewable()''' for more.\nMUST_RUN {0, 1}, Flag to indicate membership in set of must-run plants (could be used to model behind-the-meter PV not subject to dispatch signals/curtailment, run-of-river hydro that cannot spill water, must-run or self-committed thermal generators, etc).\n MUST_RUN = 0: Not part of set (default)\n MUST_RUN = 1: Must-run (non-dispatchable) resources.\nSTOR {0, 1, 2}, Flag to indicate membership in set of storage resources and designate which type of storage resource formulation to employ.\n STOR = 0: Not part of set (default)\n STOR = 1: Discharging power capacity and energy capacity are the investment decision variables; symmetric charge/discharge power capacity with charging capacity equal to discharging capacity (e.g. lithium-ion battery storage).\n STOR = 2: Discharging, charging power capacity and energy capacity are investment variables; asymmetric charge and discharge capacities using distinct processes (e.g. hydrogen electrolysis, storage, and conversion to power using fuel cell or combustion turbine).\nFLEX {0, 1}, Flag to indicate membership in set of flexible demand-side resources (e.g. scheduleable or time shiftable loads such as automated EV charging, smart thermostat systems, irrigating pumping loads etc).\n FLEX = 0: Not part of set (default)\n FLEX = 1: Flexible demand resource.\nHYDRO {0, 1}, Flag to indicate membership in set of reservoir hydro resources.\n HYDRO = 0: Not part of set (default)\n HYDRO = 1: Hydropower with reservoir modeling, including inflows, spillage, ramp rate limits and minimum operating level and efficiency loss associated with discharging. Reservoir capacity can be represented as a ratio or energy to power. This type of plant cannot charge from grid.\nExisting technology capacity \nExisting_Cap_MW The existing capacity of a power plant in MW.\nExisting_Cap_MWh The existing capacity of storage in MWh where STOR = 1 or STOR = 2.\nExisting_Charge_Cap_MW The existing charging capacity for resources where STOR = 2.\nCapacity/Energy requirements \nMax_Cap_MW -1 (default) – no limit on maximum discharge capacity of the resource. If non-negative, represents maximum allowed discharge capacity (in MW) of the resource.\nMax_Cap_MWh -1 (default) – no limit on maximum energy capacity of the resource. If non-negative, represents maximum allowed energy capacity (in MWh) of the resource with STOR = 1 or STOR = 2.\nMax_Charge_Cap_MW -1 (default) – no limit on maximum charge capacity of the resource. If non-negative, represents maximum allowed charge capacity (in MW) of the resource with STOR = 2.\nMin_Cap_MW -1 (default) – no limit on minimum discharge capacity of the resource. If non-negative, represents minimum allowed discharge capacity (in MW) of the resource.\nMin_Cap_MWh -1 (default) – no limit on minimum energy capacity of the resource. If non-negative, represents minimum allowed energy capacity (in MWh) of the resource with STOR = 1 or STOR = 2.\nMin_Cap_MW -1 (default) – no limit on minimum charge capacity of the resource. If non-negative, represents minimum allowed charge capacity (in MW) of the resource with STOR = 2.\nCost parameters \nInv_Cost_per_MWyr Annualized capacity investment cost of a technology ($/MW/year).\nInv_Cost_per_MWhyr Annualized investment cost of the energy capacity for a storage technology ($/MW/year), applicable to either STOR = 1 or STOR = 2.\nInv_Cost_Charge_per_MWyr Annualized capacity investment cost for the charging portion of a storage technology with STOR = 2 ($/MW/year).\nFixed_OM_Cost_per_MWy Fixed operations and maintenance cost of a technology ($/MW/year).\nFixed_OM_Cost_per_MWhyr Fixed operations and maintenance cost of the energy component of a storage technology ($/MWh/year).\nFixed_OM_Cost_charge_per_MWyr Fixed operations and maintenance cost of the charging component of a storage technology of type STOR= 2.\nVar_OM_Cost_per_MWh Variable operations and maintenance cost of a technology ($/MWh).\nVar_OM_Cost_per_MWhIn Variable operations and maintenance cost of the charging aspect of a storage technology with STOR = 2, or variable operations and maintenance costs associated with flexible demand deferral with FLEX = 1. Otherwise 0 ($/MWh).\nTechnical performance parameters \nHeat_Rate_MMBTU_per_MWh Heat rate of a generator or MMBtu of fuel consumed per MWh of electricity generated for export (net of on-site house loads). The heat rate is the inverse of the efficiency: a lower heat rate is better. Should be consistent with fuel prices in terms of reporting on higher heating value (HHV) or lower heating value (LHV) basis.\nFuel Fuel needed for a generator. The names should match with the ones in the Fuels_data.csv.\nSelf_Disch [0,1], The power loss of storage technologies per hour (fraction loss per hour)- only applies to storage techs.\nMin_Power [0,1], The minimum generation level for a unit as a fraction of total capacity. This value cannot be higher than the smallest time-dependent CF value for a resource in Generators_variability.csv. Applies to thermal plants, and reservoir hydro resource (HYDRO = 1).\nRamp_Up_Percentage [0,1], Maximum increase in power output from between two periods (typically hours), reported as a fraction of nameplate capacity. Applies to thermal plants, and reservoir hydro resource (HYDRO = 1).\nRamp_Dn_Percentage [0,1], Maximum decrease in power output from between two periods (typically hours), reported as a fraction of nameplate capacity. Applies to thermal plants, and reservoir hydro resource (HYDRO = 1).\nEff_Up [0,1], Efficiency of charging storage – applies to storage technologies (all STOR types).\nEff_Down [0,1], Efficiency of discharging storage – applies to storage technologies (all STOR types).\nHydro_Energy_to_Power_Ratio The rated number of hours of reservoir hydro storage at peak discharge power output. Applies to HYDRO = 1 (hours).\nMin_Duration Specifies the minimum ratio of installed energy to discharged power capacity that can be installed. Applies to STOR types 1 and 2 (hours).\nMax_Duration Specifies the maximum ratio of installed energy to discharged power capacity that can be installed. Applies to STOR types 1 and 2 (hours).\nMax_Demand_Flex_Delay Maximum number of hours that demand can be deferred or delayed. Applies to resources with FLEX type 1 (hours).\nMax_Demand_Flex_Advance Maximum number of hours that demand can be scheduled in advance of the original schedule. Applies to resources with FLEX type 1 (hours).\nDemand_Flex_Energy_Eff [0,1], Energy efficiency associated with time shifting demand. Represents energy losses due to time shifting (or 'snap back' effect of higher consumption due to delay in use) that may apply to some forms of flexible demand. Applies to resources with FLEX type 1 (hours). For example, one may need to pre-cool a building more than normal to advance demand.","category":"page"},{"location":"data-documentation.html#Table-6:-Settings-specific-columns-in-the-Generators_data.csv-file-1","page":"GenX Data","title":"Table 6: Settings-specific columns in the Generators_data.csv file","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"","category":"page"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"Column Name Description\nUCommit >= 1 The following settings apply only to thermal plants with unit commitment constraints (THERM = 1).\nUp_Time Minimum amount of time a resource has to stay in the committed state.\nDown_Time Minimum amount of time a resource has to remain in the shutdown state.\nStart_Cost_per_MW Cost per MW of nameplate capacity to start a generator ($/MW per start). Multiplied by the number of generation units (each with a pre-specified nameplate capacity) that is turned on.\nStart_Fuel_MMBTU_per_MW Startup fuel use per MW of nameplate capacity of each generator (MMBtu/MW per start).\nReserves = 1 The following settings apply to thermal, dispatchable VRE, hydro and storage resources\nReg_Cost Cost of providing regulation reserves ($/MW per time step/hour).\nRsv_Cost Cost of providing upwards spinning or contingency reserves ($/MW per time step/hour).\nReg_Max [0,1], Fraction of nameplate capacity that can committed to provided regulation reserves. .\nRsv_Max [0,1], Fraction of nameplate capacity that can committed to provided upwards spinning or contingency reserves.\nEnergyShareRequirement> 0 \nESR_* Flag to indicate which resources are considered for the Energy Share Requirement constraint.\n 1- included\n 0- excluded\nCapacityReserveMargin> 0 \nCapRes_* [0,1], Fraction of the resource capacity eligible for contributing to the capacity reserve margin constraint (e.g. derate factor).\nModelingToGenerateAlternatives = 1 \nMGA Eligibility of the technology for Modeling To Generate Alternative (MGA) run.\n 1 = Technology is available for the MGA run.\n 0 = Technology is unavailable for the MGA run (e.g. storage technologies).\nResource_Type For the MGA run, we categorize all the resources in a few resource types. We then find maximally different generation portfolio based on these resource types. For example, existing solar and new solar resources could be represented by a resource type names Solar. Categorization of resources into resource types is user dependent.\nMinCapReq = 1 \nMinCapTag_* Eligibility of resources to participate in Minimum Technology Carveout constraint. * corresponds to the ith row of the file Minimum_capacity_requirement.csv.csv.","category":"page"},{"location":"data-documentation.html#.2-Optional-inputs-files-1","page":"GenX Data","title":"2.2 Optional inputs files","text":"","category":"section"},{"location":"data-documentation.html#.2.1-Online-Time-domain-reduction-1","page":"GenX Data","title":"2.2.1 Online Time-domain reduction","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"Modeling grid operations for each hour of the year can be computationally expensive for models with many zones and resources. Time-domain reduction is often employed in capacity expansion models as a way to balance model spatial and temporal resolution as well as representation of dispatch, while ensuring reasonable computational times. GenX allows the option of performing time-domain reduction on the user supplied time-series input data to produce a representative time series at the desired level of temporal resolution. The below table summarizes the list of parameters to be specified by the user to perform the time domain reduction implemented in GenX. These parameters are passed to GenX via the YAML file time_domain_reduction_settings.yml.","category":"page"},{"location":"data-documentation.html#Table-7:-Structure-of-the-Load_data.csv-file-1","page":"GenX Data","title":"Table 7: Structure of the Load_data.csv file","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"","category":"page"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"Column Name Description\nTimeDomainReduction = 1 \nTimesteps_per_period The number of timesteps (e.g., hours) in each representative period (i.e. 168 for weeks, 24 for days, 72 for three-day periods, etc).\nUseExtremePeriods 1 = Include outliers (by performance or load/resource extreme) as their own representative extreme periods. This setting automatically includes periods based on criteria outlined in the dictionary ExtremePeriods. Extreme periods can be selected based on following criteria applied to load profiles or solar and wind capacity factors profiles, at either the zonal or system level. A) absolute (timestep with min/max value) statistic (minimum, maximum) and B) integral (period with min/max summed value) statistic (minimum, maximum). For example, the user could want the hour with the most load across the whole system to be included among the extreme periods. They would select Load, System, Absolute, and Max.\n 0 = Do not include extreme periods.\nExtremePeriods If UseExtremePeriods = 1, use this dictionary to select which types of extreme periods to use. Select by profile type (Load, PV, or Wind), geography (Zone or System), grouping by timestep or by period (Absolute or Integral), and statistic (Maximum or Minimum).\nClusterMethod Either kmeans or kmedoids, the method used to cluster periods and determine each time step's representative period.\nScalingMethod Either ‘N' or ‘S', the decision to normalize ([0,1]) or standardize (mean 0, variance 1) the input data prior to clustering.\nMinPeriods The minimum number of representative periods used to represent the input data. If using UseExtremePeriods, this must be greater or equal to the number of selected extreme periods. If IterativelyAddPeriods is off, this will be the total number of representative periods.\nMaxPeriods The maximum number of representative periods - both clustered and extreme - that may be used to represent the input data.\nIterativelyAddPeriods 1 = Add representative periods until the error threshold between input data and represented data is met or the maximum number of representative periods is reached.\n 0 = Use only the minimum number of representative periods. This minimum value includes the selected extreme periods if UseExtremePeriods is on.\nThreshold Iterative period addition will end if the period farthest from its representative period (as measured using Euclidean distance) is within this percentage of the total possible error (for normalization) or 95% of the total possible error (± 2 σ for standardization). E.g., for a threshold of 0.01, each period must be within 1% of the spread of possible error before the clustering iterations will terminate (or until the maximum is reached).\nIterateMethod Either ‘cluster' (Default) or ‘extreme', whether to increment the number of clusters to the kmeans/kmedoids method or to set aside the worst-fitting periods as a new extreme periods.\nnReps Default 200, the number of kmeans/kmedoids repetitions at the same setting.\nLoadWeight Default 1, a multiplier on load columns to optionally prioritize better fits for load profiles over resource capacity factor or fuel price profiles.\nWeightTotal Default 8760, the sum to which the relative weights of representative periods will be scaled.\nClusterFuelPrices Either 1 or 0, whether or not to use the fuel price time series in Fuels_data.csv in the clustering process. If 'no', this function will still write Fuels_data.csv in the TimeDomainReductionFolder with reshaped fuel prices based on the number and size of the representative periods but will not use the fuel price time series for selection of representative periods.","category":"page"},{"location":"data-documentation.html#.2.2-Reserves.csv-1","page":"GenX Data","title":"2.2.2 Reserves.csv","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"This file includes parameter inputs needed to model time-dependent procurement of regulation and spinning reserves. This file is needed if Reserves flag is activated in the YAML file GenX_settings.yml.","category":"page"},{"location":"data-documentation.html#Table-8:-Structure-of-the-Reserves.csv-file-1","page":"GenX Data","title":"Table 8: Structure of the Reserves.csv file","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"","category":"page"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"Column Name Description\nReg_Req_Percent_Load [0,1], Regulation requirement as a percent of time-dependent load; here load is the total across all model zones.\nReg_Req_Percent_VRE [0,1], Regulation requirement as a percent of time-dependent wind and solar generation (summed across all model zones).\nRsv_Req_Percent_Load [0,1], Spinning up or contingency reserve requirement as a percent of time-dependent load (which is summed across all zones).\nRsv_Req_Percent_VRE [0,1], Spinning up or contingency reserve requirement as a percent of time-dependent wind and solar generation (which is summed across all zones).\nUnmet_Rsv_Penalty_Dollar_per_MW Penalty for not meeting time-dependent spinning reserve requirement ($/MW per time step).\nDynamic_Contingency Flags to include capacity (generation or transmission) contingency to be added to the spinning reserve requirement.\nDynamic_Contingency = 1: contingency set to be equal to largest installed thermal unit (only applied when UCommit = 1).\n = 2: contingency set to be equal to largest committed thermal unit each time period (only applied when UCommit = 1).\nStatic_Contingency_MW A fixed static contingency in MW added to reserve requirement. Applied when UCommit = 1 and DynamicContingency = 0, or when UCommit = 2. Contingency term not included in operating reserve requirement when this value is set to 0 and DynamicContingency is not active.","category":"page"},{"location":"data-documentation.html#.2.3-Energy_share_requirement.csv-1","page":"GenX Data","title":"2.2.3 Energy_share_requirement.csv","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"This file contains inputs specifying minimum energy share requirement policies, such as Renewable Portfolio Standard (RPS) or Clean Energy Standard (CES) policies. This file is needed if parameter EnergyShareRequirement has a non-zero value in the YAML file GenX_settings.yml.","category":"page"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"Note: this file should use the same region name as specified in the Generators_data.csv file.","category":"page"},{"location":"data-documentation.html#Table-9:-Structure-of-the-Energy_share_requirement.csv-file-1","page":"GenX Data","title":"Table 9: Structure of the Energy_share_requirement.csv file","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"","category":"page"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"Column Name Description\nRegion_description Region name\nNetwork_zones zone number represented as z*\nESR_* [0,1], Energy share requirements as a share of zonal demand (calculated on an annual basis). * represents the number of the ESR constraint, given by the number of ESR_* columns in the Energy_share_requirement.csv file.","category":"page"},{"location":"data-documentation.html#.2.4-CO2_cap.csv-1","page":"GenX Data","title":"2.2.4 CO2_cap.csv","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"This file contains inputs specifying CO2 emission limits policies (e.g. emissions cap and permit trading programs). This file is needed if CO2Cap flag is activated in the YAML file GenX_settings.yml. CO2Cap flag set to 1 represents mass-based (tCO2 ) emission target. CO2Cap flag set to 2 is specified when emission target is given in terms of rate (tCO2/MWh) and is based on total demand met. CO2Cap flag set to 3 is specified when emission target is given in terms of rate (tCO2 /MWh) and is based on total generation.","category":"page"},{"location":"data-documentation.html#Table-10:-Structure-of-the-CO2_cap.csv-file-1","page":"GenX Data","title":"Table 10: Structure of the CO2_cap.csv file","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"","category":"page"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"Column Name Description\nRegion_description Region name\nNetwork_zones zone number represented as z*\nCO2\\Cap_Zone* If a zone is eligible for the emission limit constraint, then this column is set to 1, else 0.\nCO2\\Max_tons_MWh* Emission limit in terms of rate\nCO2\\Max_Mtons* Emission limit in absolute values, in Million of tons\n where in the above inputs, * represents the number of the emission limit constraints. For example, if the model has 2 emission limit constraints applied separately for 2 zones, the above CSV file will have 2 columns for specifying emission limit in terms on rate: CO2\\Max_tons_MWh_1 and CO2\\Max_tons_MWh_2.","category":"page"},{"location":"data-documentation.html#.2.5-Capacity_reserve_margin.csv-1","page":"GenX Data","title":"2.2.5 Capacity_reserve_margin.csv","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"This file contains the regional capacity reserve margin requirements. This file is needed if parameter CapacityReserveMargin has a non-zero value in the YAML file GenX_settings.yml.","category":"page"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"Note: this file should use the same region name as specified in the Generators_data.csv file","category":"page"},{"location":"data-documentation.html#Table-11:-Structure-of-the-Capacity_reserve_margin.csv-file-1","page":"GenX Data","title":"Table 11: Structure of the Capacity_reserve_margin.csv file","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"","category":"page"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"Column Name Description\nRegion_description Region name\nNetwork_zones zone number represented as z*\nCapRes_* [0,1], Capacity reserve margin requirements of a zone, reported as a fraction of demand","category":"page"},{"location":"data-documentation.html#.2.6-Minimum_capacity_requirement.csv.csv-1","page":"GenX Data","title":"2.2.6 Minimum_capacity_requirement.csv.csv","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"This file contains the minimum capacity carve-out requirement to be imposed (e.g. a storage capacity mandate or offshore wind capacity mandate). This file is needed if parameter MinCapReq flag has a non-zero value in the YAML file GenX_settings.yml.","category":"page"},{"location":"data-documentation.html#Table-12:-Structure-of-the-Minimum_capacity_requirement.csv.csv-file-1","page":"GenX Data","title":"Table 12: Structure of the Minimum_capacity_requirement.csv.csv file","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"","category":"page"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"Column Name Description\nMinCapReqConstraint Index of the minimum capacity carve-out requirement.\nConstraint_Description Names of minimum capacity carve-out constraints; not to be read by model, but used as a helpful notation to the model user.\nMin_MW minimum capacity requirement [MW]","category":"page"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"Some of the columns specified in the input files in Section 2.2 and 2.1 are not used in the GenX model formulation. These columns are necessary for interpreting the model outputs and used in the output module of the GenX.","category":"page"},{"location":"data-documentation.html#.2.7-Rand_mga_objective_coefficients.csv-1","page":"GenX Data","title":"2.2.7 Rand_mga_objective_coefficients.csv","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"This file is required while using modeling to generate alternatives (MGA) algorithm. The number of columns in this csv file is equal to one plus the number of model zones. Number of rows for each iteration is equal to the number of distinct elements in the Resource_Type column in the Generators_data.csv file. Elements of this file are used as random objective function coefficients fo the MGA algorithm.","category":"page"},{"location":"data-documentation.html#Table-12:-Structure-of-the-Minimum_capacity_requirement.csv.csv-file-2","page":"GenX Data","title":"Table 12: Structure of the Minimum_capacity_requirement.csv.csv file","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"","category":"page"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"Column Name Description\nV* * represents the region number. This column has random integers between -100 and 100.\nIter MGA iteration number.","category":"page"},{"location":"data-documentation.html#Outputs-1","page":"GenX Data","title":"3 Outputs","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"The table below summarizes the units of each output variable reported as part of the various CSV files produced after each model run. The reported units are also provided. If a result file includes time-dependent values, the value will not include the hour weight in it. An annual sum (\"AnnualSum\") column/row will be provided whenever it is possible (e.g., emissions.csv).","category":"page"},{"location":"data-documentation.html#.1-Default-output-files-1","page":"GenX Data","title":"3.1 Default output files","text":"","category":"section"},{"location":"data-documentation.html#.1.1-capacity.csv-1","page":"GenX Data","title":"3.1.1 capacity.csv","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"Reports optimal values of investment variables (except StartCap, which is an input)","category":"page"},{"location":"data-documentation.html#Table-14:-Structure-of-the-capacity.csv-file-1","page":"GenX Data","title":"Table 14: Structure of the capacity.csv file","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"","category":"page"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"Output Description Units\nStartCap Initial power capacity of each resource type in each zone; this is an input MW\nRetCap Retired power capacity of each resource type in each zone MW\nNewCap Installed capacity of each resource type in each zone MW\nEndCap Total power capacity of each resource type in each zone MW\nStartEnergyCap Initial energy capacity of each resource type in each zone; this is an input and applies only to storage tech. MWh\nRetEnergyCap Retired energy capacity of each resource type in each zone; applies only to storage tech. MWh\nNewEnergyCap Installed energy capacity of each resource type in each zone; applies only to storage tech. MWh\nEndEnergyCap Total installed energy capacity of each resource type in each zone; applies only to storage tech. MWh\nStartChargeCap Initial charging power capacity of STOR = 2 resource type in each zone; this is an input MW\nRetChargeCap Retired charging power capacity of STOR = 2 resource type in each zone MW\nNewChargeCap Installed charging capacity of each resource type in each zone MW\nEndChargeCap Total charging power capacity of each resource type in each zone MW","category":"page"},{"location":"data-documentation.html#.1.2-costs.csv-1","page":"GenX Data","title":"3.1.2 costs.csv","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"Reports optimal objective function value and contribution of each term by zone.","category":"page"},{"location":"data-documentation.html#Table-15:-Structure-of-the-costs.csv-file-1","page":"GenX Data","title":"Table 15: Structure of the costs.csv file","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"","category":"page"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"Output Description Units\ncTotal Total objective function value $\ncFix Total annualized investment and fixed operating & maintainenance (FOM) costs associated with all resources $\ncVar Total annual variable cost associated with all resources; includes fuel costs for thermal plants $\ncNSE Total annual cost of non-served energy $\ncStart Total annual cost of start-up of thermal power plants $\ncUnmetRsv Total annual cost of not meeting time-dependent operating reserve (spinning) requirements $\ncNetworkExp Total cost of network expansion $\ncEmissionsRevenue Total and zonal emissions revenue $\ncEmissionsCost Total an zonal emissions cost $","category":"page"},{"location":"data-documentation.html#.1.3-emissions.csv-1","page":"GenX Data","title":"3.1.3 emissions.csv","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"Reports CO2 emissions by zone at each hour; an annual sum row will be provided. If any emission cap is present, emission prices each zone faced by each cap will be copied on top of this table with the following strucutre.","category":"page"},{"location":"data-documentation.html#Table-16:-Structure-of-emission-prices-in-the-emissions.csv-file-1","page":"GenX Data","title":"Table 16: Structure of emission prices in the emissions.csv file","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"","category":"page"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"Output Description Units\nCO2\\price Marginal CO2 abatement cost associated with constraint on maximum annual CO2 emissions; will be same across zones if CO2 emissions constraint is applied for the entire region and not zone-wise $/ tonne CO2.","category":"page"},{"location":"data-documentation.html#.1.4-nse.csv-1","page":"GenX Data","title":"3.1.4 nse.csv","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"Reports non-served energy for every model zone, time step and cost-segment.","category":"page"},{"location":"data-documentation.html#.1.5-power.csv-1","page":"GenX Data","title":"3.1.5 power.csv","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"Reports power discharged by each resource (generation, storage, demand response) in each model time step.","category":"page"},{"location":"data-documentation.html#.1.6-reliability.csv-1","page":"GenX Data","title":"3.1.6 reliability.csv","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"Reports dual variable of maximum non-served energy constraint (shadow price of reliability constraint) for each model zone and time step.","category":"page"},{"location":"data-documentation.html#.1.7-prices.csv-1","page":"GenX Data","title":"3.1.7 prices.csv","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"Reports marginal electricity price for each model zone and time step. Marginal electricity price is equal to the dual variable of the load balance constraint. If GenX is configured as a mixed integer linear program, then this output is only generated if WriteShadowPrices flag is activated. If configured as a linear program (i.e. linearized unit commitment or economic dispatch) then output automatically available.","category":"page"},{"location":"data-documentation.html#.1.8-status.csv-1","page":"GenX Data","title":"3.1.8 status.csv","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"Reports computational performance of the model and objective function related information.","category":"page"},{"location":"data-documentation.html#Table-17:-Structure-of-the-status.csv-file-1","page":"GenX Data","title":"Table 17: Structure of the status.csv file","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"","category":"page"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"Output Description Units\nStatus termination criteria (optimal, timelimit etc.). \nsolve Solve time including time for pre-solve seconds\nObjval Optimal objective function value $\nObjbound Best objective lower bound $\nFinalMIPGap Optimality gap at termination in case of a mixed-integer linear program (MIP gap); when using Gurobi, the lower bound and MIP gap is reported excluding constant terms (E.g. fixed cost of existing generators that cannot be retired) in the objective function and hence may not be directly usable. Fraction","category":"page"},{"location":"data-documentation.html#.1.9-NetRevenue.csv-1","page":"GenX Data","title":"3.1.9 NetRevenue.csv","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"This file summarizes the cost, revenue and profit for each generattion technology for each region.","category":"page"},{"location":"data-documentation.html#Table-18:-Stucture-of-the-NetRevenue.csv-file-1","page":"GenX Data","title":"Table 18: Stucture of the NetRevenue.csv file","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"","category":"page"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"Output Description Units\nFixed_OM_cost_MW Fixed Operation and Maintenance cost of the MW capacity. $\nFixed_OM_cost_MWh Fixed Operation and Maintenance cost of the MWh capacity. Only applicable to energy storage. $\nVar_OM_cost_out Variable Operation and Maintenance cost of the power generation or discharge. $\nVar_OM_cost_in Variable Operation and Maintenance cost of the power charge/pumping. Only applicable to energy storage. $\nFuel_cost Fuel cost of the power generation. Only applicable to generation that burns fuel. $\nCharge_cost Cost of charging power (due to the payment for electricity) Only applicable to energy storage. $\nEmissionsCost Cost of buying emission credit. $\nStartCost Cost of generator start-up. $\nInv_cost_MW Cost of building MW capacity. $\nInv_cost_MWh Cost of building MWh capacity. $\nEnergyRevenue Revenue of generating power. $\nSubsidyRevenue Revenue of Min_Cap subsidy. $\nReserveMarginRevenue Revenue earned from capacity reserve margin constraints. $\nESRRevenue Revenue selling renewable/clean energy credits. $\nRevenue Total Revenue. $\nCost Total Cost. $\nProfit Revenue minus Cost. $","category":"page"},{"location":"data-documentation.html#.2-Settings-specific-outputs-1","page":"GenX Data","title":"3.2 Settings-specific outputs","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"This section includes the output files that GenX will print if corresponding function is specified in the Settings.","category":"page"},{"location":"data-documentation.html#.2.1-CapacityValue.csv-1","page":"GenX Data","title":"3.2.1 CapacityValue.csv","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"This file includes the time-dependent capacity value calculated for each generator. GenX will print this file only if the capacity reserve margin constraints are modeled through the setting file. Each row of the file (excluding the header) corresponds to a generator specified in the inputs. Each column starting from the t1 to the second last one stores the result of capacity obligation provided in each hour divided by the total capacity. Thus the number is unitless. If the capacity margin reserve is not binding for one hour, GenX will return zero. The last column specified the name of the corresponding capacity reserve constraint. Note that, if the user calculates the hour-weight-averaged capacity value for each generator using data of the binding hours, the result is what RTO/ISO call capacity credit.","category":"page"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"<!–-","category":"page"},{"location":"data-documentation.html#.2.2-ExportRevenue.csv-1","page":"GenX Data","title":"3.2.2 ExportRevenue.csv","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"This file includes the export revenue in $ of each zone. GenX will print this file only when a network is present and Locational Marginal Price (LMP) data is available to the GenX. The Total row includes the time-step-weighted summation of the time-dependent values shown below. For each time-step, the export revenue is calculated as the net outbound powerflow multiplied by the LMP. It is noteworthy that this export revenue is already part of the generation revenue, and the user should not double count.","category":"page"},{"location":"data-documentation.html#.2.3-Importcost.csv-1","page":"GenX Data","title":"3.2.3 Importcost.csv","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"This file includes the import cost in $ of each zone. GenX will print this file only when a network is present and Locational Marginal Price (LMP) data is available to the GenX. The Total row includes the time-step -weighted summation of the time-dependent values shown below. For each time step, the import cost is calculated as the net inbound powerflow multiplied by the LMP. It is noteworthy that this import cost is already part of the load payment, and the user should not double count. –->","category":"page"},{"location":"data-documentation.html#.2.2-EnergyRevenue.csv-1","page":"GenX Data","title":"3.2.2 EnergyRevenue.csv","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"This file includes the energy revenue in $ earned by each generator through injecting into the grid. Only annual sum values are available.","category":"page"},{"location":"data-documentation.html#.2.3-ChargingCost.csv-1","page":"GenX Data","title":"3.2.3 ChargingCost.csv","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"This file includes the charging cost  in $ of earned by each generator through withdrawing from the grid. Only annual sum values are available.","category":"page"},{"location":"data-documentation.html#.2.4-ReserveMargin.csv-1","page":"GenX Data","title":"3.2.4 ReserveMargin.csv","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"This file includes the shadow prices of the capacity reserve margin constraints. GenX will print this file only when capacity reserve margin is modeled and the shadow price can be obtained form the solver, as described earlier. Each row (except the header) corresponds to a capacity reserve margin constraint, and each column corresponds to an time step. As a reminder, GenX models the capacity reserve margin (aka capacity market) at the time-dependent level, and each constraint either stands for an overall market or a locality constraint.","category":"page"},{"location":"data-documentation.html#.2.5-ReserveMarginRevenue.csv-1","page":"GenX Data","title":"3.2.5 ReserveMarginRevenue.csv","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"This file includes the capacity revenue earned by each generator listed in the input file. GenX will print this file only when capacity reserve margin is modeled and the shadow price can be obtained form the solver. Each row corresponds to a generator, and each column starting from the 6th to the second last is the total revenue from each capacity reserve margin constraint. The revenue is calculated as the capacity contribution of each time steps multiplied by the shadow price, and then the sum is taken over all modeled time steps. The last column is the total revenue received from all capacity reserve margin constraints. As a reminder, GenX models the capacity reserve margin (aka capacity market) at the time-dependent level, and each constraint either stands for an overall market or a locality constraint.","category":"page"},{"location":"data-documentation.html#.2.6-ESR_prices.csv-1","page":"GenX Data","title":"3.2.6 ESR_prices.csv","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"This file includes the renewable/clean energy credit price of each modeled RPS/CES constraint. GenX will print this file only when RPS/CES is modeled and the shadow price can be obtained form the solver. The unit is /MWh.","category":"page"},{"location":"data-documentation.html#.2.7-ESR_Revenue.csv-1","page":"GenX Data","title":"3.2.7 ESR_Revenue.csv","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"This file includes the renewable/clean credit revenue earned by each generator listed in the input file. GenX will print this file only when RPS/CES is modeled and the shadow price can be obtained form the solver. Each row corresponds to a generator, and each column starting from the 6th to the second last is the total revenue earned from each RPS constraint. The revenue is calculated as the total annual generation (if elgible for the corresponding constraint) multiplied by the RPS/CES price. The last column is the total revenue received from all constraint. The unit is $.","category":"page"},{"location":"data-documentation.html#.2.8-SubsidyRevenue.csv-1","page":"GenX Data","title":"3.2.8 SubsidyRevenue.csv","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"This file includes subsidy revenue earned if a generator specified Min_Cap is provided in the input file. GenX will print this file only the shadow price can be obtained form the solver. Do not confuse this with the Minimum Capacity Carveout constraint, which is for a subset of generators, and a separate revenue term will be calculated in other files. The unit is $.","category":"page"},{"location":"data-documentation.html#Running-GenX-1","page":"GenX Data","title":"4 Running GenX","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"We require several software elements to run the GenX model. To maintain consistency with the software versions, we have created an environment that will install all required packages. The list of compatible package versions is given below. An up-to-date list of Julia packages can be found in thejuliaenv.jl file in the main GenX directory on github.","category":"page"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"CSV (v0.6.0)\nDataFrames (v0.20.2)\nJuMP (v0.21.3)\nLinearAlgebra\nMathProgBase (v0.7.8)\nStatsBase (v0.33.0)\nYAML (v0.4.3)\nClustering (v0.14.2)\nCombinatorics (v1.0.2)\nDistance (v0.10.2)\nDocumenter (v0.24.7)\nDocumenterTools (v0.1.9)","category":"page"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"Additionally, at least one of the below solver packages need to be installed.","category":"page"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"Gurobi (v0.7.6)\nCPLEX (v0.6.1)","category":"page"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"To begin, you need to have Julia (v1.1.0 or greater) installed. Next, download or clone the GenX repository on your machine in a directory named Genx. Create this new directory in a location where you wish to store the environment.","category":"page"},{"location":"data-documentation.html#.1-Least-cost-formulation-1","page":"GenX Data","title":"4.1 Least cost formulation","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"To run the least-cost formulation in GenX, user will need to perform the following tasks:","category":"page"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"Create settings file (.yml) that provides model and solver specifications.\nSpecify the path of the settings file and a GenX model in the Run.jl file.\nFrom the command line: julia Run.jl.","category":"page"},{"location":"data-documentation.html#.2-Modeling-to-Generate-Alternatives-formulation-1","page":"GenX Data","title":"4.2 Modeling to Generate Alternatives formulation","text":"","category":"section"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"To use the MGA algorithm, user will need to perform the following tasks:","category":"page"},{"location":"data-documentation.html#","page":"GenX Data","title":"GenX Data","text":"Add a Resource_Type column in the Generators_data.csv file denoting the type of each technology.\nAdd a MGA column in the Generators_data.csv file denoting the availability of the technology.\nActivate the ModelingToGenerateAlternatives flag in the GenX_settings.yml.\nSet the slack flag in the GenX_settings.yml file to the desirable level of slack.\nCreate a Rand_mga_objective_coefficients.csv file to provide random objective function coefficients for each MGA iteration. For each iteration, number of rows in the Rand_mga_objective_coefficients.csv file represents the number of distinct technology types while number of columns represent the number of model zones.\nSolve the model using Run.jl file.","category":"page"},{"location":"flexible-demand.html#Flexible-Demand-1","page":"Flexible Demand","title":"Flexible Demand","text":"","category":"section"},{"location":"flexible-demand.html#","page":"Flexible Demand","title":"Flexible Demand","text":"Modules = [GenX]\nPages = [\"flexible_demand.jl\"]","category":"page"},{"location":"flexible-demand.html#GenX.flexible_demand-Tuple{JuMP.Model,Dict}","page":"Flexible Demand","title":"GenX.flexible_demand","text":"flexible_demand(EP::Model, inputs::Dict)\n\nThis function defines the operating constraints for flexible demand resources. As implemented, flexible demand resources (y in mathcalDF) are characterized by: a) maximum deferrable demand as a fraction of available capacity in a particular time step t, rho^max_yzt, b) the maximum time this demand can be advanced and delayed, defined by parameters, tau^advance_yz and tau^delay_yz, respectively and c) the energy losses associated with shifting demand, eta_yz^dflex.\n\nTracking total deferred demand\n\nThe operational constraints governing flexible demand resources are as follows.\n\nThe first two constraints model keep track of inventory of deferred demand in each time step.  Specifically, the amount of deferred demand remaining to be served (Gamma_yzt) depends on the amount in the previous time step minus the served demand during time step t (Theta_yzt) while accounting for energy losses associated with demand flexibility, plus the demand that has been deferred during the current time step (Pi_yzt). Note that variable Gamma_yzt in mathbbR, forall y in mathcalDF t  in mathcalT. Similar to hydro inventory or storage state of charge constraints, for the first time step of the year (or each representative period), we define the deferred demand level based on level of deferred demand in the last time step of the year (or each representative period).\n\nbeginaligned\nlabeleqDflexSocBalinterior\nGamma_yzt = Gamma_yzt-1 -eta_yz^dflexTheta_yzt +Pi_yzt hspace4 cm  forall y in mathcalDF z in mathcalZ t in mathcalT^interior \nlabeleqDflexSocBalstart\nGamma_yzt = Gamma_yzt +tau^period-1 -eta_yz^dflexTheta_yzt +Pi_yzt hspace4 cm  forall y in mathcalDF z in mathcalZ t in mathcalT^start\nendaligned\n\nBounds on available demand flexibility\n\nAt any given time step, the amount of demand that can be shifted or deferred cannot exceed the maximum deferrable demand, defined by product of the availability factor (rho^max_yt) times the available capacity(Delta^total_yz).\n\nbeginaligned\nPi_yt leq rho^max_yztDelta_yz hspace4 cm  forall y in mathcalDF z in mathcalZ t in mathcalT\nendaligned\n\nMaximum time delay and advancements\n\nDelayed demand must then be served within a fixed number of time steps. This is done by enforcing the sum of demand satisfied (Theta_yzt) in the following tau^delay_yz time steps (e.g., t + 1 to t + tau^delay_yz) to be greater than or equal to the level of energy deferred during time step t.\n\nbeginaligned\nsum_e=t+1^t+tau^delay_yzTheta_yze geq Gamma_yzt\n    hspace4 cm  forall y in mathcalDFz in mathcalZ t in mathcalT\nendaligned\n\nA similar constraints maximum time steps of demand advancement. This is done by enforcing the sum of demand deferred (Pi_yt) in the following tau^advance_y time steps (e.g., t + 1 to t + tau^advance_y) to be greater than or equal to the total level of energy deferred during time t (-Gamma_yt). The negative sign is included to account for the established sign convention that treat demand deferred in advance of the actual demand is defined to be negative.\n\nbeginaligned\nsum_e=t+1^t+tau^advance_yzPi_yze geq -Gamma_yzt\n    hspace4 cm  forall y in mathcalDF z in mathcalZ t in mathcalT\nendaligned\n\nIf t is first time step of the year (or the first time step of the representative period), then the above two constraints are implemented to look back over the last n time steps, starting with the last time step of the year (or the last time step of the representative period). This time-wrapping implementation is similar to the time-wrapping implementations used for defining the storage balance constraints for hydropower reservoir resources and energy storage resources.\n\n\n\n\n\n","category":"method"},{"location":"write-outputs.html#Functions-for-Writing-the-Different-Results/Outputs-to-Separate-Files-1","page":"GenX Outputs","title":"Functions for Writing the Different Results/Outputs to Separate Files","text":"","category":"section"},{"location":"write-outputs.html#","page":"GenX Outputs","title":"GenX Outputs","text":"Modules = [GenX]\nPages = [\"write_outputs.jl\"]","category":"page"},{"location":"write-outputs.html#GenX.write_outputs-Tuple{JuMP.Model,AbstractString,Dict,Dict}","page":"GenX Outputs","title":"GenX.write_outputs","text":"write_outputs(EP::Model, path::AbstractString, setup::Dict, inputs::Dict)\n\nFunction for the entry-point for writing the different output files. From here, onward several other functions are called, each for writing specific output files, like costs, capacities, etc.\n\n\n\n\n\n","category":"method"},{"location":"write-outputs.html#Write-Status-1","page":"GenX Outputs","title":"Write Status","text":"","category":"section"},{"location":"write-outputs.html#","page":"GenX Outputs","title":"GenX Outputs","text":"Modules = [GenX]\nPages = [\"write_status.jl\"]","category":"page"},{"location":"write-outputs.html#GenX.write_status-Tuple{AbstractString,AbstractString,Dict,JuMP.Model}","page":"GenX Outputs","title":"GenX.write_status","text":"write_status(path::AbstractString, sep::AbstractString, inputs::Dict, EP::Model)\n\nFunction for writing the final solve status of the optimization problem solved\n\n\n\n\n\n","category":"method"},{"location":"write-outputs.html#Write-Costs-1","page":"GenX Outputs","title":"Write Costs","text":"","category":"section"},{"location":"write-outputs.html#","page":"GenX Outputs","title":"GenX Outputs","text":"Modules = [GenX]\nPages = [\"write_costs.jl\"]","category":"page"},{"location":"write-outputs.html#GenX.write_costs-Tuple{AbstractString,AbstractString,Dict,Dict,JuMP.Model}","page":"GenX Outputs","title":"GenX.write_costs","text":"write_costs(path::AbstractString, sep::AbstractString, inputs::Dict, setup::Dict, EP::Model)\n\nFunction for writing the costs pertaining to the objective function (fixed, variable O & M etc.)\n\n\n\n\n\n","category":"method"},{"location":"write-outputs.html#Write-Capacities-1","page":"GenX Outputs","title":"Write Capacities","text":"","category":"section"},{"location":"write-outputs.html#","page":"GenX Outputs","title":"GenX Outputs","text":"Modules = [GenX]\nPages = [\"write_capacity.jl\"]","category":"page"},{"location":"write-outputs.html#GenX.write_capacity-Tuple{AbstractString,AbstractString,Dict,Dict,JuMP.Model}","page":"GenX Outputs","title":"GenX.write_capacity","text":"write_capacity(path::AbstractString, sep::AbstractString, inputs::Dict, setup::Dict, EP::Model))\n\nFunction for writing the diferent capacities for the different generation technologies (starting capacities or, existing capacities, retired capacities, and new-built capacities)\n\n\n\n\n\n","category":"method"},{"location":"write-outputs.html#Write-Charge-Values-1","page":"GenX Outputs","title":"Write Charge Values","text":"","category":"section"},{"location":"write-outputs.html#","page":"GenX Outputs","title":"GenX Outputs","text":"Modules = [GenX]\nPages = [\"write_charge.jl\"]","category":"page"},{"location":"write-outputs.html#GenX.write_charge-Tuple{AbstractString,AbstractString,Dict,Dict,JuMP.Model}","page":"GenX Outputs","title":"GenX.write_charge","text":"write_charge(path::AbstractString, sep::AbstractString, inputs::Dict, setup::Dict, EP::Model)\n\nFunction for writing the charging energy values of the different storage technologies.\n\n\n\n\n\n","category":"method"},{"location":"write-outputs.html#Write-Storage-1","page":"GenX Outputs","title":"Write Storage","text":"","category":"section"},{"location":"write-outputs.html#","page":"GenX Outputs","title":"GenX Outputs","text":"Modules = [GenX]\nPages = [\"write_storage.jl\"]","category":"page"},{"location":"write-outputs.html#GenX.write_storage-Tuple{AbstractString,AbstractString,Dict,Dict,JuMP.Model}","page":"GenX Outputs","title":"GenX.write_storage","text":"write_storage(path::AbstractString, sep::AbstractString, inputs::Dict,setup::Dict, EP::Model)\n\nFunction for writing the capacities of different storage technologies, including hydro reservoir, flexible storage tech etc.\n\n\n\n\n\n","category":"method"},{"location":"write-outputs.html#Write-Power-1","page":"GenX Outputs","title":"Write Power","text":"","category":"section"},{"location":"write-outputs.html#","page":"GenX Outputs","title":"GenX Outputs","text":"Modules = [GenX]\nPages = [\"write_power.jl\"]","category":"page"},{"location":"write-outputs.html#GenX.write_power-Tuple{AbstractString,AbstractString,Dict,Dict,JuMP.Model}","page":"GenX Outputs","title":"GenX.write_power","text":"write_power(path::AbstractString, sep::AbstractString, inputs::Dict, setup::Dict, EP::Model)\n\nFunction for writing the different values of power generated by the different technologies in operation\n\n\n\n\n\n","category":"method"},{"location":"write-outputs.html#Write-Curtailment-1","page":"GenX Outputs","title":"Write Curtailment","text":"","category":"section"},{"location":"write-outputs.html#","page":"GenX Outputs","title":"GenX Outputs","text":"Modules = [GenX]\nPages = [\"write_curtailment.jl\"]","category":"page"},{"location":"write-outputs.html#GenX.write_curtailment-Tuple{AbstractString,AbstractString,Dict,Dict,JuMP.Model}","page":"GenX Outputs","title":"GenX.write_curtailment","text":"write_curtailment(path::AbstractString, sep::AbstractString, inputs::Dict, setup::Dict, EP::Model)\n\nFunction for writing the curtailment values of the different variable renewable resources.\n\n\n\n\n\n","category":"method"},{"location":"write-outputs.html#","page":"GenX Outputs","title":"GenX Outputs","text":"","category":"page"},{"location":"time-domain-reduction.html#Time-Domain-Reduction-1","page":"Time Domain Reduction","title":"Time Domain Reduction","text":"","category":"section"},{"location":"time-domain-reduction.html#","page":"Time Domain Reduction","title":"Time Domain Reduction","text":"Modules = [GenX]\nPages = [\"time_domain_reduction.jl\"]\nOrder = [:type, :function]","category":"page"},{"location":"time-domain-reduction.html#GenX.cluster_inputs","page":"Time Domain Reduction","title":"GenX.cluster_inputs","text":"cluster_inputs(inpath, v=false, norm_plot=false, silh_plot=false, res_plots=false, indiv_plots=false, pair_plots=false)\n\nUse kmeans or kemoids to cluster raw load profiles and resource capacity factor profiles into representative periods. Use Extreme Periods to capture noteworthy periods or periods with notably poor fits.\n\nInputs\n\nIn Load_data.csv, include the following:\n\nTimestepsperRep_Period - Typically 168 timesteps (e.g., hours) per period, this designates the length   of each representative period.\nUseExtremePeriods - Either 1 or 0, this designates whether or not to include  outliers (by performance or load/resource extreme) as their own representative periods.  This setting automatically includes the periods with maximum load, minimum solar cf and  minimum wind cf as extreme periods.\nClusterMethod - Either 'kmeans' or 'kmedoids', this designates the method used to cluster  periods and determine each point's representative period.\nScalingMethod - Either 'N' or 'S', this designates directs the module to normalize ([0,1])  or standardize (mean 0, variance 1) the input data.\nMinPeriods - The minimum number of periods used to represent the input data. If using  UseExtremePeriods, this must be at least three. If IterativelyAddPeriods if off,  this will be the total number of periods.\nMaxPeriods - The maximum number of periods - both clustered periods and extreme periods -  that may be used to represent the input data.\nIterativelyAddPeriods - Either 1 or 0, this designates whether or not to add periods  until the error threshold between input data and represented data is met or the maximum  number of periods is reached.\nThreshold - Iterative period addition will end if the period farthest (Euclidean Distance)  from its representative period is within this percentage of the total possible error (for normalization)  or ~95% of the total possible error (for standardization). E.g., for a threshold of 0.01,  every period must be within 1% of the spread of possible error before the clustering  iterations will terminate (or until the max number of periods is reached).\nIterateMethod - Either 'cluster' or 'extreme', this designates whether to add clusters to  the kmeans/kmedoids method or to set aside the worst-fitting periods as a new extreme periods.\nnReps - The number of times to repeat each kmeans/kmedoids clustering at the same setting.\nLoadWeight - Default 1, this is an optional multiplier on load columns in order to prioritize  better fits for load profiles over resource capacity factor profiles.\nWeightTotal - Default 8760, the sum to which the relative weights of representative periods will be scaled.\nClusterFuelPrices - Either 1 or 0, this indicates whether or not to use the fuel price  time series in Fuelsdata.csv in the clustering process. If 'no', this function will still write  Fuelsdata_clustered.csv with reshaped fuel prices based on the number and size of the  representative weeks, assuming a constant time series of fuel prices with length equal to the  number of timesteps in the raw input data.\n\n\n\n\n\n","category":"function"},{"location":"time-domain-reduction.html#GenX.RemoveConstCols","page":"Time Domain Reduction","title":"GenX.RemoveConstCols","text":"RemoveConstCols(all_profiles, all_col_names)\n\nRemove and store the columns that do not vary during the period.\n\n\n\n\n\n","category":"function"},{"location":"time-domain-reduction.html#GenX.check_condition-NTuple{5,Any}","page":"Time Domain Reduction","title":"GenX.check_condition","text":"check_condition(Threshold, R, OldColNames, ScalingMethod, TimestepsPerRepPeriod)\n\nCheck whether the greatest Euclidean deviation in the input data and the clustered representation is within a given proportion of the \"maximum\" possible deviation.\n\n(1 for Normalization covers 100%, 4 for Standardization covers ~95%)\n\n\n\n\n\n","category":"method"},{"location":"time-domain-reduction.html#GenX.cluster","page":"Time Domain Reduction","title":"GenX.cluster","text":"cluster(ClusterMethod, ClusteringInputDF, NClusters, nIters)\n\nGet representative periods using cluster centers from kmeans or kmedoids.\n\nK-Means: https://juliastats.org/Clustering.jl/dev/kmeans.html\n\nK-Medoids:  https://juliastats.org/Clustering.jl/stable/kmedoids.html\n\n\n\n\n\n","category":"function"},{"location":"time-domain-reduction.html#GenX.get_absolute_extreme-NTuple{4,Any}","page":"Time Domain Reduction","title":"GenX.get_absolute_extreme","text":"get_absolute_extreme(DF, statKey, col_names, ConstCols)\n\nGet the period index of the single timestep with the minimum or maximum load or capacity factor.\n\n\n\n\n\n","category":"method"},{"location":"time-domain-reduction.html#GenX.get_extreme_period","page":"Time Domain Reduction","title":"GenX.get_extreme_period","text":"get_extreme_period(DF, GDF, profKey, typeKey, statKey,\n   ConstCols, load_col_names, solar_col_names, wind_col_names)\n\nIdentify extreme week by specification of profile type (Load, PV, Wind), measurement type (absolute (timestep with min/max value) vs. integral (period with min/max summed value)), and statistic (minimum or maximum). I.e., the user could want the hour with the most load across the whole system to be included among the extreme periods. They would select \"Load\", \"System, \"Absolute, and \"Max\".\n\n\n\n\n\n","category":"function"},{"location":"time-domain-reduction.html#GenX.get_integral_extreme-NTuple{4,Any}","page":"Time Domain Reduction","title":"GenX.get_integral_extreme","text":"get_integral_extreme(GDF, statKey, col_names, ConstCols)\n\nGet the period index with the minimum or maximum load or capacity factor summed over the period.\n\n\n\n\n\n","category":"method"},{"location":"time-domain-reduction.html#GenX.get_worst_period_idx-Tuple{Any}","page":"Time Domain Reduction","title":"GenX.get_worst_period_idx","text":"get_worst_period_idx(R)\n\nGet the index of the period that is farthest from its representative period by Euclidean distance.\n\n\n\n\n\n","category":"method"},{"location":"time-domain-reduction.html#GenX.parse_data-Tuple{Any}","page":"Time Domain Reduction","title":"GenX.parse_data","text":"parse_data(myinputs)\n\nGet load, solar, wind, and other curves from the input data.\n\n\n\n\n\n","category":"method"},{"location":"time-domain-reduction.html#GenX.rmse_score-Tuple{Any,Any}","page":"Time Domain Reduction","title":"GenX.rmse_score","text":"rmse_score(y_true, y_pred)\n\nCalculates Root Mean Square Error.\n\nRMSE = sqrtfrac1nSigma_i=1^nBig(fracd_i -f_isigma_iBig)^2\n\nCITE: https://towardsdatascience.com/julia-for-data-science-how-to-build-linear-regression-from-scratch-with-julia-6d1521a00611\n\n\n\n\n\n","category":"method"},{"location":"time-domain-reduction.html#GenX.scale_weights","page":"Time Domain Reduction","title":"GenX.scale_weights","text":"scale_weights(W, H)\n\nLinearly scale weights W such that they sum to the desired number of timesteps (hours) H.\n\nw_j leftarrow H cdot fracw_jsum_i w_i    forall w_j in W\n\n\n\n\n\n","category":"function"},{"location":"index.html#GenX-Documentation-1","page":"Welcome Page","title":"GenX Documentation","text":"","category":"section"},{"location":"index.html#","page":"Welcome Page","title":"Welcome Page","text":"CurrentModule = GenX","category":"page"},{"location":"index.html#Overview-1","page":"Welcome Page","title":"Overview","text":"","category":"section"},{"location":"index.html#","page":"Welcome Page","title":"Welcome Page","text":"GenX is a highly-configurable electricity resource capacity expansion model that incorporates several state-of-the-art practices in electricity system planning to offer improved decision support for a changing electricity landscape. ","category":"page"},{"location":"index.html#","page":"Welcome Page","title":"Welcome Page","text":"GenX is a constrained linear or mixed integer linear optimization model that determines the portfolio of electricity generation, storage, transmission, and demand-side resource investments and operational decisions to meet electricity demand in one or more future planning years at lowest cost subject to a variety of power system operational constraints and specified policy constraints, such as CO2 emissions limits.","category":"page"},{"location":"index.html#","page":"Welcome Page","title":"Welcome Page","text":"Importantly, GenX can be configured with varying level of model resolution and scope, with regards to chronological variability of electricity demand and renewable energy availability, power system operational detail and unit commitment constraints, and transmission network representation, depending on the planning problem or policy question to be studied. As such, the GenX model is designed to be highly flexible and configurable, with several different degrees of resolution possible on each of these key dimensions. The model is capable of representing a full range of conventional and novel electricity resources, including thermal generators, variable renewable resources (wind and solar), run-of-river, reservoir and pumped-storage hydroelectric generators, energy storage devices, demand-side flexibility, and several advanced technologies such as long-duration energy storage.","category":"page"},{"location":"index.html#Requirements-1","page":"Welcome Page","title":"Requirements","text":"","category":"section"},{"location":"index.html#","page":"Welcome Page","title":"Welcome Page","text":"GenX.jl runs on Julia v1.3.0 and JuMP v0.21.3, and is currently setup to use one of the following solvers: A) Gurobi, and B) CPLEX. Note that using Gurobi and CPLEX requires a valid license on the host machine. Compatibility with open source solvers Clp and GLPK will be added shortly. The file juliaenv.jl in the parent directory lists all of the packages and their versions needed to run GenX. You can see all of the packages installed in your Julia environment and their version numbers by running pkg> status on the package manager command line in the Jula REPL.","category":"page"},{"location":"index.html#","page":"Welcome Page","title":"Welcome Page","text":"You can see all of the packages installed in your Julia environment and their version numbers by running pkg> status on the package manager command line.","category":"page"},{"location":"index.html#Running-an-Instance-of-GenX-1","page":"Welcome Page","title":"Running an Instance of GenX","text":"","category":"section"},{"location":"index.html#","page":"Welcome Page","title":"Welcome Page","text":"Download or clone the GenX repository on your machine in a directory named 'GenX'. Create this new directory in a location where you wish to store the GenXJulEnv environment.","category":"page"},{"location":"index.html#","page":"Welcome Page","title":"Welcome Page","text":"The Runtest.jl file in each of the example sub-folders within `ExampleSystems/provides an example of how to use GenX.jl for capacity expansion modeling. The following are the main steps performed in the Run_test.jl script: 1.\tEstablish path to environment setup files and GenX source files. 2.\tRead in model settingsGenX_Settings.yml` from the example directory.","category":"page"},{"location":"index.html#","page":"Welcome Page","title":"Welcome Page","text":"Configure solver settings.","category":"page"},{"location":"index.html#","page":"Welcome Page","title":"Welcome Page","text":"4.\tLoad the model inputs from the example directory and perform time-domain clustering if required. 5.\tGenerate a GenX model instance. 6.\tSolve the model. 7.\tWrite the output files to a specified directory.","category":"page"},{"location":"index.html#","page":"Welcome Page","title":"Welcome Page","text":"Here are step-by-step instructions for running Runtest.jl: 1.\tStart an instance of the Julia kernel. 2.\tMake your present working directory to be where the Runtest.jl is located. To do this, you can use the Julia command julia> cd(“/path/to/directory/containing/file), using the actual pathname of the directory containing Runtest.jl. Note that all your inputs files should be in this directory in addition to Runtest.jl. Details about the required input files can be found in the documentation linked above or in the examples provided in the folder Example_Systems/. You can check your present working directory by running the command julia> pwd(). 3.\tRun the script by executing the command julia> include(“Run_test.jl”). 4.\tAfter the script runs to completion, results will be written to a folder called “Results”, also located in the same directory as Run_test.jl.","category":"page"},{"location":"index.html#","page":"Welcome Page","title":"Welcome Page","text":"Note that if you have not already installed the required Julia packages, you are using a version of JuMP other than v0.21.4, or you do not have a valid Gurobi license on your host machine, you will receive an error message and Run_test.jl will not run to completion.","category":"page"},{"location":"index.html#GenX-Team-1","page":"Welcome Page","title":"GenX Team","text":"","category":"section"},{"location":"index.html#","page":"Welcome Page","title":"Welcome Page","text":"GenX has been developed jointly by researchers at the MIT Energy Initiative and the ZERO lab at Princeton University. Key contributors include Nestor A. Sepulveda, Jesse D. Jenkins,  Dharik S. Mallapragada, Aaron M. Schwartz, Neha S. Patankar, Qingyu Xu, Jack Morris, Sambuddha Chakrabarti.","category":"page"},{"location":"index.html#Contents-1","page":"Welcome Page","title":"Contents","text":"","category":"section"},{"location":"index.html#","page":"Welcome Page","title":"Welcome Page","text":"","category":"page"},{"location":"index.html#Index-1","page":"Welcome Page","title":"Index","text":"","category":"section"},{"location":"index.html#","page":"Welcome Page","title":"Welcome Page","text":"","category":"page"},{"location":"modeling-to-generate-alternatives.html#Modeling-to-Generate-Alternatives-1","page":"Modeling to Generate Alternatives","title":"Modeling to Generate Alternatives","text":"","category":"section"},{"location":"modeling-to-generate-alternatives.html#","page":"Modeling to Generate Alternatives","title":"Modeling to Generate Alternatives","text":"Modules = [GenX]\nPages = [\"modeling_to_generate_alternatives.jl\"]","category":"page"}]
}
